drop table if exists t1, t2, t3;
create table t1(a int primary key, b int, c int, d int, key k1(b,c));
create table t2(a int primary key, b int, c int, d int, key k2(b,c));
create table t3(a int primary key, b int, c int, d int, key k3(b,c));
explain select/*+index(t1 k1)*/ * from t1 where b = 1 order by b, c;
Query Plan
=====================================
|ID|OPERATOR  |NAME  |EST. ROWS|COST|
-------------------------------------
|0 |TABLE SCAN|t1(k1)|1        |91  |
=====================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)

explain select/*+index(t1 k1), NO_USE_HASH_AGGREGATION*/ * from t1 where b = 1 group by b, c;
Query Plan
=========================================
|ID|OPERATOR      |NAME  |EST. ROWS|COST|
-----------------------------------------
|0 |MERGE GROUP BY|      |1        |91  |
|1 | TABLE SCAN   |t1(k1)|1        |91  |
=========================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), rowset=256, 
      group([t1.c]), agg_func(nil)
  1 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)

explain select/*+index(t1 k1)*/ * from t1 where b = 1 order by c;
Query Plan
=====================================
|ID|OPERATOR  |NAME  |EST. ROWS|COST|
-------------------------------------
|0 |TABLE SCAN|t1(k1)|1        |91  |
=====================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)

explain select/*+index(t1 k1), NO_USE_HASH_AGGREGATION*/ * from t1 where b = 1 group by c;
Query Plan
=========================================
|ID|OPERATOR      |NAME  |EST. ROWS|COST|
-----------------------------------------
|0 |MERGE GROUP BY|      |1        |91  |
|1 | TABLE SCAN   |t1(k1)|1        |91  |
=========================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), rowset=256, 
      group([t1.c]), agg_func(nil)
  1 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)

explain select/*+index(t1 k1)*/ * from t1 where b = a order by b, a;
Query Plan
=====================================
|ID|OPERATOR  |NAME  |EST. ROWS|COST|
-------------------------------------
|0 |TABLE SCAN|t1(k1)|1        |91  |
=====================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter([t1.b = t1.a]), rowset=256, 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)

explain select/*+index(t1 k1), NO_USE_HASH_AGGREGATION*/ * from t1 where b = a group by a, b;
Query Plan
=====================================
|ID|OPERATOR  |NAME  |EST. ROWS|COST|
-------------------------------------
|0 |TABLE SCAN|t1(k1)|1        |91  |
=====================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter([t1.b = t1.a]), rowset=256, 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)

explain select/*+index(t1 k1), index(t2 k2)*/ * from t1, t2 where t1.b = t2.b and t1.c = t2.c order by t1.b, t1.c;
Query Plan
==================================================
|ID|OPERATOR               |NAME  |EST. ROWS|COST|
--------------------------------------------------
|0 |NESTED-LOOP JOIN       |      |1        |102 |
|1 | TABLE SCAN            |t1(k1)|1        |91  |
|2 | DISTRIBUTED TABLE SCAN|t2(k2)|1        |10  |
==================================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c], [t2.d]), filter(nil), rowset=256, 
      conds(nil), nl_params_([t1.b], [t1.c])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)
  2 - output([t2.a], [t2.b], [t2.c], [t2.d]), filter(nil), rowset=256, 
      access([GROUP_ID], [t2.a], [t2.b], [t2.c], [t2.d]), partitions(p0)

explain select/*+index(t1 k1), index(t2 k2), NO_USE_HASH_AGGREGATION*/ * from t1, t2 where t1.b = t2.b and t1.c = t2.c group by t1.b, t1.c;
Query Plan
===================================================
|ID|OPERATOR                |NAME  |EST. ROWS|COST|
---------------------------------------------------
|0 |MERGE GROUP BY          |      |1        |102 |
|1 | NESTED-LOOP JOIN       |      |1        |102 |
|2 |  TABLE SCAN            |t1(k1)|1        |91  |
|3 |  DISTRIBUTED TABLE SCAN|t2(k2)|1        |10  |
===================================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c], [t2.d]), filter(nil), rowset=256, 
      group([t1.b], [t1.c]), agg_func(nil)
  1 - output([t1.b], [t1.c], [t1.a], [t1.d], [t2.a], [t2.b], [t2.c], [t2.d]), filter(nil), rowset=256, 
      conds(nil), nl_params_([t1.b], [t1.c])
  2 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)
  3 - output([t2.a], [t2.b], [t2.c], [t2.d]), filter(nil), rowset=256, 
      access([GROUP_ID], [t2.a], [t2.b], [t2.c], [t2.d]), partitions(p0)

explain select/*+index(t1 k1), index(t2 k2)*/ * from t1, t2 where t1.b = t2.b and t1.c = t2.c order by t2.b, t2.c;
Query Plan
==================================================
|ID|OPERATOR               |NAME  |EST. ROWS|COST|
--------------------------------------------------
|0 |NESTED-LOOP JOIN       |      |1        |102 |
|1 | TABLE SCAN            |t1(k1)|1        |91  |
|2 | DISTRIBUTED TABLE SCAN|t2(k2)|1        |10  |
==================================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c], [t2.d]), filter(nil), rowset=256, 
      conds(nil), nl_params_([t1.b], [t1.c])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)
  2 - output([t2.a], [t2.b], [t2.c], [t2.d]), filter(nil), rowset=256, 
      access([GROUP_ID], [t2.a], [t2.b], [t2.c], [t2.d]), partitions(p0)

explain select/*+index(t1 k1), index(t2 k2), NO_USE_HASH_AGGREGATION*/ * from t1, t2 where t1.b = t2.b and t1.c = t2.c group by t2.b, t2.c;
Query Plan
===================================================
|ID|OPERATOR                |NAME  |EST. ROWS|COST|
---------------------------------------------------
|0 |MERGE GROUP BY          |      |1        |102 |
|1 | NESTED-LOOP JOIN       |      |1        |102 |
|2 |  TABLE SCAN            |t1(k1)|1        |91  |
|3 |  DISTRIBUTED TABLE SCAN|t2(k2)|1        |10  |
===================================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c], [t2.d]), filter(nil), rowset=256, 
      group([t2.b], [t2.c]), agg_func(nil)
  1 - output([t2.b], [t2.c], [t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.d]), filter(nil), rowset=256, 
      conds(nil), nl_params_([t1.b], [t1.c])
  2 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)
  3 - output([t2.a], [t2.b], [t2.c], [t2.d]), filter(nil), rowset=256, 
      access([GROUP_ID], [t2.a], [t2.b], [t2.c], [t2.d]), partitions(p0)

explain select/*+index(t1 k1), index(t2 k2)*/ * from t1, t2 where t1.b = t2.b and t1.c = t2.c order by t1.b, t1.c, t2.b, t2.c;
Query Plan
==================================================
|ID|OPERATOR               |NAME  |EST. ROWS|COST|
--------------------------------------------------
|0 |NESTED-LOOP JOIN       |      |1        |102 |
|1 | TABLE SCAN            |t1(k1)|1        |91  |
|2 | DISTRIBUTED TABLE SCAN|t2(k2)|1        |10  |
==================================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c], [t2.d]), filter(nil), rowset=256, 
      conds(nil), nl_params_([t1.b], [t1.c])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)
  2 - output([t2.a], [t2.b], [t2.c], [t2.d]), filter(nil), rowset=256, 
      access([GROUP_ID], [t2.a], [t2.b], [t2.c], [t2.d]), partitions(p0)

explain select/*+index(t1 k1), index(t2 k2), NO_USE_HASH_AGGREGATION*/ * from t1, t2 where t1.b = t2.b and t1.c = t2.c group by t1.b, t1.c, t2.b, t2.c;
Query Plan
===================================================
|ID|OPERATOR                |NAME  |EST. ROWS|COST|
---------------------------------------------------
|0 |MERGE GROUP BY          |      |1        |102 |
|1 | NESTED-LOOP JOIN       |      |1        |102 |
|2 |  TABLE SCAN            |t1(k1)|1        |91  |
|3 |  DISTRIBUTED TABLE SCAN|t2(k2)|1        |10  |
===================================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c], [t2.d]), filter(nil), rowset=256, 
      group([t1.b], [t1.c], [t2.b], [t2.c]), agg_func(nil)
  1 - output([t1.b], [t1.c], [t2.b], [t2.c], [t1.a], [t1.d], [t2.a], [t2.d]), filter(nil), rowset=256, 
      conds(nil), nl_params_([t1.b], [t1.c])
  2 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)
  3 - output([t2.a], [t2.b], [t2.c], [t2.d]), filter(nil), rowset=256, 
      access([GROUP_ID], [t2.a], [t2.b], [t2.c], [t2.d]), partitions(p0)

explain select/*+index(t1 k1), index(t2 k2)*/ * from t1, t2 where t1.b = t2.b and t1.c = t2.c order by t1.b, t2.b, t1.c, t2.c;
Query Plan
==================================================
|ID|OPERATOR               |NAME  |EST. ROWS|COST|
--------------------------------------------------
|0 |NESTED-LOOP JOIN       |      |1        |102 |
|1 | TABLE SCAN            |t1(k1)|1        |91  |
|2 | DISTRIBUTED TABLE SCAN|t2(k2)|1        |10  |
==================================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c], [t2.d]), filter(nil), rowset=256, 
      conds(nil), nl_params_([t1.b], [t1.c])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)
  2 - output([t2.a], [t2.b], [t2.c], [t2.d]), filter(nil), rowset=256, 
      access([GROUP_ID], [t2.a], [t2.b], [t2.c], [t2.d]), partitions(p0)

explain select/*+index(t1 k1), index(t2 k2), NO_USE_HASH_AGGREGATION*/ * from t1, t2 where t1.b = t2.b and t1.c = t2.c group by t1.b, t2.b, t1.c, t2.c;
Query Plan
===================================================
|ID|OPERATOR                |NAME  |EST. ROWS|COST|
---------------------------------------------------
|0 |MERGE GROUP BY          |      |1        |102 |
|1 | NESTED-LOOP JOIN       |      |1        |102 |
|2 |  TABLE SCAN            |t1(k1)|1        |91  |
|3 |  DISTRIBUTED TABLE SCAN|t2(k2)|1        |10  |
===================================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c], [t2.d]), filter(nil), rowset=256, 
      group([t1.b], [t1.c], [t2.b], [t2.c]), agg_func(nil)
  1 - output([t1.b], [t1.c], [t2.b], [t2.c], [t1.a], [t1.d], [t2.a], [t2.d]), filter(nil), rowset=256, 
      conds(nil), nl_params_([t1.b], [t1.c])
  2 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)
  3 - output([t2.a], [t2.b], [t2.c], [t2.d]), filter(nil), rowset=256, 
      access([GROUP_ID], [t2.a], [t2.b], [t2.c], [t2.d]), partitions(p0)

explain select/*+leading(t1,t2,t3), index(t1 k1), index(t2 k2), index(t3 k3)*/* from t1, t2, t3 
where t1.b = t2.b and t1.c = t2.c and t1.b = t3.b and t1.c = t3.c order by t1.b, t1.c;
Query Plan
===================================================
|ID|OPERATOR                |NAME  |EST. ROWS|COST|
---------------------------------------------------
|0 |NESTED-LOOP JOIN        |      |1        |113 |
|1 | NESTED-LOOP JOIN       |      |1        |102 |
|2 |  TABLE SCAN            |t1(k1)|1        |91  |
|3 |  DISTRIBUTED TABLE SCAN|t2(k2)|1        |10  |
|4 | DISTRIBUTED TABLE SCAN |t3(k3)|1        |10  |
===================================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c], [t2.d], [t3.a], [t3.b], [t3.c], [t3.d]), filter(nil), rowset=256, 
      conds(nil), nl_params_([t1.b], [t1.c])
  1 - output([t1.b], [t1.c], [t1.a], [t1.d], [t2.a], [t2.b], [t2.c], [t2.d]), filter(nil), rowset=256,
      conds(nil), nl_params_([t1.b], [t1.c])
  2 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)
  3 - output([t2.a], [t2.b], [t2.c], [t2.d]), filter(nil), rowset=256, 
      access([GROUP_ID], [t2.a], [t2.b], [t2.c], [t2.d]), partitions(p0)
  4 - output([t3.a], [t3.b], [t3.c], [t3.d]), filter(nil), rowset=256, 
      access([GROUP_ID], [t3.a], [t3.b], [t3.c], [t3.d]), partitions(p0)

explain select/*+leading(t1,t2,t3), index(t1 k1), index(t2 k2), index(t3 k3), NO_USE_HASH_AGGREGATION*/* from t1, t2, t3 
where t1.b = t2.b and t1.c = t2.c and t1.b = t3.b and t1.c = t3.c group by t1.b, t1.c;
Query Plan
====================================================
|ID|OPERATOR                 |NAME  |EST. ROWS|COST|
----------------------------------------------------
|0 |MERGE GROUP BY           |      |1        |113 |
|1 | NESTED-LOOP JOIN        |      |1        |113 |
|2 |  NESTED-LOOP JOIN       |      |1        |102 |
|3 |   TABLE SCAN            |t1(k1)|1        |91  |
|4 |   DISTRIBUTED TABLE SCAN|t2(k2)|1        |10  |
|5 |  DISTRIBUTED TABLE SCAN |t3(k3)|1        |10  |
====================================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c], [t2.d], [t3.a], [t3.b], [t3.c], [t3.d]), filter(nil), rowset=256, 
      group([t1.b], [t1.c]), agg_func(nil)
  1 - output([t1.b], [t1.c], [t1.a], [t1.d], [t2.a], [t2.b], [t2.c], [t2.d], [t3.a], [t3.b], [t3.c], [t3.d]), filter(nil), rowset=256, 
      conds(nil), nl_params_([t1.b], [t1.c])
  2 - output([t1.b], [t1.c], [t1.a], [t1.d], [t2.a], [t2.b], [t2.c], [t2.d]), filter(nil), rowset=256, 
      conds(nil), nl_params_([t1.b], [t1.c])
  3 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)
  4 - output([t2.a], [t2.b], [t2.c], [t2.d]), filter(nil), rowset=256, 
      access([GROUP_ID], [t2.a], [t2.b], [t2.c], [t2.d]), partitions(p0)
  5 - output([t3.a], [t3.b], [t3.c], [t3.d]), filter(nil), rowset=256, 
      access([GROUP_ID], [t3.a], [t3.b], [t3.c], [t3.d]), partitions(p0)

explain select/*+leading(t1,t2,t3), index(t1 k1), index(t2 k2), index(t3 k3)*/* from t1, t2, t3 
where t1.b = t2.b and t1.c = t2.c and t1.b = t3.b and t1.c = t3.c order by t2.b, t2.c;
Query Plan
===================================================
|ID|OPERATOR                |NAME  |EST. ROWS|COST|
---------------------------------------------------
|0 |NESTED-LOOP JOIN        |      |1        |113 |
|1 | NESTED-LOOP JOIN       |      |1        |102 |
|2 |  TABLE SCAN            |t1(k1)|1        |91  |
|3 |  DISTRIBUTED TABLE SCAN|t2(k2)|1        |10  |
|4 | DISTRIBUTED TABLE SCAN |t3(k3)|1        |10  |
===================================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c], [t2.d], [t3.a], [t3.b], [t3.c], [t3.d]), filter(nil), rowset=256, 
      conds(nil), nl_params_([t1.b], [t1.c])
  1 - output([t1.b], [t1.c], [t1.a], [t1.d], [t2.a], [t2.b], [t2.c], [t2.d]), filter(nil), rowset=256,
      conds(nil), nl_params_([t1.b], [t1.c])
  2 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)
  3 - output([t2.a], [t2.b], [t2.c], [t2.d]), filter(nil), rowset=256, 
      access([GROUP_ID], [t2.a], [t2.b], [t2.c], [t2.d]), partitions(p0)
  4 - output([t3.a], [t3.b], [t3.c], [t3.d]), filter(nil), rowset=256, 
      access([GROUP_ID], [t3.a], [t3.b], [t3.c], [t3.d]), partitions(p0)

explain select/*+leading(t1,t2,t3), index(t1 k1), index(t2 k2), index(t3 k3), NO_USE_HASH_AGGREGATION*/* from t1, t2, t3 
where t1.b = t2.b and t1.c = t2.c and t1.b = t3.b and t1.c = t3.c group by t2.b, t2.c;
Query Plan
====================================================
|ID|OPERATOR                 |NAME  |EST. ROWS|COST|
----------------------------------------------------
|0 |MERGE GROUP BY           |      |1        |113 |
|1 | NESTED-LOOP JOIN        |      |1        |113 |
|2 |  NESTED-LOOP JOIN       |      |1        |102 |
|3 |   TABLE SCAN            |t1(k1)|1        |91  |
|4 |   DISTRIBUTED TABLE SCAN|t2(k2)|1        |10  |
|5 |  DISTRIBUTED TABLE SCAN |t3(k3)|1        |10  |
====================================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c], [t2.d], [t3.a], [t3.b], [t3.c], [t3.d]), filter(nil), rowset=256, 
      group([t2.b], [t2.c]), agg_func(nil)
  1 - output([t2.b], [t2.c], [t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.d], [t3.a], [t3.b], [t3.c], [t3.d]), filter(nil), rowset=256, 
      conds(nil), nl_params_([t1.b], [t1.c])
  2 - output([t2.b], [t2.c], [t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.d]), filter(nil), rowset=256, 
      conds(nil), nl_params_([t1.b], [t1.c])
  3 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)
  4 - output([t2.a], [t2.b], [t2.c], [t2.d]), filter(nil), rowset=256, 
      access([GROUP_ID], [t2.a], [t2.b], [t2.c], [t2.d]), partitions(p0)
  5 - output([t3.a], [t3.b], [t3.c], [t3.d]), filter(nil), rowset=256, 
      access([GROUP_ID], [t3.a], [t3.b], [t3.c], [t3.d]), partitions(p0)

explain select/*+leading(t1,t2,t3), index(t1 k1), index(t2 k2), index(t3 k3)*/* from t1, t2, t3 
where t1.b = t2.b and t1.c = t2.c and t1.b = t3.b and t1.c = t3.c order by t3.b, t3.c;
Query Plan
===================================================
|ID|OPERATOR                |NAME  |EST. ROWS|COST|
---------------------------------------------------
|0 |NESTED-LOOP JOIN        |      |1        |113 |
|1 | NESTED-LOOP JOIN       |      |1        |102 |
|2 |  TABLE SCAN            |t1(k1)|1        |91  |
|3 |  DISTRIBUTED TABLE SCAN|t2(k2)|1        |10  |
|4 | DISTRIBUTED TABLE SCAN |t3(k3)|1        |10  |
===================================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c], [t2.d], [t3.a], [t3.b], [t3.c], [t3.d]), filter(nil), rowset=256, 
      conds(nil), nl_params_([t1.b], [t1.c])
  1 - output([t1.b], [t1.c], [t1.a], [t1.d], [t2.a], [t2.b], [t2.c], [t2.d]), filter(nil), rowset=256,
      conds(nil), nl_params_([t1.b], [t1.c])
  2 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)
  3 - output([t2.a], [t2.b], [t2.c], [t2.d]), filter(nil), rowset=256, 
      access([GROUP_ID], [t2.a], [t2.b], [t2.c], [t2.d]), partitions(p0)
  4 - output([t3.a], [t3.b], [t3.c], [t3.d]), filter(nil), rowset=256, 
      access([GROUP_ID], [t3.a], [t3.b], [t3.c], [t3.d]), partitions(p0)

explain select/*+leading(t1,t2,t3), index(t1 k1), index(t2 k2), index(t3 k3), NO_USE_HASH_AGGREGATION*/* from t1, t2, t3 
where t1.b = t2.b and t1.c = t2.c and t1.b = t3.b and t1.c = t3.c group by t3.b, t3.c;
Query Plan
====================================================
|ID|OPERATOR                 |NAME  |EST. ROWS|COST|
----------------------------------------------------
|0 |MERGE GROUP BY           |      |1        |113 |
|1 | NESTED-LOOP JOIN        |      |1        |113 |
|2 |  NESTED-LOOP JOIN       |      |1        |102 |
|3 |   TABLE SCAN            |t1(k1)|1        |91  |
|4 |   DISTRIBUTED TABLE SCAN|t2(k2)|1        |10  |
|5 |  DISTRIBUTED TABLE SCAN |t3(k3)|1        |10  |
====================================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c], [t2.d], [t3.a], [t3.b], [t3.c], [t3.d]), filter(nil), rowset=256, 
      group([t3.b], [t3.c]), agg_func(nil)
  1 - output([t3.b], [t3.c], [t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c], [t2.d], [t3.a], [t3.d]), filter(nil), rowset=256, 
      conds(nil), nl_params_([t1.b], [t1.c])
  2 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c], [t2.d]), filter(nil), rowset=256, 
      conds(nil), nl_params_([t1.b], [t1.c])
  3 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)
  4 - output([t2.a], [t2.b], [t2.c], [t2.d]), filter(nil), rowset=256, 
      access([GROUP_ID], [t2.a], [t2.b], [t2.c], [t2.d]), partitions(p0)
  5 - output([t3.a], [t3.b], [t3.c], [t3.d]), filter(nil), rowset=256, 
      access([GROUP_ID], [t3.a], [t3.b], [t3.c], [t3.d]), partitions(p0)

explain select/*+leading(t1,t2,t3), index(t1 k1), index(t2 k2), index(t3 k3)*/* from t1, t2, t3 
where t1.b = t2.b and t1.c = t2.c and t1.b = t3.b and t1.c = t3.c order by t1.b, t1.c, t2.b, t2.c, t3.b, t3.c;
Query Plan
===================================================
|ID|OPERATOR                |NAME  |EST. ROWS|COST|
---------------------------------------------------
|0 |NESTED-LOOP JOIN        |      |1        |113 |
|1 | NESTED-LOOP JOIN       |      |1        |102 |
|2 |  TABLE SCAN            |t1(k1)|1        |91  |
|3 |  DISTRIBUTED TABLE SCAN|t2(k2)|1        |10  |
|4 | DISTRIBUTED TABLE SCAN |t3(k3)|1        |10  |
===================================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c], [t2.d], [t3.a], [t3.b], [t3.c], [t3.d]), filter(nil), rowset=256, 
      conds(nil), nl_params_([t1.b], [t1.c])
  1 - output([t1.b], [t1.c], [t1.a], [t1.d], [t2.a], [t2.b], [t2.c], [t2.d]), filter(nil), rowset=256,
      conds(nil), nl_params_([t1.b], [t1.c])
  2 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)
  3 - output([t2.a], [t2.b], [t2.c], [t2.d]), filter(nil), rowset=256, 
      access([GROUP_ID], [t2.a], [t2.b], [t2.c], [t2.d]), partitions(p0)
  4 - output([t3.a], [t3.b], [t3.c], [t3.d]), filter(nil), rowset=256, 
      access([GROUP_ID], [t3.a], [t3.b], [t3.c], [t3.d]), partitions(p0)

explain select/*+leading(t1,t2,t3), index(t1 k1), index(t2 k2), index(t3 k3), NO_USE_HASH_AGGREGATION*/* from t1, t2, t3 
where t1.b = t2.b and t1.c = t2.c and t1.b = t3.b and t1.c = t3.c group by t1.b, t1.c, t2.b, t2.c, t3.b, t3.c;
Query Plan
====================================================
|ID|OPERATOR                 |NAME  |EST. ROWS|COST|
----------------------------------------------------
|0 |MERGE GROUP BY           |      |1        |113 |
|1 | NESTED-LOOP JOIN        |      |1        |113 |
|2 |  NESTED-LOOP JOIN       |      |1        |102 |
|3 |   TABLE SCAN            |t1(k1)|1        |91  |
|4 |   DISTRIBUTED TABLE SCAN|t2(k2)|1        |10  |
|5 |  DISTRIBUTED TABLE SCAN |t3(k3)|1        |10  |
====================================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c], [t2.d], [t3.a], [t3.b], [t3.c], [t3.d]), filter(nil), rowset=256, 
      group([t1.b], [t1.c], [t2.b], [t2.c], [t3.b], [t3.c]), agg_func(nil)
  1 - output([t1.b], [t1.c], [t2.b], [t2.c], [t3.b], [t3.c], [t1.a], [t1.d], [t2.a], [t2.d], [t3.a], [t3.d]), filter(nil), rowset=256, 
      conds(nil), nl_params_([t1.b], [t1.c])
  2 - output([t1.b], [t1.c], [t2.b], [t2.c], [t1.a], [t1.d], [t2.a], [t2.d]), filter(nil), rowset=256, 
      conds(nil), nl_params_([t1.b], [t1.c])
  3 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)
  4 - output([t2.a], [t2.b], [t2.c], [t2.d]), filter(nil), rowset=256, 
      access([GROUP_ID], [t2.a], [t2.b], [t2.c], [t2.d]), partitions(p0)
  5 - output([t3.a], [t3.b], [t3.c], [t3.d]), filter(nil), rowset=256, 
      access([GROUP_ID], [t3.a], [t3.b], [t3.c], [t3.d]), partitions(p0)

explain select/*+leading(t1,t2,t3), index(t1 k1), index(t2 k2), index(t3 k3)*/* from t1, t2, t3 
where t1.b = t2.b and t1.c = t2.c and t2.b = t3.b and t2.c = t3.c order by t1.b, t1.c, t2.b, t2.c, t3.b, t3.c;
Query Plan
===================================================
|ID|OPERATOR                |NAME  |EST. ROWS|COST|
---------------------------------------------------
|0 |NESTED-LOOP JOIN        |      |1        |113 |
|1 | NESTED-LOOP JOIN       |      |1        |102 |
|2 |  TABLE SCAN            |t1(k1)|1        |91  |
|3 |  DISTRIBUTED TABLE SCAN|t2(k2)|1        |10  |
|4 | DISTRIBUTED TABLE SCAN |t3(k3)|1        |10  |
===================================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c], [t2.d], [t3.a], [t3.b], [t3.c], [t3.d]), filter(nil), rowset=256, 
      conds(nil), nl_params_([t2.b], [t2.c])
  1 - output([t2.b], [t2.c], [t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.d]), filter(nil), rowset=256,
      conds(nil), nl_params_([t1.b], [t1.c])
  2 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)
  3 - output([t2.a], [t2.b], [t2.c], [t2.d]), filter(nil), rowset=256, 
      access([GROUP_ID], [t2.a], [t2.b], [t2.c], [t2.d]), partitions(p0)
  4 - output([t3.a], [t3.b], [t3.c], [t3.d]), filter(nil), rowset=256, 
      access([GROUP_ID], [t3.a], [t3.b], [t3.c], [t3.d]), partitions(p0)

explain select/*+leading(t1,t2,t3), index(t1 k1), index(t2 k2), index(t3 k3), NO_USE_HASH_AGGREGATION*/* from t1, t2, t3 
where t1.b = t2.b and t1.c = t2.c and t2.b = t3.b and t2.c = t3.c group by t1.b, t1.c, t2.b, t2.c, t3.b, t3.c;
Query Plan
====================================================
|ID|OPERATOR                 |NAME  |EST. ROWS|COST|
----------------------------------------------------
|0 |MERGE GROUP BY           |      |1        |113 |
|1 | NESTED-LOOP JOIN        |      |1        |113 |
|2 |  NESTED-LOOP JOIN       |      |1        |102 |
|3 |   TABLE SCAN            |t1(k1)|1        |91  |
|4 |   DISTRIBUTED TABLE SCAN|t2(k2)|1        |10  |
|5 |  DISTRIBUTED TABLE SCAN |t3(k3)|1        |10  |
====================================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c], [t2.d], [t3.a], [t3.b], [t3.c], [t3.d]), filter(nil), rowset=256, 
      group([t1.b], [t1.c], [t2.b], [t2.c], [t3.b], [t3.c]), agg_func(nil)
  1 - output([t1.b], [t1.c], [t2.b], [t2.c], [t3.b], [t3.c], [t1.a], [t1.d], [t2.a], [t2.d], [t3.a], [t3.d]), filter(nil), rowset=256, 
      conds(nil), nl_params_([t2.b], [t2.c])
  2 - output([t1.b], [t1.c], [t2.b], [t2.c], [t1.a], [t1.d], [t2.a], [t2.d]), filter(nil), rowset=256, 
      conds(nil), nl_params_([t1.b], [t1.c])
  3 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)
  4 - output([t2.a], [t2.b], [t2.c], [t2.d]), filter(nil), rowset=256, 
      access([GROUP_ID], [t2.a], [t2.b], [t2.c], [t2.d]), partitions(p0)
  5 - output([t3.a], [t3.b], [t3.c], [t3.d]), filter(nil), rowset=256, 
      access([GROUP_ID], [t3.a], [t3.b], [t3.c], [t3.d]), partitions(p0)

explain select/*+leading(t1,t2,t3), index(t1 k1), index(t2 k2), index(t3 k3)*/* from t1, t2, t3 
where t1.b = t2.b and t1.c = t2.c and t1.b = t3.b and t1.c = t3.c order by t1.b, t2.b, t3.b, t1.c, t2.c, t3.c;
Query Plan
===================================================
|ID|OPERATOR                |NAME  |EST. ROWS|COST|
---------------------------------------------------
|0 |NESTED-LOOP JOIN        |      |1        |113 |
|1 | NESTED-LOOP JOIN       |      |1        |102 |
|2 |  TABLE SCAN            |t1(k1)|1        |91  |
|3 |  DISTRIBUTED TABLE SCAN|t2(k2)|1        |10  |
|4 | DISTRIBUTED TABLE SCAN |t3(k3)|1        |10  |
===================================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c], [t2.d], [t3.a], [t3.b], [t3.c], [t3.d]), filter(nil), rowset=256, 
      conds(nil), nl_params_([t1.b], [t1.c])
  1 - output([t1.b], [t1.c], [t1.a], [t1.d], [t2.a], [t2.b], [t2.c], [t2.d]), filter(nil), rowset=256,
      conds(nil), nl_params_([t1.b], [t1.c])
  2 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)
  3 - output([t2.a], [t2.b], [t2.c], [t2.d]), filter(nil), rowset=256, 
      access([GROUP_ID], [t2.a], [t2.b], [t2.c], [t2.d]), partitions(p0)
  4 - output([t3.a], [t3.b], [t3.c], [t3.d]), filter(nil), rowset=256, 
      access([GROUP_ID], [t3.a], [t3.b], [t3.c], [t3.d]), partitions(p0)

explain select/*+leading(t1,t2,t3), index(t1 k1), index(t2 k2), index(t3 k3), NO_USE_HASH_AGGREGATION*/* from t1, t2, t3 
where t1.b = t2.b and t1.c = t2.c and t1.b = t3.b and t1.c = t3.c group by t1.b, t2.b, t3.b, t1.c, t2.c, t3.c;
Query Plan
====================================================
|ID|OPERATOR                 |NAME  |EST. ROWS|COST|
----------------------------------------------------
|0 |MERGE GROUP BY           |      |1        |113 |
|1 | NESTED-LOOP JOIN        |      |1        |113 |
|2 |  NESTED-LOOP JOIN       |      |1        |102 |
|3 |   TABLE SCAN            |t1(k1)|1        |91  |
|4 |   DISTRIBUTED TABLE SCAN|t2(k2)|1        |10  |
|5 |  DISTRIBUTED TABLE SCAN |t3(k3)|1        |10  |
====================================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c], [t2.d], [t3.a], [t3.b], [t3.c], [t3.d]), filter(nil), rowset=256, 
      group([t1.b], [t1.c], [t2.b], [t3.b], [t2.c], [t3.c]), agg_func(nil)
  1 - output([t1.b], [t1.c], [t2.b], [t3.b], [t2.c], [t3.c], [t1.a], [t1.d], [t2.a], [t2.d], [t3.a], [t3.d]), filter(nil), rowset=256, 
      conds(nil), nl_params_([t1.b], [t1.c])
  2 - output([t1.b], [t1.c], [t2.b], [t2.c], [t1.a], [t1.d], [t2.a], [t2.d]), filter(nil), rowset=256, 
      conds(nil), nl_params_([t1.b], [t1.c])
  3 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)
  4 - output([t2.a], [t2.b], [t2.c], [t2.d]), filter(nil), rowset=256, 
      access([GROUP_ID], [t2.a], [t2.b], [t2.c], [t2.d]), partitions(p0)
  5 - output([t3.a], [t3.b], [t3.c], [t3.d]), filter(nil), rowset=256, 
      access([GROUP_ID], [t3.a], [t3.b], [t3.c], [t3.d]), partitions(p0)

explain select/*+leading(t1,t2,t3), index(t1 k1), index(t2 k2), index(t3 k3)*/* from t1, t2, t3 
where t1.b = t2.b and t1.c = t2.c and t2.b = t3.b and t2.c = t3.c order by t1.b, t2.b, t3.b, t1.c, t2.c, t3.c;
Query Plan
===================================================
|ID|OPERATOR                |NAME  |EST. ROWS|COST|
---------------------------------------------------
|0 |NESTED-LOOP JOIN        |      |1        |113 |
|1 | NESTED-LOOP JOIN       |      |1        |102 |
|2 |  TABLE SCAN            |t1(k1)|1        |91  |
|3 |  DISTRIBUTED TABLE SCAN|t2(k2)|1        |10  |
|4 | DISTRIBUTED TABLE SCAN |t3(k3)|1        |10  |
===================================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c], [t2.d], [t3.a], [t3.b], [t3.c], [t3.d]), filter(nil), rowset=256, 
      conds(nil), nl_params_([t2.b], [t2.c])
  1 - output([t2.b], [t2.c], [t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.d]), filter(nil), rowset=256,
      conds(nil), nl_params_([t1.b], [t1.c])
  2 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)
  3 - output([t2.a], [t2.b], [t2.c], [t2.d]), filter(nil), rowset=256, 
      access([GROUP_ID], [t2.a], [t2.b], [t2.c], [t2.d]), partitions(p0)
  4 - output([t3.a], [t3.b], [t3.c], [t3.d]), filter(nil), rowset=256, 
      access([GROUP_ID], [t3.a], [t3.b], [t3.c], [t3.d]), partitions(p0)

explain select/*+leading(t1,t2,t3), index(t1 k1), index(t2 k2), index(t3 k3), NO_USE_HASH_AGGREGATION*/* from t1, t2, t3 
where t1.b = t2.b and t1.c = t2.c and t2.b = t3.b and t2.c = t3.c group by t1.b, t2.b, t3.b, t1.c, t2.c, t3.c;
Query Plan
====================================================
|ID|OPERATOR                 |NAME  |EST. ROWS|COST|
----------------------------------------------------
|0 |MERGE GROUP BY           |      |1        |113 |
|1 | NESTED-LOOP JOIN        |      |1        |113 |
|2 |  NESTED-LOOP JOIN       |      |1        |102 |
|3 |   TABLE SCAN            |t1(k1)|1        |91  |
|4 |   DISTRIBUTED TABLE SCAN|t2(k2)|1        |10  |
|5 |  DISTRIBUTED TABLE SCAN |t3(k3)|1        |10  |
====================================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c], [t2.d], [t3.a], [t3.b], [t3.c], [t3.d]), filter(nil), rowset=256, 
      group([t1.b], [t1.c], [t2.b], [t3.b], [t2.c], [t3.c]), agg_func(nil)
  1 - output([t1.b], [t1.c], [t2.b], [t3.b], [t2.c], [t3.c], [t1.a], [t1.d], [t2.a], [t2.d], [t3.a], [t3.d]), filter(nil), rowset=256, 
      conds(nil), nl_params_([t2.b], [t2.c])
  2 - output([t1.b], [t1.c], [t2.b], [t2.c], [t1.a], [t1.d], [t2.a], [t2.d]), filter(nil), rowset=256, 
      conds(nil), nl_params_([t1.b], [t1.c])
  3 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)
  4 - output([t2.a], [t2.b], [t2.c], [t2.d]), filter(nil), rowset=256, 
      access([GROUP_ID], [t2.a], [t2.b], [t2.c], [t2.d]), partitions(p0)
  5 - output([t3.a], [t3.b], [t3.c], [t3.d]), filter(nil), rowset=256, 
      access([GROUP_ID], [t3.a], [t3.b], [t3.c], [t3.d]), partitions(p0)

explain select/*+index(t1 k1), index(t2 k2)*/ * from t1 left join t2 on t1.b = t2.b and t1.c = t2.c order by t1.b, t1.c;
Query Plan
==================================================
|ID|OPERATOR               |NAME  |EST. ROWS|COST|
--------------------------------------------------
|0 |NESTED-LOOP OUTER JOIN |      |1        |102 |
|1 | TABLE SCAN            |t1(k1)|1        |91  |
|2 | DISTRIBUTED TABLE SCAN|t2(k2)|1        |10  |
==================================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c], [t2.d]), filter(nil), rowset=256, 
      conds(nil), nl_params_([t1.b], [t1.c])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)
  2 - output([t2.a], [t2.b], [t2.c], [t2.d]), filter(nil), rowset=256, 
      access([GROUP_ID], [t2.a], [t2.b], [t2.c], [t2.d]), partitions(p0)

explain select/*+index(t1 k1), index(t2 k2), NO_USE_HASH_AGGREGATION*/ * from t1 left join t2 on t1.b = t2.b and t1.c = t2.c group by t1.b, t1.c;
Query Plan
===================================================
|ID|OPERATOR                |NAME  |EST. ROWS|COST|
---------------------------------------------------
|0 |MERGE GROUP BY          |      |1        |102 |
|1 | NESTED-LOOP OUTER JOIN |      |1        |102 |
|2 |  TABLE SCAN            |t1(k1)|1        |91  |
|3 |  DISTRIBUTED TABLE SCAN|t2(k2)|1        |10  |
===================================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c], [t2.d]), filter(nil), rowset=256, 
      group([t1.b], [t1.c]), agg_func(nil)
  1 - output([t1.b], [t1.c], [t1.a], [t1.d], [t2.a], [t2.b], [t2.c], [t2.d]), filter(nil), rowset=256, 
      conds(nil), nl_params_([t1.b], [t1.c])
  2 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)
  3 - output([t2.a], [t2.b], [t2.c], [t2.d]), filter(nil), rowset=256, 
      access([GROUP_ID], [t2.a], [t2.b], [t2.c], [t2.d]), partitions(p0)

explain select/*+index(t1 k1), index(t2 k2)*/ * from t1 left join t2 on t1.b = t2.b and t1.c = t2.c order by t2.b, t2.c;
Query Plan
===================================================
|ID|OPERATOR                |NAME  |EST. ROWS|COST|
---------------------------------------------------
|0 |SORT                    |      |1        |102 |
|1 | NESTED-LOOP OUTER JOIN |      |1        |102 |
|2 |  TABLE SCAN            |t1(k1)|1        |91  |
|3 |  DISTRIBUTED TABLE SCAN|t2(k2)|1        |10  |
===================================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c], [t2.d]), filter(nil), rowset=256, sort_keys([t2.b, ASC], [t2.c, ASC])
  1 - output([t2.b], [t2.c], [t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.d]), filter(nil), rowset=256, 
      conds(nil), nl_params_([t1.b], [t1.c])
  2 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)
  3 - output([t2.a], [t2.b], [t2.c], [t2.d]), filter(nil), rowset=256, 
      access([GROUP_ID], [t2.a], [t2.b], [t2.c], [t2.d]), partitions(p0)

explain select/*+index(t1 k1), index(t2 k2), NO_USE_HASH_AGGREGATION*/ * from t1 left join t2 on t1.b = t2.b and t1.c = t2.c group by t2.b, t2.c;
Query Plan
====================================================
|ID|OPERATOR                 |NAME  |EST. ROWS|COST|
----------------------------------------------------
|0 |MERGE GROUP BY           |      |1        |102 |
|1 | SORT                    |      |1        |102 |
|2 |  NESTED-LOOP OUTER JOIN |      |1        |102 |
|3 |   TABLE SCAN            |t1(k1)|1        |91  |
|4 |   DISTRIBUTED TABLE SCAN|t2(k2)|1        |10  |
====================================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c], [t2.d]), filter(nil), rowset=256, 
      group([t2.b], [t2.c]), agg_func(nil)
  1 - output([t2.b], [t2.c], [t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.d]), filter(nil), rowset=256, sort_keys([t2.b, ASC], [t2.c, ASC])
  2 - output([t2.b], [t2.c], [t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.d]), filter(nil), rowset=256, 
      conds(nil), nl_params_([t1.b], [t1.c])
  3 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)
  4 - output([t2.a], [t2.b], [t2.c], [t2.d]), filter(nil), rowset=256, 
      access([GROUP_ID], [t2.a], [t2.b], [t2.c], [t2.d]), partitions(p0)

explain select/*+index(t1 k1), index(t2 k2)*/ * from t1 left join t2 on t1.b = t2.b and t1.c = t2.c order by t1.b, t1.c, t2.b, t2.c;
Query Plan
===================================================
|ID|OPERATOR                |NAME  |EST. ROWS|COST|
---------------------------------------------------
|0 |SORT                    |      |1        |102 |
|1 | NESTED-LOOP OUTER JOIN |      |1        |102 |
|2 |  TABLE SCAN            |t1(k1)|1        |91  |
|3 |  DISTRIBUTED TABLE SCAN|t2(k2)|1        |10  |
===================================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c], [t2.d]), filter(nil), rowset=256, sort_keys([t1.b, ASC], [t1.c, ASC], [t2.b, ASC], [t2.c, ASC]), prefix_pos(2)
  1 - output([t1.b], [t1.c], [t2.b], [t2.c], [t1.a], [t1.d], [t2.a], [t2.d]), filter(nil), rowset=256, 
      conds(nil), nl_params_([t1.b], [t1.c])
  2 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)
  3 - output([t2.a], [t2.b], [t2.c], [t2.d]), filter(nil), rowset=256, 
      access([GROUP_ID], [t2.a], [t2.b], [t2.c], [t2.d]), partitions(p0)

explain select/*+index(t1 k1), index(t2 k2)*, NO_USE_HASH_AGGREGATION*/ * from t1 left join t2 on t1.b = t2.b and t1.c = t2.c group by t1.b, t1.c, t2.b, t2.c;
Query Plan
====================================================
|ID|OPERATOR                 |NAME  |EST. ROWS|COST|
----------------------------------------------------
|0 |MERGE GROUP BY           |      |1        |102 |
|1 | SORT                    |      |1        |102 |
|2 |  NESTED-LOOP OUTER JOIN |      |1        |102 |
|3 |   TABLE SCAN            |t1(k1)|1        |91  |
|4 |   DISTRIBUTED TABLE SCAN|t2(k2)|1        |10  |
====================================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c], [t2.d]), filter(nil), rowset=256, 
      group([t1.b], [t1.c], [t2.b], [t2.c]), agg_func(nil)
  1 - output([t1.b], [t1.c], [t2.b], [t2.c], [t1.a], [t1.d], [t2.a], [t2.d]), filter(nil), rowset=256, sort_keys([t1.b, ASC], [t1.c, ASC], [t2.b, ASC], [t2.c, ASC]), prefix_pos(2)
  2 - output([t1.b], [t1.c], [t2.b], [t2.c], [t1.a], [t1.d], [t2.a], [t2.d]), filter(nil), rowset=256, 
      conds(nil), nl_params_([t1.b], [t1.c])
  3 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)
  4 - output([t2.a], [t2.b], [t2.c], [t2.d]), filter(nil), rowset=256, 
      access([GROUP_ID], [t2.a], [t2.b], [t2.c], [t2.d]), partitions(p0)

explain select/*+index(t1 k1), index(t2 k2)*/ * from t1 left join t2 on t1.b = t2.b and t1.c = t2.c order by t1.b, t2.b, t1.c, t2.c;
Query Plan
===================================================
|ID|OPERATOR                |NAME  |EST. ROWS|COST|
---------------------------------------------------
|0 |SORT                    |      |1        |102 |
|1 | NESTED-LOOP OUTER JOIN |      |1        |102 |
|2 |  TABLE SCAN            |t1(k1)|1        |91  |
|3 |  DISTRIBUTED TABLE SCAN|t2(k2)|1        |10  |
===================================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c], [t2.d]), filter(nil), rowset=256, sort_keys([t1.b, ASC], [t2.b, ASC], [t1.c, ASC], [t2.c, ASC]), prefix_pos(1)
  1 - output([t1.b], [t2.b], [t1.c], [t2.c], [t1.a], [t1.d], [t2.a], [t2.d]), filter(nil), rowset=256, 
      conds(nil), nl_params_([t1.b], [t1.c])
  2 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)
  3 - output([t2.a], [t2.b], [t2.c], [t2.d]), filter(nil), rowset=256, 
      access([GROUP_ID], [t2.a], [t2.b], [t2.c], [t2.d]), partitions(p0)

explain select/*+index(t1 k1), index(t2 k2)*, NO_USE_HASH_AGGREGATION*/ * from t1 left join t2 on t1.b = t2.b and t1.c = t2.c group by t1.b, t2.b, t1.c, t2.c;
Query Plan
====================================================
|ID|OPERATOR                 |NAME  |EST. ROWS|COST|
----------------------------------------------------
|0 |MERGE GROUP BY           |      |1        |102 |
|1 | SORT                    |      |1        |102 |
|2 |  NESTED-LOOP OUTER JOIN |      |1        |102 |
|3 |   TABLE SCAN            |t1(k1)|1        |91  |
|4 |   DISTRIBUTED TABLE SCAN|t2(k2)|1        |10  |
====================================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c], [t2.d]), filter(nil), rowset=256, 
      group([t1.b], [t1.c], [t2.b], [t2.c]), agg_func(nil)
  1 - output([t1.b], [t1.c], [t2.b], [t2.c], [t1.a], [t1.d], [t2.a], [t2.d]), filter(nil), rowset=256, sort_keys([t1.b, ASC], [t1.c, ASC], [t2.b, ASC], [t2.c, ASC]), prefix_pos(2)
  2 - output([t1.b], [t1.c], [t2.b], [t2.c], [t1.a], [t1.d], [t2.a], [t2.d]), filter(nil), rowset=256, 
      conds(nil), nl_params_([t1.b], [t1.c])
  3 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)
  4 - output([t2.a], [t2.b], [t2.c], [t2.d]), filter(nil), rowset=256, 
      access([GROUP_ID], [t2.a], [t2.b], [t2.c], [t2.d]), partitions(p0)

explain select/*+leading(t1,t2,t3),index(t1 k1), index(t2 k2), index(t3 k3)*/ * 
from t1 left join t2 on t1.b = t2.b and t1.c = t2.c left join t3 on t1.b = t3.b and t1.c = t3.c order by t1.b, t1.c;
Query Plan
===================================================
|ID|OPERATOR                |NAME  |EST. ROWS|COST|
---------------------------------------------------
|0 |NESTED-LOOP OUTER JOIN  |      |1        |113 |
|1 | NESTED-LOOP OUTER JOIN |      |1        |102 |
|2 |  TABLE SCAN            |t1(k1)|1        |91  |
|3 |  DISTRIBUTED TABLE SCAN|t2(k2)|1        |10  |
|4 | DISTRIBUTED TABLE SCAN |t3(k3)|1        |10  |
===================================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c], [t2.d], [t3.a], [t3.b], [t3.c], [t3.d]), filter(nil), rowset=256, 
      conds(nil), nl_params_([t1.b], [t1.c])
  1 - output([t1.b], [t1.c], [t1.a], [t1.d], [t2.a], [t2.b], [t2.c], [t2.d]), filter(nil), rowset=256,
      conds(nil), nl_params_([t1.b], [t1.c])
  2 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)
  3 - output([t2.a], [t2.b], [t2.c], [t2.d]), filter(nil), rowset=256, 
      access([GROUP_ID], [t2.a], [t2.b], [t2.c], [t2.d]), partitions(p0)
  4 - output([t3.a], [t3.b], [t3.c], [t3.d]), filter(nil), rowset=256, 
      access([GROUP_ID], [t3.a], [t3.b], [t3.c], [t3.d]), partitions(p0)

explain select/*+leading(t1,t2,t3),index(t1 k1), index(t2 k2), index(t3 k3), NO_USE_HASH_AGGREGATION*/ * 
from t1 left join t2 on t1.b = t2.b and t1.c = t2.c left join t3 on t1.b = t3.b and t1.c = t3.c group by t1.b, t1.c;
Query Plan
====================================================
|ID|OPERATOR                 |NAME  |EST. ROWS|COST|
----------------------------------------------------
|0 |MERGE GROUP BY           |      |1        |113 |
|1 | NESTED-LOOP OUTER JOIN  |      |1        |113 |
|2 |  NESTED-LOOP OUTER JOIN |      |1        |102 |
|3 |   TABLE SCAN            |t1(k1)|1        |91  |
|4 |   DISTRIBUTED TABLE SCAN|t2(k2)|1        |10  |
|5 |  DISTRIBUTED TABLE SCAN |t3(k3)|1        |10  |
====================================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c], [t2.d], [t3.a], [t3.b], [t3.c], [t3.d]), filter(nil), rowset=256, 
      group([t1.b], [t1.c]), agg_func(nil)
  1 - output([t1.b], [t1.c], [t1.a], [t1.d], [t2.a], [t2.b], [t2.c], [t2.d], [t3.a], [t3.b], [t3.c], [t3.d]), filter(nil), rowset=256, 
      conds(nil), nl_params_([t1.b], [t1.c])
  2 - output([t1.b], [t1.c], [t1.a], [t1.d], [t2.a], [t2.b], [t2.c], [t2.d]), filter(nil), rowset=256, 
      conds(nil), nl_params_([t1.b], [t1.c])
  3 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)
  4 - output([t2.a], [t2.b], [t2.c], [t2.d]), filter(nil), rowset=256, 
      access([GROUP_ID], [t2.a], [t2.b], [t2.c], [t2.d]), partitions(p0)
  5 - output([t3.a], [t3.b], [t3.c], [t3.d]), filter(nil), rowset=256, 
      access([GROUP_ID], [t3.a], [t3.b], [t3.c], [t3.d]), partitions(p0)

explain select/*+leading(t1,t2,t3),index(t1 k1), index(t2 k2), index(t3 k3)*/ * 
from t1 left join t2 on t1.b = t2.b and t1.c = t2.c left join t3 on t1.b = t3.b and t1.c = t3.c order by t2.b, t2.c;
Query Plan
====================================================
|ID|OPERATOR                 |NAME  |EST. ROWS|COST|
----------------------------------------------------
|0 |SORT                     |      |1        |113 |
|1 | NESTED-LOOP OUTER JOIN  |      |1        |113 |
|2 |  NESTED-LOOP OUTER JOIN |      |1        |102 |
|3 |   TABLE SCAN            |t1(k1)|1        |91  |
|4 |   DISTRIBUTED TABLE SCAN|t2(k2)|1        |10  |
|5 |  DISTRIBUTED TABLE SCAN |t3(k3)|1        |10  |
====================================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c], [t2.d], [t3.a], [t3.b], [t3.c], [t3.d]), filter(nil), rowset=256, sort_keys([t2.b, ASC], [t2.c, ASC])
  1 - output([t2.b], [t2.c], [t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.d], [t3.a], [t3.b], [t3.c], [t3.d]), filter(nil), rowset=256, 
      conds(nil), nl_params_([t1.b], [t1.c])
  2 - output([t2.b], [t2.c], [t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.d]), filter(nil), rowset=256, 
      conds(nil), nl_params_([t1.b], [t1.c])
  3 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)
  4 - output([t2.a], [t2.b], [t2.c], [t2.d]), filter(nil), rowset=256, 
      access([GROUP_ID], [t2.a], [t2.b], [t2.c], [t2.d]), partitions(p0)
  5 - output([t3.a], [t3.b], [t3.c], [t3.d]), filter(nil), rowset=256, 
      access([GROUP_ID], [t3.a], [t3.b], [t3.c], [t3.d]), partitions(p0)

explain select/*+leading(t1,t2,t3),index(t1 k1), index(t2 k2), index(t3 k3), NO_USE_HASH_AGGREGATION*/ * 
from t1 left join t2 on t1.b = t2.b and t1.c = t2.c left join t3 on t1.b = t3.b and t1.c = t3.c group by t2.b, t2.c;
Query Plan
=====================================================
|ID|OPERATOR                  |NAME  |EST. ROWS|COST|
-----------------------------------------------------
|0 |MERGE GROUP BY            |      |1        |113 |
|1 | SORT                     |      |1        |113 |
|2 |  NESTED-LOOP OUTER JOIN  |      |1        |113 |
|3 |   NESTED-LOOP OUTER JOIN |      |1        |102 |
|4 |    TABLE SCAN            |t1(k1)|1        |91  |
|5 |    DISTRIBUTED TABLE SCAN|t2(k2)|1        |10  |
|6 |   DISTRIBUTED TABLE SCAN |t3(k3)|1        |10  |
=====================================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c], [t2.d], [t3.a], [t3.b], [t3.c], [t3.d]), filter(nil), rowset=256, 
      group([t2.b], [t2.c]), agg_func(nil)
  1 - output([t2.b], [t2.c], [t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.d], [t3.a], [t3.b], [t3.c], [t3.d]), filter(nil), rowset=256, sort_keys([t2.b, ASC], [t2.c, ASC])
  2 - output([t2.b], [t2.c], [t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.d], [t3.a], [t3.b], [t3.c], [t3.d]), filter(nil), rowset=256, 
      conds(nil), nl_params_([t1.b], [t1.c])
  3 - output([t2.b], [t2.c], [t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.d]), filter(nil), rowset=256, 
      conds(nil), nl_params_([t1.b], [t1.c])
  4 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)
  5 - output([t2.a], [t2.b], [t2.c], [t2.d]), filter(nil), rowset=256, 
      access([GROUP_ID], [t2.a], [t2.b], [t2.c], [t2.d]), partitions(p0)
  6 - output([t3.a], [t3.b], [t3.c], [t3.d]), filter(nil), rowset=256, 
      access([GROUP_ID], [t3.a], [t3.b], [t3.c], [t3.d]), partitions(p0)

explain select/*+leading(t1,t2,t3),index(t1 k1), index(t2 k2), index(t3 k3)*/ * 
from t1 left join t2 on t1.b = t2.b and t1.c = t2.c left join t3 on t1.b = t3.b and t1.c = t3.c order by t3.b, t3.c;
Query Plan
====================================================
|ID|OPERATOR                 |NAME  |EST. ROWS|COST|
----------------------------------------------------
|0 |SORT                     |      |1        |113 |
|1 | NESTED-LOOP OUTER JOIN  |      |1        |113 |
|2 |  NESTED-LOOP OUTER JOIN |      |1        |102 |
|3 |   TABLE SCAN            |t1(k1)|1        |91  |
|4 |   DISTRIBUTED TABLE SCAN|t2(k2)|1        |10  |
|5 |  DISTRIBUTED TABLE SCAN |t3(k3)|1        |10  |
====================================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c], [t2.d], [t3.a], [t3.b], [t3.c], [t3.d]), filter(nil), rowset=256, sort_keys([t3.b, ASC], [t3.c, ASC])
  1 - output([t3.b], [t3.c], [t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c], [t2.d], [t3.a], [t3.d]), filter(nil), rowset=256, 
      conds(nil), nl_params_([t1.b], [t1.c])
  2 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c], [t2.d]), filter(nil), rowset=256, 
      conds(nil), nl_params_([t1.b], [t1.c])
  3 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)
  4 - output([t2.a], [t2.b], [t2.c], [t2.d]), filter(nil), rowset=256, 
      access([GROUP_ID], [t2.a], [t2.b], [t2.c], [t2.d]), partitions(p0)
  5 - output([t3.a], [t3.b], [t3.c], [t3.d]), filter(nil), rowset=256, 
      access([GROUP_ID], [t3.a], [t3.b], [t3.c], [t3.d]), partitions(p0)

explain select/*+leading(t1,t2,t3),index(t1 k1), index(t2 k2), index(t3 k3), NO_USE_HASH_AGGREGATION*/ * 
from t1 left join t2 on t1.b = t2.b and t1.c = t2.c left join t3 on t1.b = t3.b and t1.c = t3.c group by t3.b, t3.c;
Query Plan
=====================================================
|ID|OPERATOR                  |NAME  |EST. ROWS|COST|
-----------------------------------------------------
|0 |MERGE GROUP BY            |      |1        |113 |
|1 | SORT                     |      |1        |113 |
|2 |  NESTED-LOOP OUTER JOIN  |      |1        |113 |
|3 |   NESTED-LOOP OUTER JOIN |      |1        |102 |
|4 |    TABLE SCAN            |t1(k1)|1        |91  |
|5 |    DISTRIBUTED TABLE SCAN|t2(k2)|1        |10  |
|6 |   DISTRIBUTED TABLE SCAN |t3(k3)|1        |10  |
=====================================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c], [t2.d], [t3.a], [t3.b], [t3.c], [t3.d]), filter(nil), rowset=256, 
      group([t3.b], [t3.c]), agg_func(nil)
  1 - output([t3.b], [t3.c], [t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c], [t2.d], [t3.a], [t3.d]), filter(nil), rowset=256, sort_keys([t3.b, ASC], [t3.c, ASC])
  2 - output([t3.b], [t3.c], [t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c], [t2.d], [t3.a], [t3.d]), filter(nil), rowset=256, 
      conds(nil), nl_params_([t1.b], [t1.c])
  3 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c], [t2.d]), filter(nil), rowset=256, 
      conds(nil), nl_params_([t1.b], [t1.c])
  4 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)
  5 - output([t2.a], [t2.b], [t2.c], [t2.d]), filter(nil), rowset=256, 
      access([GROUP_ID], [t2.a], [t2.b], [t2.c], [t2.d]), partitions(p0)
  6 - output([t3.a], [t3.b], [t3.c], [t3.d]), filter(nil), rowset=256, 
      access([GROUP_ID], [t3.a], [t3.b], [t3.c], [t3.d]), partitions(p0)

explain select/*+leading(t1,t2,t3),index(t1 k1), index(t2 k2), index(t3 k3)*/ * 
from t1 left join t2 on t1.b = t2.b and t1.c = t2.c left join t3 on t1.b = t3.b and t1.c = t3.c order by t1.b, t1.c, t2.b, t2.c, t3.b, t3.c;
Query Plan
====================================================
|ID|OPERATOR                 |NAME  |EST. ROWS|COST|
----------------------------------------------------
|0 |SORT                     |      |1        |113 |
|1 | NESTED-LOOP OUTER JOIN  |      |1        |113 |
|2 |  NESTED-LOOP OUTER JOIN |      |1        |102 |
|3 |   TABLE SCAN            |t1(k1)|1        |91  |
|4 |   DISTRIBUTED TABLE SCAN|t2(k2)|1        |10  |
|5 |  DISTRIBUTED TABLE SCAN |t3(k3)|1        |10  |
====================================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c], [t2.d], [t3.a], [t3.b], [t3.c], [t3.d]), filter(nil), rowset=256, sort_keys([t1.b, ASC], [t1.c, ASC], [t2.b, ASC], [t2.c, ASC], [t3.b, ASC], [t3.c, ASC]), prefix_pos(2)
  1 - output([t1.b], [t1.c], [t2.b], [t2.c], [t3.b], [t3.c], [t1.a], [t1.d], [t2.a], [t2.d], [t3.a], [t3.d]), filter(nil), rowset=256, 
      conds(nil), nl_params_([t1.b], [t1.c])
  2 - output([t1.b], [t1.c], [t2.b], [t2.c], [t1.a], [t1.d], [t2.a], [t2.d]), filter(nil), rowset=256, 
      conds(nil), nl_params_([t1.b], [t1.c])
  3 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)
  4 - output([t2.a], [t2.b], [t2.c], [t2.d]), filter(nil), rowset=256, 
      access([GROUP_ID], [t2.a], [t2.b], [t2.c], [t2.d]), partitions(p0)
  5 - output([t3.a], [t3.b], [t3.c], [t3.d]), filter(nil), rowset=256, 
      access([GROUP_ID], [t3.a], [t3.b], [t3.c], [t3.d]), partitions(p0)

explain select/*+leading(t1,t2,t3),index(t1 k1), index(t2 k2), index(t3 k3), NO_USE_HASH_AGGREGATION*/ * 
from t1 left join t2 on t1.b = t2.b and t1.c = t2.c left join t3 on t1.b = t3.b and t1.c = t3.c group by t1.b, t1.c, t2.b, t2.c, t3.b, t3.c;
Query Plan
=====================================================
|ID|OPERATOR                  |NAME  |EST. ROWS|COST|
-----------------------------------------------------
|0 |MERGE GROUP BY            |      |1        |113 |
|1 | SORT                     |      |1        |113 |
|2 |  NESTED-LOOP OUTER JOIN  |      |1        |113 |
|3 |   NESTED-LOOP OUTER JOIN |      |1        |102 |
|4 |    TABLE SCAN            |t1(k1)|1        |91  |
|5 |    DISTRIBUTED TABLE SCAN|t2(k2)|1        |10  |
|6 |   DISTRIBUTED TABLE SCAN |t3(k3)|1        |10  |
=====================================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c], [t2.d], [t3.a], [t3.b], [t3.c], [t3.d]), filter(nil), rowset=256, 
      group([t1.b], [t1.c], [t2.b], [t2.c], [t3.b], [t3.c]), agg_func(nil)
  1 - output([t1.b], [t1.c], [t2.b], [t2.c], [t3.b], [t3.c], [t1.a], [t1.d], [t2.a], [t2.d], [t3.a], [t3.d]), filter(nil), rowset=256, sort_keys([t1.b, ASC], [t1.c, ASC], [t2.b, ASC], [t2.c, ASC], [t3.b, ASC], [t3.c, ASC]), prefix_pos(2)
  2 - output([t1.b], [t1.c], [t2.b], [t2.c], [t3.b], [t3.c], [t1.a], [t1.d], [t2.a], [t2.d], [t3.a], [t3.d]), filter(nil), rowset=256, 
      conds(nil), nl_params_([t1.b], [t1.c])
  3 - output([t1.b], [t1.c], [t2.b], [t2.c], [t1.a], [t1.d], [t2.a], [t2.d]), filter(nil), rowset=256, 
      conds(nil), nl_params_([t1.b], [t1.c])
  4 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)
  5 - output([t2.a], [t2.b], [t2.c], [t2.d]), filter(nil), rowset=256, 
      access([GROUP_ID], [t2.a], [t2.b], [t2.c], [t2.d]), partitions(p0)
  6 - output([t3.a], [t3.b], [t3.c], [t3.d]), filter(nil), rowset=256, 
      access([GROUP_ID], [t3.a], [t3.b], [t3.c], [t3.d]), partitions(p0)

explain select/*+leading(t1,t2,t3),index(t1 k1), index(t2 k2), index(t3 k3)*/ * 
from t1 left join t2 on t1.b = t2.b and t1.c = t2.c left join t3 on t1.b = t3.b and t1.c = t3.c order by t1.b, t2.b, t3.b, t2.c, t2.c, t3.c;
Query Plan
====================================================
|ID|OPERATOR                 |NAME  |EST. ROWS|COST|
----------------------------------------------------
|0 |SORT                     |      |1        |113 |
|1 | NESTED-LOOP OUTER JOIN  |      |1        |113 |
|2 |  NESTED-LOOP OUTER JOIN |      |1        |102 |
|3 |   TABLE SCAN            |t1(k1)|1        |91  |
|4 |   DISTRIBUTED TABLE SCAN|t2(k2)|1        |10  |
|5 |  DISTRIBUTED TABLE SCAN |t3(k3)|1        |10  |
====================================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c], [t2.d], [t3.a], [t3.b], [t3.c], [t3.d]), filter(nil), rowset=256, sort_keys([t1.b, ASC], [t2.b, ASC], [t3.b, ASC], [t2.c, ASC], [t3.c, ASC]), prefix_pos(1)
  1 - output([t1.b], [t2.b], [t3.b], [t2.c], [t3.c], [t1.a], [t1.c], [t1.d], [t2.a], [t2.d], [t3.a], [t3.d]), filter(nil), rowset=256, 
      conds(nil), nl_params_([t1.b], [t1.c])
  2 - output([t1.b], [t2.b], [t2.c], [t1.a], [t1.c], [t1.d], [t2.a], [t2.d]), filter(nil), rowset=256, 
      conds(nil), nl_params_([t1.b], [t1.c])
  3 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)
  4 - output([t2.a], [t2.b], [t2.c], [t2.d]), filter(nil), rowset=256, 
      access([GROUP_ID], [t2.a], [t2.b], [t2.c], [t2.d]), partitions(p0)
  5 - output([t3.a], [t3.b], [t3.c], [t3.d]), filter(nil), rowset=256, 
      access([GROUP_ID], [t3.a], [t3.b], [t3.c], [t3.d]), partitions(p0)

explain select/*+leading(t1,t2,t3),index(t1 k1), index(t2 k2), index(t3 k3), NO_USE_HASH_AGGREGATION*/ * 
from t1 left join t2 on t1.b = t2.b and t1.c = t2.c left join t3 on t1.b = t3.b and t1.c = t3.c group by t1.b, t2.b, t3.b, t2.c, t2.c, t3.c;
Query Plan
=====================================================
|ID|OPERATOR                  |NAME  |EST. ROWS|COST|
-----------------------------------------------------
|0 |MERGE GROUP BY            |      |1        |113 |
|1 | SORT                     |      |1        |113 |
|2 |  NESTED-LOOP OUTER JOIN  |      |1        |113 |
|3 |   NESTED-LOOP OUTER JOIN |      |1        |102 |
|4 |    TABLE SCAN            |t1(k1)|1        |91  |
|5 |    DISTRIBUTED TABLE SCAN|t2(k2)|1        |10  |
|6 |   DISTRIBUTED TABLE SCAN |t3(k3)|1        |10  |
=====================================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c], [t2.d], [t3.a], [t3.b], [t3.c], [t3.d]), filter(nil), rowset=256, 
      group([t1.b], [t2.b], [t3.b], [t2.c], [t3.c]), agg_func(nil)
  1 - output([t1.b], [t2.b], [t3.b], [t2.c], [t3.c], [t1.a], [t1.c], [t1.d], [t2.a], [t2.d], [t3.a], [t3.d]), filter(nil), rowset=256, sort_keys([t1.b, ASC], [t2.b, ASC], [t3.b, ASC], [t2.c, ASC], [t3.c, ASC]), prefix_pos(1)
  2 - output([t1.b], [t2.b], [t3.b], [t2.c], [t3.c], [t1.a], [t1.c], [t1.d], [t2.a], [t2.d], [t3.a], [t3.d]), filter(nil), rowset=256, 
      conds(nil), nl_params_([t1.b], [t1.c])
  3 - output([t1.b], [t2.b], [t2.c], [t1.a], [t1.c], [t1.d], [t2.a], [t2.d]), filter(nil), rowset=256, 
      conds(nil), nl_params_([t1.b], [t1.c])
  4 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)
  5 - output([t2.a], [t2.b], [t2.c], [t2.d]), filter(nil), rowset=256, 
      access([GROUP_ID], [t2.a], [t2.b], [t2.c], [t2.d]), partitions(p0)
  6 - output([t3.a], [t3.b], [t3.c], [t3.d]), filter(nil), rowset=256, 
      access([GROUP_ID], [t3.a], [t3.b], [t3.c], [t3.d]), partitions(p0)

explain select/*+index(t1 k1)*/ * from t1 where t1.b = t1.d and exists (select 1 from t2 where t1.a = t2.a) order by b, d;
Query Plan
=================================================
|ID|OPERATOR              |NAME  |EST. ROWS|COST|
-------------------------------------------------
|0 |NESTED-LOOP JOIN      |      |1        |98  |
|1 | TABLE SCAN           |t1(k1)|1        |91  |
|2 | DISTRIBUTED TABLE GET|t2    |1        |7   |
=================================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), rowset=256,
      conds(nil), nl_params_([t1.a])
  1 - output([t1.a], [t1.b], [t1.d], [t1.c]), filter([t1.b = t1.d]), rowset=256,
      access([t1.a], [t1.b], [t1.d], [t1.c]), partitions(p0)
  2 - output(nil), filter(nil), rowset=256,
      access([GROUP_ID]), partitions(p0)

explain select/*+index(t1 k1)*/ * from t1 where t1.b = t1.d and not exists (select 1 from t2 where t1.a = t2.a) order by b, d;
Query Plan
=================================================
|ID|OPERATOR              |NAME  |EST. ROWS|COST|
-------------------------------------------------
|0 |NESTED-LOOP ANTI JOIN |      |1        |99  |
|1 | TABLE SCAN           |t1(k1)|1        |91  |
|2 | DISTRIBUTED TABLE GET|t2    |1        |7   |
=================================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), rowset=256,
      conds(nil), nl_params_([t1.a])
  1 - output([t1.a], [t1.b], [t1.d], [t1.c]), filter([t1.b = t1.d]), rowset=256,
      access([t1.a], [t1.b], [t1.d], [t1.c]), partitions(p0)
  2 - output(nil), filter(nil), rowset=256,
      access(nil), partitions(p0)

drop table if exists t1, t2, t3;
create table t1(a int, b int, c int) partition by hash(a) partitions 5;
create table t2(a int, b int, c int) partition by hash(a) partitions 5;
create table t3(a int, b int, c int) partition by hash(a) partitions 5;
explain select/*+leading(t1,t2,t3)*/ * from t1, t2 where t1.a = t2.a;
Query Plan
====================================================
|ID|OPERATOR               |NAME    |EST. ROWS|COST|
----------------------------------------------------
|0 |PX COORDINATOR         |        |1        |459 |
|1 | EXCHANGE OUT DISTR    |:EX10000|1        |458 |
|2 |  PX PARTITION ITERATOR|        |1        |456 |
|3 |   HASH JOIN           |        |1        |456 |
|4 |    TABLE SCAN         |t1      |1        |228 |
|5 |    TABLE SCAN         |t2      |1        |228 |
====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t2.a, t2.b, t2.c)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t2.a, t2.b, t2.c)]), filter(nil), rowset=256, dop=1
  2 - output([t1.a], [t2.a], [t1.b], [t1.c], [t2.b], [t2.c]), filter(nil), rowset=256
  3 - output([t1.a], [t2.a], [t1.b], [t1.c], [t2.b], [t2.c]), filter(nil), rowset=256, 
      equal_conds([t1.a = t2.a]), other_conds(nil)
  4 - output([t1.a], [t1.b], [t1.c]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c]), partitions(p[0-4])
  5 - output([t2.a], [t2.b], [t2.c]), filter(nil), rowset=256, 
      access([t2.a], [t2.b], [t2.c]), partitions(p[0-4])

explain select/*+leading(t1,t2,t3)*/ * from t1, t2, t3 where t1.a = t2.a and t2.a = t3.a;
Query Plan
====================================================
|ID|OPERATOR               |NAME    |EST. ROWS|COST|
----------------------------------------------------
|0 |PX COORDINATOR         |        |1        |688 |
|1 | EXCHANGE OUT DISTR    |:EX10000|1        |687 |
|2 |  PX PARTITION ITERATOR|        |1        |684 |
|3 |   HASH JOIN           |        |1        |684 |
|4 |    HASH JOIN          |        |1        |456 |
|5 |     TABLE SCAN        |t1      |1        |228 |
|6 |     TABLE SCAN        |t2      |1        |228 |
|7 |    TABLE SCAN         |t3      |1        |228 |
====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t2.a, t2.b, t2.c, t3.a, t3.b, t3.c)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t2.a, t2.b, t2.c, t3.a, t3.b, t3.c)]), filter(nil), rowset=256, dop=1
  2 - output([t2.a], [t3.a], [t1.a], [t1.b], [t1.c], [t2.b], [t2.c], [t3.b], [t3.c]), filter(nil), rowset=256
  3 - output([t2.a], [t3.a], [t1.a], [t1.b], [t1.c], [t2.b], [t2.c], [t3.b], [t3.c]), filter(nil), rowset=256, 
      equal_conds([t2.a = t3.a]), other_conds(nil)
  4 - output([t2.a], [t1.a], [t1.b], [t1.c], [t2.b], [t2.c]), filter(nil), rowset=256, 
      equal_conds([t1.a = t2.a]), other_conds(nil)
  5 - output([t1.a], [t1.b], [t1.c]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c]), partitions(p[0-4])
  6 - output([t2.a], [t2.b], [t2.c]), filter(nil), rowset=256, 
      access([t2.a], [t2.b], [t2.c]), partitions(p[0-4])
  7 - output([t3.a], [t3.b], [t3.c]), filter(nil), rowset=256, 
      access([t3.a], [t3.b], [t3.c]), partitions(p[0-4])

explain select/*+leading(t1,t2,t3)*/ * from t1, t2, t3 where t1.a = t2.a and t1.a = t3.a;
Query Plan
====================================================
|ID|OPERATOR               |NAME    |EST. ROWS|COST|
----------------------------------------------------
|0 |PX COORDINATOR         |        |1        |688 |
|1 | EXCHANGE OUT DISTR    |:EX10000|1        |687 |
|2 |  PX PARTITION ITERATOR|        |1        |684 |
|3 |   HASH JOIN           |        |1        |684 |
|4 |    HASH JOIN          |        |1        |456 |
|5 |     TABLE SCAN        |t1      |1        |228 |
|6 |     TABLE SCAN        |t2      |1        |228 |
|7 |    TABLE SCAN         |t3      |1        |228 |
====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t2.a, t2.b, t2.c, t3.a, t3.b, t3.c)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t2.a, t2.b, t2.c, t3.a, t3.b, t3.c)]), filter(nil), rowset=256, dop=1
  2 - output([t1.a], [t3.a], [t2.a], [t1.b], [t1.c], [t2.b], [t2.c], [t3.b], [t3.c]), filter(nil), rowset=256
  3 - output([t1.a], [t3.a], [t2.a], [t1.b], [t1.c], [t2.b], [t2.c], [t3.b], [t3.c]), filter(nil), rowset=256, 
      equal_conds([t1.a = t3.a]), other_conds(nil)
  4 - output([t1.a], [t2.a], [t1.b], [t1.c], [t2.b], [t2.c]), filter(nil), rowset=256, 
      equal_conds([t1.a = t2.a]), other_conds(nil)
  5 - output([t1.a], [t1.b], [t1.c]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c]), partitions(p[0-4])
  6 - output([t2.a], [t2.b], [t2.c]), filter(nil), rowset=256, 
      access([t2.a], [t2.b], [t2.c]), partitions(p[0-4])
  7 - output([t3.a], [t3.b], [t3.c]), filter(nil), rowset=256, 
      access([t3.a], [t3.b], [t3.c]), partitions(p[0-4])

explain select/*+leading(t1,t2)*/ * from t1 left join t2 on t1.a = t2.a;
Query Plan
====================================================
|ID|OPERATOR               |NAME    |EST. ROWS|COST|
----------------------------------------------------
|0 |PX COORDINATOR         |        |1        |459 |
|1 | EXCHANGE OUT DISTR    |:EX10000|1        |458 |
|2 |  PX PARTITION ITERATOR|        |1        |456 |
|3 |   HASH OUTER JOIN     |        |1        |456 |
|4 |    TABLE SCAN         |t1      |1        |228 |
|5 |    TABLE SCAN         |t2      |1        |228 |
====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t2.a, t2.b, t2.c)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t2.a, t2.b, t2.c)]), filter(nil), rowset=256, dop=1
  2 - output([t1.a], [t2.a], [t1.b], [t1.c], [t2.b], [t2.c]), filter(nil), rowset=256
  3 - output([t1.a], [t2.a], [t1.b], [t1.c], [t2.b], [t2.c]), filter(nil), rowset=256, 
      equal_conds([t1.a = t2.a]), other_conds(nil)
  4 - output([t1.a], [t1.b], [t1.c]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c]), partitions(p[0-4])
  5 - output([t2.a], [t2.b], [t2.c]), filter(nil), rowset=256, 
      access([t2.a], [t2.b], [t2.c]), partitions(p[0-4])

explain select/*+leading(t1,t2,t3)*/ * from t1 left join t2 on t1.a = t2.a left join t3 on t1.a = t3.a;
Query Plan
====================================================
|ID|OPERATOR               |NAME    |EST. ROWS|COST|
----------------------------------------------------
|0 |PX COORDINATOR         |        |1        |688 |
|1 | EXCHANGE OUT DISTR    |:EX10000|1        |687 |
|2 |  PX PARTITION ITERATOR|        |1        |684 |
|3 |   HASH OUTER JOIN     |        |1        |684 |
|4 |    HASH OUTER JOIN    |        |1        |456 |
|5 |     TABLE SCAN        |t1      |1        |228 |
|6 |     TABLE SCAN        |t2      |1        |228 |
|7 |    TABLE SCAN         |t3      |1        |228 |
====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t2.a, t2.b, t2.c, t3.a, t3.b, t3.c)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t2.a, t2.b, t2.c, t3.a, t3.b, t3.c)]), filter(nil), rowset=256, dop=1
  2 - output([t1.a], [t3.a], [t2.a], [t1.b], [t1.c], [t2.b], [t2.c], [t3.b], [t3.c]), filter(nil), rowset=256
  3 - output([t1.a], [t3.a], [t2.a], [t1.b], [t1.c], [t2.b], [t2.c], [t3.b], [t3.c]), filter(nil), rowset=256, 
      equal_conds([t1.a = t3.a]), other_conds(nil)
  4 - output([t1.a], [t2.a], [t1.b], [t1.c], [t2.b], [t2.c]), filter(nil), rowset=256, 
      equal_conds([t1.a = t2.a]), other_conds(nil)
  5 - output([t1.a], [t1.b], [t1.c]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c]), partitions(p[0-4])
  6 - output([t2.a], [t2.b], [t2.c]), filter(nil), rowset=256, 
      access([t2.a], [t2.b], [t2.c]), partitions(p[0-4])
  7 - output([t3.a], [t3.b], [t3.c]), filter(nil), rowset=256, 
      access([t3.a], [t3.b], [t3.c]), partitions(p[0-4])

explain select/*+leading(t1,t2,t3)*/ * from t1 left join t2 on t1.a = t2.a left join t3 on t2.a = t3.a;
Query Plan
====================================================
|ID|OPERATOR               |NAME    |EST. ROWS|COST|
----------------------------------------------------
|0 |PX COORDINATOR         |        |1        |688 |
|1 | EXCHANGE OUT DISTR    |:EX10000|1        |687 |
|2 |  PX PARTITION ITERATOR|        |1        |684 |
|3 |   HASH OUTER JOIN     |        |1        |684 |
|4 |    HASH OUTER JOIN    |        |1        |456 |
|5 |     TABLE SCAN        |t1      |1        |228 |
|6 |     TABLE SCAN        |t2      |1        |228 |
|7 |    TABLE SCAN         |t3      |1        |228 |
====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t2.a, t2.b, t2.c, t3.a, t3.b, t3.c)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t2.a, t2.b, t2.c, t3.a, t3.b, t3.c)]), filter(nil), rowset=256, dop=1
  2 - output([t2.a], [t3.a], [t1.a], [t1.b], [t1.c], [t2.b], [t2.c], [t3.b], [t3.c]), filter(nil), rowset=256
  3 - output([t2.a], [t3.a], [t1.a], [t1.b], [t1.c], [t2.b], [t2.c], [t3.b], [t3.c]), filter(nil), rowset=256, 
      equal_conds([t2.a = t3.a]), other_conds(nil)
  4 - output([t2.a], [t1.a], [t1.b], [t1.c], [t2.b], [t2.c]), filter(nil), rowset=256, 
      equal_conds([t1.a = t2.a]), other_conds(nil)
  5 - output([t1.a], [t1.b], [t1.c]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c]), partitions(p[0-4])
  6 - output([t2.a], [t2.b], [t2.c]), filter(nil), rowset=256, 
      access([t2.a], [t2.b], [t2.c]), partitions(p[0-4])
  7 - output([t3.a], [t3.b], [t3.c]), filter(nil), rowset=256, 
      access([t3.a], [t3.b], [t3.c]), partitions(p[0-4])

explain select/*+leading(t1,t2)*/ * from t1 full join t2 on t1.a = t2.a;
Query Plan
====================================================
|ID|OPERATOR               |NAME    |EST. ROWS|COST|
----------------------------------------------------
|0 |PX COORDINATOR         |        |1        |459 |
|1 | EXCHANGE OUT DISTR    |:EX10000|1        |458 |
|2 |  PX PARTITION ITERATOR|        |1        |456 |
|3 |   HASH FULL OUTER JOIN|        |1        |456 |
|4 |    TABLE SCAN         |t1      |1        |228 |
|5 |    TABLE SCAN         |t2      |1        |228 |
====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t2.a, t2.b, t2.c)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t2.a, t2.b, t2.c)]), filter(nil), rowset=256, dop=1
  2 - output([t1.a], [t2.a], [t1.b], [t1.c], [t2.b], [t2.c]), filter(nil), rowset=256
  3 - output([t1.a], [t2.a], [t1.b], [t1.c], [t2.b], [t2.c]), filter(nil), rowset=256, 
      equal_conds([t1.a = t2.a]), other_conds(nil)
  4 - output([t1.a], [t1.b], [t1.c]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c]), partitions(p[0-4])
  5 - output([t2.a], [t2.b], [t2.c]), filter(nil), rowset=256, 
      access([t2.a], [t2.b], [t2.c]), partitions(p[0-4])

explain select/*+leading(t1,t2,t3)*/ * from t1 full join t2 on t1.a = t2.a full join t3 on t1.a = t3.a;
Query Plan
=====================================================
|ID|OPERATOR                |NAME    |EST. ROWS|COST|
-----------------------------------------------------
|0 |PX COORDINATOR          |        |1        |688 |
|1 | EXCHANGE OUT DISTR     |:EX10000|1        |687 |
|2 |  PX PARTITION ITERATOR |        |1        |684 |
|3 |   HASH FULL OUTER JOIN |        |1        |684 |
|4 |    HASH FULL OUTER JOIN|        |1        |456 |
|5 |     TABLE SCAN         |t1      |1        |228 |
|6 |     TABLE SCAN         |t2      |1        |228 |
|7 |    TABLE SCAN          |t3      |1        |228 |
=====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t2.a, t2.b, t2.c, t3.a, t3.b, t3.c)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t2.a, t2.b, t2.c, t3.a, t3.b, t3.c)]), filter(nil), rowset=256, dop=1
  2 - output([t1.a], [t3.a], [t2.a], [t1.b], [t1.c], [t2.b], [t2.c], [t3.b], [t3.c]), filter(nil), rowset=256
  3 - output([t1.a], [t3.a], [t2.a], [t1.b], [t1.c], [t2.b], [t2.c], [t3.b], [t3.c]), filter(nil), rowset=256, 
      equal_conds([t1.a = t3.a]), other_conds(nil)
  4 - output([t1.a], [t2.a], [t1.b], [t1.c], [t2.b], [t2.c]), filter(nil), rowset=256, 
      equal_conds([t1.a = t2.a]), other_conds(nil)
  5 - output([t1.a], [t1.b], [t1.c]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c]), partitions(p[0-4])
  6 - output([t2.a], [t2.b], [t2.c]), filter(nil), rowset=256, 
      access([t2.a], [t2.b], [t2.c]), partitions(p[0-4])
  7 - output([t3.a], [t3.b], [t3.c]), filter(nil), rowset=256, 
      access([t3.a], [t3.b], [t3.c]), partitions(p[0-4])

explain select/*+leading(t1,t2,t3)*/ * from t1 full join t2 on t1.a = t2.a full join t3 on t2.a = t3.a;
Query Plan
=====================================================
|ID|OPERATOR                |NAME    |EST. ROWS|COST|
-----------------------------------------------------
|0 |PX COORDINATOR          |        |1        |688 |
|1 | EXCHANGE OUT DISTR     |:EX10000|1        |687 |
|2 |  PX PARTITION ITERATOR |        |1        |684 |
|3 |   HASH FULL OUTER JOIN |        |1        |684 |
|4 |    HASH FULL OUTER JOIN|        |1        |456 |
|5 |     TABLE SCAN         |t1      |1        |228 |
|6 |     TABLE SCAN         |t2      |1        |228 |
|7 |    TABLE SCAN          |t3      |1        |228 |
=====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t2.a, t2.b, t2.c, t3.a, t3.b, t3.c)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t2.a, t2.b, t2.c, t3.a, t3.b, t3.c)]), filter(nil), rowset=256, dop=1
  2 - output([t2.a], [t3.a], [t1.a], [t1.b], [t1.c], [t2.b], [t2.c], [t3.b], [t3.c]), filter(nil), rowset=256
  3 - output([t2.a], [t3.a], [t1.a], [t1.b], [t1.c], [t2.b], [t2.c], [t3.b], [t3.c]), filter(nil), rowset=256, 
      equal_conds([t2.a = t3.a]), other_conds(nil)
  4 - output([t2.a], [t1.a], [t1.b], [t1.c], [t2.b], [t2.c]), filter(nil), rowset=256, 
      equal_conds([t1.a = t2.a]), other_conds(nil)
  5 - output([t1.a], [t1.b], [t1.c]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c]), partitions(p[0-4])
  6 - output([t2.a], [t2.b], [t2.c]), filter(nil), rowset=256, 
      access([t2.a], [t2.b], [t2.c]), partitions(p[0-4])
  7 - output([t3.a], [t3.b], [t3.c]), filter(nil), rowset=256, 
      access([t3.a], [t3.b], [t3.c]), partitions(p[0-4])

explain select/*+leading(t1,t2,t3)*/ * from t1 inner join t2 on t1.a = t2.a left join t3 on t1.a = t3.a;
Query Plan
====================================================
|ID|OPERATOR               |NAME    |EST. ROWS|COST|
----------------------------------------------------
|0 |PX COORDINATOR         |        |1        |688 |
|1 | EXCHANGE OUT DISTR    |:EX10000|1        |687 |
|2 |  PX PARTITION ITERATOR|        |1        |684 |
|3 |   HASH OUTER JOIN     |        |1        |684 |
|4 |    HASH JOIN          |        |1        |456 |
|5 |     TABLE SCAN        |t1      |1        |228 |
|6 |     TABLE SCAN        |t2      |1        |228 |
|7 |    TABLE SCAN         |t3      |1        |228 |
====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t2.a, t2.b, t2.c, t3.a, t3.b, t3.c)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t2.a, t2.b, t2.c, t3.a, t3.b, t3.c)]), filter(nil), rowset=256, dop=1
  2 - output([t1.a], [t3.a], [t2.a], [t1.b], [t1.c], [t2.b], [t2.c], [t3.b], [t3.c]), filter(nil), rowset=256
  3 - output([t1.a], [t3.a], [t2.a], [t1.b], [t1.c], [t2.b], [t2.c], [t3.b], [t3.c]), filter(nil), rowset=256, 
      equal_conds([t1.a = t3.a]), other_conds(nil)
  4 - output([t1.a], [t2.a], [t1.b], [t1.c], [t2.b], [t2.c]), filter(nil), rowset=256, 
      equal_conds([t1.a = t2.a]), other_conds(nil)
  5 - output([t1.a], [t1.b], [t1.c]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c]), partitions(p[0-4])
  6 - output([t2.a], [t2.b], [t2.c]), filter(nil), rowset=256, 
      access([t2.a], [t2.b], [t2.c]), partitions(p[0-4])
  7 - output([t3.a], [t3.b], [t3.c]), filter(nil), rowset=256, 
      access([t3.a], [t3.b], [t3.c]), partitions(p[0-4])

explain select/*+leading(t1,t2,t3)*/ * from t1 inner join t2 on t1.a = t2.a left join t3 on t2.a = t3.a;
Query Plan
====================================================
|ID|OPERATOR               |NAME    |EST. ROWS|COST|
----------------------------------------------------
|0 |PX COORDINATOR         |        |1        |688 |
|1 | EXCHANGE OUT DISTR    |:EX10000|1        |687 |
|2 |  PX PARTITION ITERATOR|        |1        |684 |
|3 |   HASH OUTER JOIN     |        |1        |684 |
|4 |    HASH JOIN          |        |1        |456 |
|5 |     TABLE SCAN        |t1      |1        |228 |
|6 |     TABLE SCAN        |t2      |1        |228 |
|7 |    TABLE SCAN         |t3      |1        |228 |
====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t2.a, t2.b, t2.c, t3.a, t3.b, t3.c)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t2.a, t2.b, t2.c, t3.a, t3.b, t3.c)]), filter(nil), rowset=256, dop=1
  2 - output([t2.a], [t3.a], [t1.a], [t1.b], [t1.c], [t2.b], [t2.c], [t3.b], [t3.c]), filter(nil), rowset=256
  3 - output([t2.a], [t3.a], [t1.a], [t1.b], [t1.c], [t2.b], [t2.c], [t3.b], [t3.c]), filter(nil), rowset=256, 
      equal_conds([t2.a = t3.a]), other_conds(nil)
  4 - output([t2.a], [t1.a], [t1.b], [t1.c], [t2.b], [t2.c]), filter(nil), rowset=256, 
      equal_conds([t1.a = t2.a]), other_conds(nil)
  5 - output([t1.a], [t1.b], [t1.c]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c]), partitions(p[0-4])
  6 - output([t2.a], [t2.b], [t2.c]), filter(nil), rowset=256, 
      access([t2.a], [t2.b], [t2.c]), partitions(p[0-4])
  7 - output([t3.a], [t3.b], [t3.c]), filter(nil), rowset=256, 
      access([t3.a], [t3.b], [t3.c]), partitions(p[0-4])

explain select/*+leading(t1,t2,t3)*/ * from t1 inner join t2 on t1.a = t2.a full join t3 on t1.a = t3.a;
Query Plan
====================================================
|ID|OPERATOR               |NAME    |EST. ROWS|COST|
----------------------------------------------------
|0 |PX COORDINATOR         |        |1        |688 |
|1 | EXCHANGE OUT DISTR    |:EX10000|1        |687 |
|2 |  PX PARTITION ITERATOR|        |1        |684 |
|3 |   HASH FULL OUTER JOIN|        |1        |684 |
|4 |    HASH JOIN          |        |1        |456 |
|5 |     TABLE SCAN        |t1      |1        |228 |
|6 |     TABLE SCAN        |t2      |1        |228 |
|7 |    TABLE SCAN         |t3      |1        |228 |
====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t2.a, t2.b, t2.c, t3.a, t3.b, t3.c)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t2.a, t2.b, t2.c, t3.a, t3.b, t3.c)]), filter(nil), rowset=256, dop=1
  2 - output([t1.a], [t3.a], [t2.a], [t1.b], [t1.c], [t2.b], [t2.c], [t3.b], [t3.c]), filter(nil), rowset=256
  3 - output([t1.a], [t3.a], [t2.a], [t1.b], [t1.c], [t2.b], [t2.c], [t3.b], [t3.c]), filter(nil), rowset=256, 
      equal_conds([t1.a = t3.a]), other_conds(nil)
  4 - output([t1.a], [t2.a], [t1.b], [t1.c], [t2.b], [t2.c]), filter(nil), rowset=256, 
      equal_conds([t1.a = t2.a]), other_conds(nil)
  5 - output([t1.a], [t1.b], [t1.c]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c]), partitions(p[0-4])
  6 - output([t2.a], [t2.b], [t2.c]), filter(nil), rowset=256, 
      access([t2.a], [t2.b], [t2.c]), partitions(p[0-4])
  7 - output([t3.a], [t3.b], [t3.c]), filter(nil), rowset=256, 
      access([t3.a], [t3.b], [t3.c]), partitions(p[0-4])

explain select/*+leading(t1,t2,t3)*/ * from t1 inner join t2 on t1.a = t2.a full join t3 on t2.a = t3.a;
Query Plan
====================================================
|ID|OPERATOR               |NAME    |EST. ROWS|COST|
----------------------------------------------------
|0 |PX COORDINATOR         |        |1        |688 |
|1 | EXCHANGE OUT DISTR    |:EX10000|1        |687 |
|2 |  PX PARTITION ITERATOR|        |1        |684 |
|3 |   HASH FULL OUTER JOIN|        |1        |684 |
|4 |    HASH JOIN          |        |1        |456 |
|5 |     TABLE SCAN        |t1      |1        |228 |
|6 |     TABLE SCAN        |t2      |1        |228 |
|7 |    TABLE SCAN         |t3      |1        |228 |
====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t2.a, t2.b, t2.c, t3.a, t3.b, t3.c)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t2.a, t2.b, t2.c, t3.a, t3.b, t3.c)]), filter(nil), rowset=256, dop=1
  2 - output([t2.a], [t3.a], [t1.a], [t1.b], [t1.c], [t2.b], [t2.c], [t3.b], [t3.c]), filter(nil), rowset=256
  3 - output([t2.a], [t3.a], [t1.a], [t1.b], [t1.c], [t2.b], [t2.c], [t3.b], [t3.c]), filter(nil), rowset=256, 
      equal_conds([t2.a = t3.a]), other_conds(nil)
  4 - output([t2.a], [t1.a], [t1.b], [t1.c], [t2.b], [t2.c]), filter(nil), rowset=256, 
      equal_conds([t1.a = t2.a]), other_conds(nil)
  5 - output([t1.a], [t1.b], [t1.c]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c]), partitions(p[0-4])
  6 - output([t2.a], [t2.b], [t2.c]), filter(nil), rowset=256, 
      access([t2.a], [t2.b], [t2.c]), partitions(p[0-4])
  7 - output([t3.a], [t3.b], [t3.c]), filter(nil), rowset=256, 
      access([t3.a], [t3.b], [t3.c]), partitions(p[0-4])

explain select/*+leading(t1,t2,t3)*/ * from t1 left join t2 on t1.a = t2.a inner join t3 on t1.a = t3.a;
Query Plan
====================================================
|ID|OPERATOR               |NAME    |EST. ROWS|COST|
----------------------------------------------------
|0 |PX COORDINATOR         |        |1        |688 |
|1 | EXCHANGE OUT DISTR    |:EX10000|1        |687 |
|2 |  PX PARTITION ITERATOR|        |1        |684 |
|3 |   HASH JOIN           |        |1        |684 |
|4 |    HASH OUTER JOIN    |        |1        |456 |
|5 |     TABLE SCAN        |t1      |1        |228 |
|6 |     TABLE SCAN        |t2      |1        |228 |
|7 |    TABLE SCAN         |t3      |1        |228 |
====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t2.a, t2.b, t2.c, t3.a, t3.b, t3.c)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t2.a, t2.b, t2.c, t3.a, t3.b, t3.c)]), filter(nil), rowset=256, dop=1
  2 - output([t1.a], [t3.a], [t2.a], [t1.b], [t1.c], [t2.b], [t2.c], [t3.b], [t3.c]), filter(nil), rowset=256
  3 - output([t1.a], [t3.a], [t2.a], [t1.b], [t1.c], [t2.b], [t2.c], [t3.b], [t3.c]), filter(nil), rowset=256, 
      equal_conds([t1.a = t3.a]), other_conds(nil)
  4 - output([t1.a], [t2.a], [t1.b], [t1.c], [t2.b], [t2.c]), filter(nil), rowset=256, 
      equal_conds([t1.a = t2.a]), other_conds(nil)
  5 - output([t1.a], [t1.b], [t1.c]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c]), partitions(p[0-4])
  6 - output([t2.a], [t2.b], [t2.c]), filter(nil), rowset=256, 
      access([t2.a], [t2.b], [t2.c]), partitions(p[0-4])
  7 - output([t3.a], [t3.b], [t3.c]), filter(nil), rowset=256, 
      access([t3.a], [t3.b], [t3.c]), partitions(p[0-4])

explain select/*+leading(t1,t2,t3)*/ * from t1 left join t2 on t1.a = t2.a inner join t3 on t2.a = t3.a;
Query Plan
====================================================
|ID|OPERATOR               |NAME    |EST. ROWS|COST|
----------------------------------------------------
|0 |PX COORDINATOR         |        |1        |688 |
|1 | EXCHANGE OUT DISTR    |:EX10000|1        |687 |
|2 |  PX PARTITION ITERATOR|        |1        |684 |
|3 |   HASH JOIN           |        |1        |684 |
|4 |    HASH JOIN          |        |1        |456 |
|5 |     TABLE SCAN        |t1      |1        |228 |
|6 |     TABLE SCAN        |t2      |1        |228 |
|7 |    TABLE SCAN         |t3      |1        |228 |
====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t2.a, t2.b, t2.c, t3.a, t3.b, t3.c)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t2.a, t2.b, t2.c, t3.a, t3.b, t3.c)]), filter(nil), rowset=256, dop=1
  2 - output([t2.a], [t3.a], [t1.a], [t1.b], [t1.c], [t2.b], [t2.c], [t3.b], [t3.c]), filter(nil), rowset=256
  3 - output([t2.a], [t3.a], [t1.a], [t1.b], [t1.c], [t2.b], [t2.c], [t3.b], [t3.c]), filter(nil), rowset=256, 
      equal_conds([t2.a = t3.a]), other_conds(nil)
  4 - output([t2.a], [t1.a], [t1.b], [t1.c], [t2.b], [t2.c]), filter(nil), rowset=256, 
      equal_conds([t1.a = t2.a]), other_conds(nil)
  5 - output([t1.a], [t1.b], [t1.c]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c]), partitions(p[0-4])
  6 - output([t2.a], [t2.b], [t2.c]), filter(nil), rowset=256, 
      access([t2.a], [t2.b], [t2.c]), partitions(p[0-4])
  7 - output([t3.a], [t3.b], [t3.c]), filter(nil), rowset=256, 
      access([t3.a], [t3.b], [t3.c]), partitions(p[0-4])

explain select/*+leading(t1,t2,t3)*/ * from t1 full join t2 on t1.a = t2.a inner join t3 on t1.a = t3.a;
Query Plan
====================================================
|ID|OPERATOR               |NAME    |EST. ROWS|COST|
----------------------------------------------------
|0 |PX COORDINATOR         |        |1        |688 |
|1 | EXCHANGE OUT DISTR    |:EX10000|1        |687 |
|2 |  PX PARTITION ITERATOR|        |1        |684 |
|3 |   HASH JOIN           |        |1        |684 |
|4 |    HASH OUTER JOIN    |        |1        |456 |
|5 |     TABLE SCAN        |t1      |1        |228 |
|6 |     TABLE SCAN        |t2      |1        |228 |
|7 |    TABLE SCAN         |t3      |1        |228 |
====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t2.a, t2.b, t2.c, t3.a, t3.b, t3.c)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t2.a, t2.b, t2.c, t3.a, t3.b, t3.c)]), filter(nil), rowset=256, dop=1
  2 - output([t1.a], [t3.a], [t2.a], [t1.b], [t1.c], [t2.b], [t2.c], [t3.b], [t3.c]), filter(nil), rowset=256
  3 - output([t1.a], [t3.a], [t2.a], [t1.b], [t1.c], [t2.b], [t2.c], [t3.b], [t3.c]), filter(nil), rowset=256, 
      equal_conds([t1.a = t3.a]), other_conds(nil)
  4 - output([t1.a], [t2.a], [t1.b], [t1.c], [t2.b], [t2.c]), filter(nil), rowset=256, 
      equal_conds([t1.a = t2.a]), other_conds(nil)
  5 - output([t1.a], [t1.b], [t1.c]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c]), partitions(p[0-4])
  6 - output([t2.a], [t2.b], [t2.c]), filter(nil), rowset=256, 
      access([t2.a], [t2.b], [t2.c]), partitions(p[0-4])
  7 - output([t3.a], [t3.b], [t3.c]), filter(nil), rowset=256, 
      access([t3.a], [t3.b], [t3.c]), partitions(p[0-4])

explain select/*+leading(t1,t2,t3)*/ * from t1 full join t2 on t1.a = t2.a inner join t3 on t2.a = t3.a;
Query Plan
======================================================
|ID|OPERATOR                 |NAME    |EST. ROWS|COST|
------------------------------------------------------
|0 |PX COORDINATOR           |        |1        |688 |
|1 | EXCHANGE OUT DISTR      |:EX10000|1        |687 |
|2 |  PX PARTITION ITERATOR  |        |1        |684 |
|3 |   HASH JOIN             |        |1        |684 |
|4 |    HASH RIGHT OUTER JOIN|        |1        |456 |
|5 |     TABLE SCAN          |t1      |1        |228 |
|6 |     TABLE SCAN          |t2      |1        |228 |
|7 |    TABLE SCAN           |t3      |1        |228 |
======================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t2.a, t2.b, t2.c, t3.a, t3.b, t3.c)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t2.a, t2.b, t2.c, t3.a, t3.b, t3.c)]), filter(nil), rowset=256, dop=1
  2 - output([t2.a], [t3.a], [t1.a], [t1.b], [t1.c], [t2.b], [t2.c], [t3.b], [t3.c]), filter(nil), rowset=256
  3 - output([t2.a], [t3.a], [t1.a], [t1.b], [t1.c], [t2.b], [t2.c], [t3.b], [t3.c]), filter(nil), rowset=256, 
      equal_conds([t2.a = t3.a]), other_conds(nil)
  4 - output([t2.a], [t1.a], [t1.b], [t1.c], [t2.b], [t2.c]), filter(nil), rowset=256, 
      equal_conds([t1.a = t2.a]), other_conds(nil)
  5 - output([t1.a], [t1.b], [t1.c]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c]), partitions(p[0-4])
  6 - output([t2.a], [t2.b], [t2.c]), filter(nil), rowset=256, 
      access([t2.a], [t2.b], [t2.c]), partitions(p[0-4])
  7 - output([t3.a], [t3.b], [t3.c]), filter(nil), rowset=256, 
      access([t3.a], [t3.b], [t3.c]), partitions(p[0-4])

explain select/*+leading(t1,t2,t3)*/ * from t1 full join t2 on t1.a = t2.a left join t3 on t1.a = t3.a;
Query Plan
=====================================================
|ID|OPERATOR                |NAME    |EST. ROWS|COST|
-----------------------------------------------------
|0 |PX COORDINATOR          |        |1        |688 |
|1 | EXCHANGE OUT DISTR     |:EX10000|1        |687 |
|2 |  PX PARTITION ITERATOR |        |1        |684 |
|3 |   HASH OUTER JOIN      |        |1        |684 |
|4 |    HASH FULL OUTER JOIN|        |1        |456 |
|5 |     TABLE SCAN         |t1      |1        |228 |
|6 |     TABLE SCAN         |t2      |1        |228 |
|7 |    TABLE SCAN          |t3      |1        |228 |
=====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t2.a, t2.b, t2.c, t3.a, t3.b, t3.c)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t2.a, t2.b, t2.c, t3.a, t3.b, t3.c)]), filter(nil), rowset=256, dop=1
  2 - output([t1.a], [t3.a], [t2.a], [t1.b], [t1.c], [t2.b], [t2.c], [t3.b], [t3.c]), filter(nil), rowset=256
  3 - output([t1.a], [t3.a], [t2.a], [t1.b], [t1.c], [t2.b], [t2.c], [t3.b], [t3.c]), filter(nil), rowset=256, 
      equal_conds([t1.a = t3.a]), other_conds(nil)
  4 - output([t1.a], [t2.a], [t1.b], [t1.c], [t2.b], [t2.c]), filter(nil), rowset=256, 
      equal_conds([t1.a = t2.a]), other_conds(nil)
  5 - output([t1.a], [t1.b], [t1.c]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c]), partitions(p[0-4])
  6 - output([t2.a], [t2.b], [t2.c]), filter(nil), rowset=256, 
      access([t2.a], [t2.b], [t2.c]), partitions(p[0-4])
  7 - output([t3.a], [t3.b], [t3.c]), filter(nil), rowset=256, 
      access([t3.a], [t3.b], [t3.c]), partitions(p[0-4])

explain select/*+leading(t1,t2,t3)*/ * from t1 full join t2 on t1.a = t2.a left join t3 on t2.a = t3.a;
Query Plan
=====================================================
|ID|OPERATOR                |NAME    |EST. ROWS|COST|
-----------------------------------------------------
|0 |PX COORDINATOR          |        |1        |688 |
|1 | EXCHANGE OUT DISTR     |:EX10000|1        |687 |
|2 |  PX PARTITION ITERATOR |        |1        |684 |
|3 |   HASH OUTER JOIN      |        |1        |684 |
|4 |    HASH FULL OUTER JOIN|        |1        |456 |
|5 |     TABLE SCAN         |t1      |1        |228 |
|6 |     TABLE SCAN         |t2      |1        |228 |
|7 |    TABLE SCAN          |t3      |1        |228 |
=====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t2.a, t2.b, t2.c, t3.a, t3.b, t3.c)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t2.a, t2.b, t2.c, t3.a, t3.b, t3.c)]), filter(nil), rowset=256, dop=1
  2 - output([t2.a], [t3.a], [t1.a], [t1.b], [t1.c], [t2.b], [t2.c], [t3.b], [t3.c]), filter(nil), rowset=256
  3 - output([t2.a], [t3.a], [t1.a], [t1.b], [t1.c], [t2.b], [t2.c], [t3.b], [t3.c]), filter(nil), rowset=256, 
      equal_conds([t2.a = t3.a]), other_conds(nil)
  4 - output([t2.a], [t1.a], [t1.b], [t1.c], [t2.b], [t2.c]), filter(nil), rowset=256, 
      equal_conds([t1.a = t2.a]), other_conds(nil)
  5 - output([t1.a], [t1.b], [t1.c]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c]), partitions(p[0-4])
  6 - output([t2.a], [t2.b], [t2.c]), filter(nil), rowset=256, 
      access([t2.a], [t2.b], [t2.c]), partitions(p[0-4])
  7 - output([t3.a], [t3.b], [t3.c]), filter(nil), rowset=256, 
      access([t3.a], [t3.b], [t3.c]), partitions(p[0-4])

explain select * from t1 where t1.a in (select t2.a from t2);
Query Plan
====================================================
|ID|OPERATOR               |NAME    |EST. ROWS|COST|
----------------------------------------------------
|0 |PX COORDINATOR         |        |1        |457 |
|1 | EXCHANGE OUT DISTR    |:EX10000|1        |457 |
|2 |  PX PARTITION ITERATOR|        |1        |456 |
|3 |   HASH RIGHT SEMI JOIN|        |1        |456 |
|4 |    TABLE SCAN         |t2      |1        |228 |
|5 |    TABLE SCAN         |t1      |1        |228 |
====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c)]), filter(nil), rowset=256, dop=1
  2 - output([t1.a], [t1.b], [t1.c]), filter(nil), rowset=256
  3 - output([t1.a], [t1.b], [t1.c]), filter(nil), rowset=256, 
      equal_conds([t1.a = t2.a]), other_conds(nil)
  4 - output([t2.a]), filter(nil), rowset=256, 
      access([t2.a]), partitions(p[0-4])
  5 - output([t1.a], [t1.b], [t1.c]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c]), partitions(p[0-4])

explain select * from t1 where t1.a in (select t2.a from t2) and t1.a in (select t3.a from t3);
Query Plan
=====================================================
|ID|OPERATOR                |NAME    |EST. ROWS|COST|
-----------------------------------------------------
|0 |PX COORDINATOR          |        |1        |685 |
|1 | EXCHANGE OUT DISTR     |:EX10000|1        |685 |
|2 |  PX PARTITION ITERATOR |        |1        |684 |
|3 |   HASH RIGHT SEMI JOIN |        |1        |684 |
|4 |    TABLE SCAN          |t3      |1        |228 |
|5 |    HASH RIGHT SEMI JOIN|        |1        |456 |
|6 |     TABLE SCAN         |t2      |1        |228 |
|7 |     TABLE SCAN         |t1      |1        |228 |
=====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c)]), filter(nil), rowset=256, dop=1
  2 - output([t1.a], [t1.b], [t1.c]), filter(nil), rowset=256
  3 - output([t1.a], [t1.b], [t1.c]), filter(nil), rowset=256, 
      equal_conds([t1.a = t3.a]), other_conds(nil)
  4 - output([t3.a]), filter(nil), rowset=256, 
      access([t3.a]), partitions(p[0-4])
  5 - output([t1.a], [t1.b], [t1.c]), filter(nil), rowset=256, 
      equal_conds([t1.a = t2.a]), other_conds(nil)
  6 - output([t2.a]), filter(nil), rowset=256, 
      access([t2.a]), partitions(p[0-4])
  7 - output([t1.a], [t1.b], [t1.c]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c]), partitions(p[0-4])

explain select * from t1 where t1.a in (select t2.a from t2 where t2.a in (select t3.a from t3));
Query Plan
====================================================
|ID|OPERATOR               |NAME    |EST. ROWS|COST|
----------------------------------------------------
|0 |PX COORDINATOR         |        |1        |685 |
|1 | EXCHANGE OUT DISTR    |:EX10000|1        |685 |
|2 |  PX PARTITION ITERATOR|        |1        |684 |
|3 |   HASH RIGHT SEMI JOIN|        |1        |684 |
|4 |    SUBPLAN SCAN       |VIEW2   |1        |456 |
|5 |     HASH SEMI JOIN    |        |1        |456 |
|6 |      TABLE SCAN       |t2      |1        |228 |
|7 |      TABLE SCAN       |t3      |1        |228 |
|8 |    TABLE SCAN         |t1      |1        |228 |
====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c)]), filter(nil), rowset=256, dop=1
  2 - output([t1.a], [t1.b], [t1.c]), filter(nil), rowset=256
  3 - output([t1.a], [t1.b], [t1.c]), filter(nil), rowset=256, 
      equal_conds([t1.a = VIEW2.a]), other_conds(nil)
  4 - output([VIEW2.a]), filter(nil), rowset=256, 
      access([VIEW2.a])
  5 - output([t2.a]), filter(nil), rowset=256, 
      equal_conds([t2.a = t3.a]), other_conds(nil)
  6 - output([t2.a]), filter(nil), rowset=256, 
      access([t2.a]), partitions(p[0-4])
  7 - output([t3.a]), filter(nil), rowset=256, 
      access([t3.a]), partitions(p[0-4])
  8 - output([t1.a], [t1.b], [t1.c]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c]), partitions(p[0-4])

drop table if exists t1, t2, t3;
create table t1(a int, b int, c int) partition by key(a) partitions 5;
create table t2(a int, b int, c int) partition by key(a) partitions 5;
create table t3(a int, b int, c int) partition by key(a) partitions 5;
explain select/*+leading(t1,t2,t3)*/ * from t1, t2 where t1.a = t2.a;
Query Plan
====================================================
|ID|OPERATOR               |NAME    |EST. ROWS|COST|
----------------------------------------------------
|0 |PX COORDINATOR         |        |1        |459 |
|1 | EXCHANGE OUT DISTR    |:EX10000|1        |458 |
|2 |  PX PARTITION ITERATOR|        |1        |456 |
|3 |   HASH JOIN           |        |1        |456 |
|4 |    TABLE SCAN         |t1      |1        |228 |
|5 |    TABLE SCAN         |t2      |1        |228 |
====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t2.a, t2.b, t2.c)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t2.a, t2.b, t2.c)]), filter(nil), rowset=256, dop=1
  2 - output([t1.a], [t2.a], [t1.b], [t1.c], [t2.b], [t2.c]), filter(nil), rowset=256
  3 - output([t1.a], [t2.a], [t1.b], [t1.c], [t2.b], [t2.c]), filter(nil), rowset=256, 
      equal_conds([t1.a = t2.a]), other_conds(nil)
  4 - output([t1.a], [t1.b], [t1.c]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c]), partitions(p[0-4])
  5 - output([t2.a], [t2.b], [t2.c]), filter(nil), rowset=256, 
      access([t2.a], [t2.b], [t2.c]), partitions(p[0-4])

explain select/*+leading(t1,t2,t3)*/ * from t1, t2, t3 where t1.a = t2.a and t2.a = t3.a;
Query Plan
====================================================
|ID|OPERATOR               |NAME    |EST. ROWS|COST|
----------------------------------------------------
|0 |PX COORDINATOR         |        |1        |688 |
|1 | EXCHANGE OUT DISTR    |:EX10000|1        |687 |
|2 |  PX PARTITION ITERATOR|        |1        |684 |
|3 |   HASH JOIN           |        |1        |684 |
|4 |    HASH JOIN          |        |1        |456 |
|5 |     TABLE SCAN        |t1      |1        |228 |
|6 |     TABLE SCAN        |t2      |1        |228 |
|7 |    TABLE SCAN         |t3      |1        |228 |
====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t2.a, t2.b, t2.c, t3.a, t3.b, t3.c)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t2.a, t2.b, t2.c, t3.a, t3.b, t3.c)]), filter(nil), rowset=256, dop=1
  2 - output([t2.a], [t3.a], [t1.a], [t1.b], [t1.c], [t2.b], [t2.c], [t3.b], [t3.c]), filter(nil), rowset=256
  3 - output([t2.a], [t3.a], [t1.a], [t1.b], [t1.c], [t2.b], [t2.c], [t3.b], [t3.c]), filter(nil), rowset=256, 
      equal_conds([t2.a = t3.a]), other_conds(nil)
  4 - output([t2.a], [t1.a], [t1.b], [t1.c], [t2.b], [t2.c]), filter(nil), rowset=256, 
      equal_conds([t1.a = t2.a]), other_conds(nil)
  5 - output([t1.a], [t1.b], [t1.c]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c]), partitions(p[0-4])
  6 - output([t2.a], [t2.b], [t2.c]), filter(nil), rowset=256, 
      access([t2.a], [t2.b], [t2.c]), partitions(p[0-4])
  7 - output([t3.a], [t3.b], [t3.c]), filter(nil), rowset=256, 
      access([t3.a], [t3.b], [t3.c]), partitions(p[0-4])

explain select/*+leading(t1,t2,t3)*/ * from t1, t2, t3 where t1.a = t2.a and t1.a = t3.a;
Query Plan
====================================================
|ID|OPERATOR               |NAME    |EST. ROWS|COST|
----------------------------------------------------
|0 |PX COORDINATOR         |        |1        |688 |
|1 | EXCHANGE OUT DISTR    |:EX10000|1        |687 |
|2 |  PX PARTITION ITERATOR|        |1        |684 |
|3 |   HASH JOIN           |        |1        |684 |
|4 |    HASH JOIN          |        |1        |456 |
|5 |     TABLE SCAN        |t1      |1        |228 |
|6 |     TABLE SCAN        |t2      |1        |228 |
|7 |    TABLE SCAN         |t3      |1        |228 |
====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t2.a, t2.b, t2.c, t3.a, t3.b, t3.c)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t2.a, t2.b, t2.c, t3.a, t3.b, t3.c)]), filter(nil), rowset=256, dop=1
  2 - output([t1.a], [t3.a], [t2.a], [t1.b], [t1.c], [t2.b], [t2.c], [t3.b], [t3.c]), filter(nil), rowset=256
  3 - output([t1.a], [t3.a], [t2.a], [t1.b], [t1.c], [t2.b], [t2.c], [t3.b], [t3.c]), filter(nil), rowset=256, 
      equal_conds([t1.a = t3.a]), other_conds(nil)
  4 - output([t1.a], [t2.a], [t1.b], [t1.c], [t2.b], [t2.c]), filter(nil), rowset=256, 
      equal_conds([t1.a = t2.a]), other_conds(nil)
  5 - output([t1.a], [t1.b], [t1.c]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c]), partitions(p[0-4])
  6 - output([t2.a], [t2.b], [t2.c]), filter(nil), rowset=256, 
      access([t2.a], [t2.b], [t2.c]), partitions(p[0-4])
  7 - output([t3.a], [t3.b], [t3.c]), filter(nil), rowset=256, 
      access([t3.a], [t3.b], [t3.c]), partitions(p[0-4])

explain select/*+leading(t1,t2)*/ * from t1 left join t2 on t1.a = t2.a;
Query Plan
====================================================
|ID|OPERATOR               |NAME    |EST. ROWS|COST|
----------------------------------------------------
|0 |PX COORDINATOR         |        |1        |459 |
|1 | EXCHANGE OUT DISTR    |:EX10000|1        |458 |
|2 |  PX PARTITION ITERATOR|        |1        |456 |
|3 |   HASH OUTER JOIN     |        |1        |456 |
|4 |    TABLE SCAN         |t1      |1        |228 |
|5 |    TABLE SCAN         |t2      |1        |228 |
====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t2.a, t2.b, t2.c)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t2.a, t2.b, t2.c)]), filter(nil), rowset=256, dop=1
  2 - output([t1.a], [t2.a], [t1.b], [t1.c], [t2.b], [t2.c]), filter(nil), rowset=256
  3 - output([t1.a], [t2.a], [t1.b], [t1.c], [t2.b], [t2.c]), filter(nil), rowset=256, 
      equal_conds([t1.a = t2.a]), other_conds(nil)
  4 - output([t1.a], [t1.b], [t1.c]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c]), partitions(p[0-4])
  5 - output([t2.a], [t2.b], [t2.c]), filter(nil), rowset=256, 
      access([t2.a], [t2.b], [t2.c]), partitions(p[0-4])

explain select/*+leading(t1,t2,t3)*/ * from t1 left join t2 on t1.a = t2.a left join t3 on t1.a = t3.a;
Query Plan
====================================================
|ID|OPERATOR               |NAME    |EST. ROWS|COST|
----------------------------------------------------
|0 |PX COORDINATOR         |        |1        |688 |
|1 | EXCHANGE OUT DISTR    |:EX10000|1        |687 |
|2 |  PX PARTITION ITERATOR|        |1        |684 |
|3 |   HASH OUTER JOIN     |        |1        |684 |
|4 |    HASH OUTER JOIN    |        |1        |456 |
|5 |     TABLE SCAN        |t1      |1        |228 |
|6 |     TABLE SCAN        |t2      |1        |228 |
|7 |    TABLE SCAN         |t3      |1        |228 |
====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t2.a, t2.b, t2.c, t3.a, t3.b, t3.c)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t2.a, t2.b, t2.c, t3.a, t3.b, t3.c)]), filter(nil), rowset=256, dop=1
  2 - output([t1.a], [t3.a], [t2.a], [t1.b], [t1.c], [t2.b], [t2.c], [t3.b], [t3.c]), filter(nil), rowset=256
  3 - output([t1.a], [t3.a], [t2.a], [t1.b], [t1.c], [t2.b], [t2.c], [t3.b], [t3.c]), filter(nil), rowset=256, 
      equal_conds([t1.a = t3.a]), other_conds(nil)
  4 - output([t1.a], [t2.a], [t1.b], [t1.c], [t2.b], [t2.c]), filter(nil), rowset=256, 
      equal_conds([t1.a = t2.a]), other_conds(nil)
  5 - output([t1.a], [t1.b], [t1.c]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c]), partitions(p[0-4])
  6 - output([t2.a], [t2.b], [t2.c]), filter(nil), rowset=256, 
      access([t2.a], [t2.b], [t2.c]), partitions(p[0-4])
  7 - output([t3.a], [t3.b], [t3.c]), filter(nil), rowset=256, 
      access([t3.a], [t3.b], [t3.c]), partitions(p[0-4])

explain select/*+leading(t1,t2,t3)*/ * from t1 left join t2 on t1.a = t2.a left join t3 on t2.a = t3.a;
Query Plan
====================================================
|ID|OPERATOR               |NAME    |EST. ROWS|COST|
----------------------------------------------------
|0 |PX COORDINATOR         |        |1        |688 |
|1 | EXCHANGE OUT DISTR    |:EX10000|1        |687 |
|2 |  PX PARTITION ITERATOR|        |1        |684 |
|3 |   HASH OUTER JOIN     |        |1        |684 |
|4 |    HASH OUTER JOIN    |        |1        |456 |
|5 |     TABLE SCAN        |t1      |1        |228 |
|6 |     TABLE SCAN        |t2      |1        |228 |
|7 |    TABLE SCAN         |t3      |1        |228 |
====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t2.a, t2.b, t2.c, t3.a, t3.b, t3.c)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t2.a, t2.b, t2.c, t3.a, t3.b, t3.c)]), filter(nil), rowset=256, dop=1
  2 - output([t2.a], [t3.a], [t1.a], [t1.b], [t1.c], [t2.b], [t2.c], [t3.b], [t3.c]), filter(nil), rowset=256
  3 - output([t2.a], [t3.a], [t1.a], [t1.b], [t1.c], [t2.b], [t2.c], [t3.b], [t3.c]), filter(nil), rowset=256, 
      equal_conds([t2.a = t3.a]), other_conds(nil)
  4 - output([t2.a], [t1.a], [t1.b], [t1.c], [t2.b], [t2.c]), filter(nil), rowset=256, 
      equal_conds([t1.a = t2.a]), other_conds(nil)
  5 - output([t1.a], [t1.b], [t1.c]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c]), partitions(p[0-4])
  6 - output([t2.a], [t2.b], [t2.c]), filter(nil), rowset=256, 
      access([t2.a], [t2.b], [t2.c]), partitions(p[0-4])
  7 - output([t3.a], [t3.b], [t3.c]), filter(nil), rowset=256, 
      access([t3.a], [t3.b], [t3.c]), partitions(p[0-4])

explain select/*+leading(t1,t2)*/ * from t1 full join t2 on t1.a = t2.a;
Query Plan
====================================================
|ID|OPERATOR               |NAME    |EST. ROWS|COST|
----------------------------------------------------
|0 |PX COORDINATOR         |        |1        |459 |
|1 | EXCHANGE OUT DISTR    |:EX10000|1        |458 |
|2 |  PX PARTITION ITERATOR|        |1        |456 |
|3 |   HASH FULL OUTER JOIN|        |1        |456 |
|4 |    TABLE SCAN         |t1      |1        |228 |
|5 |    TABLE SCAN         |t2      |1        |228 |
====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t2.a, t2.b, t2.c)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t2.a, t2.b, t2.c)]), filter(nil), rowset=256, dop=1
  2 - output([t1.a], [t2.a], [t1.b], [t1.c], [t2.b], [t2.c]), filter(nil), rowset=256
  3 - output([t1.a], [t2.a], [t1.b], [t1.c], [t2.b], [t2.c]), filter(nil), rowset=256, 
      equal_conds([t1.a = t2.a]), other_conds(nil)
  4 - output([t1.a], [t1.b], [t1.c]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c]), partitions(p[0-4])
  5 - output([t2.a], [t2.b], [t2.c]), filter(nil), rowset=256, 
      access([t2.a], [t2.b], [t2.c]), partitions(p[0-4])

explain select/*+leading(t1,t2,t3)*/ * from t1 full join t2 on t1.a = t2.a full join t3 on t1.a = t3.a;
Query Plan
=====================================================
|ID|OPERATOR                |NAME    |EST. ROWS|COST|
-----------------------------------------------------
|0 |PX COORDINATOR          |        |1        |688 |
|1 | EXCHANGE OUT DISTR     |:EX10000|1        |687 |
|2 |  PX PARTITION ITERATOR |        |1        |684 |
|3 |   HASH FULL OUTER JOIN |        |1        |684 |
|4 |    HASH FULL OUTER JOIN|        |1        |456 |
|5 |     TABLE SCAN         |t1      |1        |228 |
|6 |     TABLE SCAN         |t2      |1        |228 |
|7 |    TABLE SCAN          |t3      |1        |228 |
=====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t2.a, t2.b, t2.c, t3.a, t3.b, t3.c)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t2.a, t2.b, t2.c, t3.a, t3.b, t3.c)]), filter(nil), rowset=256, dop=1
  2 - output([t1.a], [t3.a], [t2.a], [t1.b], [t1.c], [t2.b], [t2.c], [t3.b], [t3.c]), filter(nil), rowset=256
  3 - output([t1.a], [t3.a], [t2.a], [t1.b], [t1.c], [t2.b], [t2.c], [t3.b], [t3.c]), filter(nil), rowset=256, 
      equal_conds([t1.a = t3.a]), other_conds(nil)
  4 - output([t1.a], [t2.a], [t1.b], [t1.c], [t2.b], [t2.c]), filter(nil), rowset=256, 
      equal_conds([t1.a = t2.a]), other_conds(nil)
  5 - output([t1.a], [t1.b], [t1.c]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c]), partitions(p[0-4])
  6 - output([t2.a], [t2.b], [t2.c]), filter(nil), rowset=256, 
      access([t2.a], [t2.b], [t2.c]), partitions(p[0-4])
  7 - output([t3.a], [t3.b], [t3.c]), filter(nil), rowset=256, 
      access([t3.a], [t3.b], [t3.c]), partitions(p[0-4])

explain select/*+leading(t1,t2,t3)*/ * from t1 full join t2 on t1.a = t2.a full join t3 on t2.a = t3.a;
Query Plan
=====================================================
|ID|OPERATOR                |NAME    |EST. ROWS|COST|
-----------------------------------------------------
|0 |PX COORDINATOR          |        |1        |688 |
|1 | EXCHANGE OUT DISTR     |:EX10000|1        |687 |
|2 |  PX PARTITION ITERATOR |        |1        |684 |
|3 |   HASH FULL OUTER JOIN |        |1        |684 |
|4 |    HASH FULL OUTER JOIN|        |1        |456 |
|5 |     TABLE SCAN         |t1      |1        |228 |
|6 |     TABLE SCAN         |t2      |1        |228 |
|7 |    TABLE SCAN          |t3      |1        |228 |
=====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t2.a, t2.b, t2.c, t3.a, t3.b, t3.c)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t2.a, t2.b, t2.c, t3.a, t3.b, t3.c)]), filter(nil), rowset=256, dop=1
  2 - output([t2.a], [t3.a], [t1.a], [t1.b], [t1.c], [t2.b], [t2.c], [t3.b], [t3.c]), filter(nil), rowset=256
  3 - output([t2.a], [t3.a], [t1.a], [t1.b], [t1.c], [t2.b], [t2.c], [t3.b], [t3.c]), filter(nil), rowset=256, 
      equal_conds([t2.a = t3.a]), other_conds(nil)
  4 - output([t2.a], [t1.a], [t1.b], [t1.c], [t2.b], [t2.c]), filter(nil), rowset=256, 
      equal_conds([t1.a = t2.a]), other_conds(nil)
  5 - output([t1.a], [t1.b], [t1.c]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c]), partitions(p[0-4])
  6 - output([t2.a], [t2.b], [t2.c]), filter(nil), rowset=256, 
      access([t2.a], [t2.b], [t2.c]), partitions(p[0-4])
  7 - output([t3.a], [t3.b], [t3.c]), filter(nil), rowset=256, 
      access([t3.a], [t3.b], [t3.c]), partitions(p[0-4])

explain select/*+leading(t1,t2,t3)*/ * from t1 inner join t2 on t1.a = t2.a left join t3 on t1.a = t3.a;
Query Plan
====================================================
|ID|OPERATOR               |NAME    |EST. ROWS|COST|
----------------------------------------------------
|0 |PX COORDINATOR         |        |1        |688 |
|1 | EXCHANGE OUT DISTR    |:EX10000|1        |687 |
|2 |  PX PARTITION ITERATOR|        |1        |684 |
|3 |   HASH OUTER JOIN     |        |1        |684 |
|4 |    HASH JOIN          |        |1        |456 |
|5 |     TABLE SCAN        |t1      |1        |228 |
|6 |     TABLE SCAN        |t2      |1        |228 |
|7 |    TABLE SCAN         |t3      |1        |228 |
====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t2.a, t2.b, t2.c, t3.a, t3.b, t3.c)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t2.a, t2.b, t2.c, t3.a, t3.b, t3.c)]), filter(nil), rowset=256, dop=1
  2 - output([t1.a], [t3.a], [t2.a], [t1.b], [t1.c], [t2.b], [t2.c], [t3.b], [t3.c]), filter(nil), rowset=256
  3 - output([t1.a], [t3.a], [t2.a], [t1.b], [t1.c], [t2.b], [t2.c], [t3.b], [t3.c]), filter(nil), rowset=256, 
      equal_conds([t1.a = t3.a]), other_conds(nil)
  4 - output([t1.a], [t2.a], [t1.b], [t1.c], [t2.b], [t2.c]), filter(nil), rowset=256, 
      equal_conds([t1.a = t2.a]), other_conds(nil)
  5 - output([t1.a], [t1.b], [t1.c]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c]), partitions(p[0-4])
  6 - output([t2.a], [t2.b], [t2.c]), filter(nil), rowset=256, 
      access([t2.a], [t2.b], [t2.c]), partitions(p[0-4])
  7 - output([t3.a], [t3.b], [t3.c]), filter(nil), rowset=256, 
      access([t3.a], [t3.b], [t3.c]), partitions(p[0-4])

explain select/*+leading(t1,t2,t3)*/ * from t1 inner join t2 on t1.a = t2.a left join t3 on t2.a = t3.a;
Query Plan
====================================================
|ID|OPERATOR               |NAME    |EST. ROWS|COST|
----------------------------------------------------
|0 |PX COORDINATOR         |        |1        |688 |
|1 | EXCHANGE OUT DISTR    |:EX10000|1        |687 |
|2 |  PX PARTITION ITERATOR|        |1        |684 |
|3 |   HASH OUTER JOIN     |        |1        |684 |
|4 |    HASH JOIN          |        |1        |456 |
|5 |     TABLE SCAN        |t1      |1        |228 |
|6 |     TABLE SCAN        |t2      |1        |228 |
|7 |    TABLE SCAN         |t3      |1        |228 |
====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t2.a, t2.b, t2.c, t3.a, t3.b, t3.c)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t2.a, t2.b, t2.c, t3.a, t3.b, t3.c)]), filter(nil), rowset=256, dop=1
  2 - output([t2.a], [t3.a], [t1.a], [t1.b], [t1.c], [t2.b], [t2.c], [t3.b], [t3.c]), filter(nil), rowset=256
  3 - output([t2.a], [t3.a], [t1.a], [t1.b], [t1.c], [t2.b], [t2.c], [t3.b], [t3.c]), filter(nil), rowset=256, 
      equal_conds([t2.a = t3.a]), other_conds(nil)
  4 - output([t2.a], [t1.a], [t1.b], [t1.c], [t2.b], [t2.c]), filter(nil), rowset=256, 
      equal_conds([t1.a = t2.a]), other_conds(nil)
  5 - output([t1.a], [t1.b], [t1.c]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c]), partitions(p[0-4])
  6 - output([t2.a], [t2.b], [t2.c]), filter(nil), rowset=256, 
      access([t2.a], [t2.b], [t2.c]), partitions(p[0-4])
  7 - output([t3.a], [t3.b], [t3.c]), filter(nil), rowset=256, 
      access([t3.a], [t3.b], [t3.c]), partitions(p[0-4])

explain select/*+leading(t1,t2,t3)*/ * from t1 inner join t2 on t1.a = t2.a full join t3 on t1.a = t3.a;
Query Plan
====================================================
|ID|OPERATOR               |NAME    |EST. ROWS|COST|
----------------------------------------------------
|0 |PX COORDINATOR         |        |1        |688 |
|1 | EXCHANGE OUT DISTR    |:EX10000|1        |687 |
|2 |  PX PARTITION ITERATOR|        |1        |684 |
|3 |   HASH FULL OUTER JOIN|        |1        |684 |
|4 |    HASH JOIN          |        |1        |456 |
|5 |     TABLE SCAN        |t1      |1        |228 |
|6 |     TABLE SCAN        |t2      |1        |228 |
|7 |    TABLE SCAN         |t3      |1        |228 |
====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t2.a, t2.b, t2.c, t3.a, t3.b, t3.c)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t2.a, t2.b, t2.c, t3.a, t3.b, t3.c)]), filter(nil), rowset=256, dop=1
  2 - output([t1.a], [t3.a], [t2.a], [t1.b], [t1.c], [t2.b], [t2.c], [t3.b], [t3.c]), filter(nil), rowset=256
  3 - output([t1.a], [t3.a], [t2.a], [t1.b], [t1.c], [t2.b], [t2.c], [t3.b], [t3.c]), filter(nil), rowset=256, 
      equal_conds([t1.a = t3.a]), other_conds(nil)
  4 - output([t1.a], [t2.a], [t1.b], [t1.c], [t2.b], [t2.c]), filter(nil), rowset=256, 
      equal_conds([t1.a = t2.a]), other_conds(nil)
  5 - output([t1.a], [t1.b], [t1.c]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c]), partitions(p[0-4])
  6 - output([t2.a], [t2.b], [t2.c]), filter(nil), rowset=256, 
      access([t2.a], [t2.b], [t2.c]), partitions(p[0-4])
  7 - output([t3.a], [t3.b], [t3.c]), filter(nil), rowset=256, 
      access([t3.a], [t3.b], [t3.c]), partitions(p[0-4])

explain select/*+leading(t1,t2,t3)*/ * from t1 inner join t2 on t1.a = t2.a full join t3 on t2.a = t3.a;
Query Plan
====================================================
|ID|OPERATOR               |NAME    |EST. ROWS|COST|
----------------------------------------------------
|0 |PX COORDINATOR         |        |1        |688 |
|1 | EXCHANGE OUT DISTR    |:EX10000|1        |687 |
|2 |  PX PARTITION ITERATOR|        |1        |684 |
|3 |   HASH FULL OUTER JOIN|        |1        |684 |
|4 |    HASH JOIN          |        |1        |456 |
|5 |     TABLE SCAN        |t1      |1        |228 |
|6 |     TABLE SCAN        |t2      |1        |228 |
|7 |    TABLE SCAN         |t3      |1        |228 |
====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t2.a, t2.b, t2.c, t3.a, t3.b, t3.c)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t2.a, t2.b, t2.c, t3.a, t3.b, t3.c)]), filter(nil), rowset=256, dop=1
  2 - output([t2.a], [t3.a], [t1.a], [t1.b], [t1.c], [t2.b], [t2.c], [t3.b], [t3.c]), filter(nil), rowset=256
  3 - output([t2.a], [t3.a], [t1.a], [t1.b], [t1.c], [t2.b], [t2.c], [t3.b], [t3.c]), filter(nil), rowset=256, 
      equal_conds([t2.a = t3.a]), other_conds(nil)
  4 - output([t2.a], [t1.a], [t1.b], [t1.c], [t2.b], [t2.c]), filter(nil), rowset=256, 
      equal_conds([t1.a = t2.a]), other_conds(nil)
  5 - output([t1.a], [t1.b], [t1.c]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c]), partitions(p[0-4])
  6 - output([t2.a], [t2.b], [t2.c]), filter(nil), rowset=256, 
      access([t2.a], [t2.b], [t2.c]), partitions(p[0-4])
  7 - output([t3.a], [t3.b], [t3.c]), filter(nil), rowset=256, 
      access([t3.a], [t3.b], [t3.c]), partitions(p[0-4])

explain select/*+leading(t1,t2,t3)*/ * from t1 left join t2 on t1.a = t2.a inner join t3 on t1.a = t3.a;
Query Plan
====================================================
|ID|OPERATOR               |NAME    |EST. ROWS|COST|
----------------------------------------------------
|0 |PX COORDINATOR         |        |1        |688 |
|1 | EXCHANGE OUT DISTR    |:EX10000|1        |687 |
|2 |  PX PARTITION ITERATOR|        |1        |684 |
|3 |   HASH JOIN           |        |1        |684 |
|4 |    HASH OUTER JOIN    |        |1        |456 |
|5 |     TABLE SCAN        |t1      |1        |228 |
|6 |     TABLE SCAN        |t2      |1        |228 |
|7 |    TABLE SCAN         |t3      |1        |228 |
====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t2.a, t2.b, t2.c, t3.a, t3.b, t3.c)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t2.a, t2.b, t2.c, t3.a, t3.b, t3.c)]), filter(nil), rowset=256, dop=1
  2 - output([t1.a], [t3.a], [t2.a], [t1.b], [t1.c], [t2.b], [t2.c], [t3.b], [t3.c]), filter(nil), rowset=256
  3 - output([t1.a], [t3.a], [t2.a], [t1.b], [t1.c], [t2.b], [t2.c], [t3.b], [t3.c]), filter(nil), rowset=256, 
      equal_conds([t1.a = t3.a]), other_conds(nil)
  4 - output([t1.a], [t2.a], [t1.b], [t1.c], [t2.b], [t2.c]), filter(nil), rowset=256, 
      equal_conds([t1.a = t2.a]), other_conds(nil)
  5 - output([t1.a], [t1.b], [t1.c]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c]), partitions(p[0-4])
  6 - output([t2.a], [t2.b], [t2.c]), filter(nil), rowset=256, 
      access([t2.a], [t2.b], [t2.c]), partitions(p[0-4])
  7 - output([t3.a], [t3.b], [t3.c]), filter(nil), rowset=256, 
      access([t3.a], [t3.b], [t3.c]), partitions(p[0-4])

explain select/*+leading(t1,t2,t3)*/ * from t1 left join t2 on t1.a = t2.a inner join t3 on t2.a = t3.a;
Query Plan
====================================================
|ID|OPERATOR               |NAME    |EST. ROWS|COST|
----------------------------------------------------
|0 |PX COORDINATOR         |        |1        |688 |
|1 | EXCHANGE OUT DISTR    |:EX10000|1        |687 |
|2 |  PX PARTITION ITERATOR|        |1        |684 |
|3 |   HASH JOIN           |        |1        |684 |
|4 |    HASH JOIN          |        |1        |456 |
|5 |     TABLE SCAN        |t1      |1        |228 |
|6 |     TABLE SCAN        |t2      |1        |228 |
|7 |    TABLE SCAN         |t3      |1        |228 |
====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t2.a, t2.b, t2.c, t3.a, t3.b, t3.c)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t2.a, t2.b, t2.c, t3.a, t3.b, t3.c)]), filter(nil), rowset=256, dop=1
  2 - output([t2.a], [t3.a], [t1.a], [t1.b], [t1.c], [t2.b], [t2.c], [t3.b], [t3.c]), filter(nil), rowset=256
  3 - output([t2.a], [t3.a], [t1.a], [t1.b], [t1.c], [t2.b], [t2.c], [t3.b], [t3.c]), filter(nil), rowset=256, 
      equal_conds([t2.a = t3.a]), other_conds(nil)
  4 - output([t2.a], [t1.a], [t1.b], [t1.c], [t2.b], [t2.c]), filter(nil), rowset=256, 
      equal_conds([t1.a = t2.a]), other_conds(nil)
  5 - output([t1.a], [t1.b], [t1.c]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c]), partitions(p[0-4])
  6 - output([t2.a], [t2.b], [t2.c]), filter(nil), rowset=256, 
      access([t2.a], [t2.b], [t2.c]), partitions(p[0-4])
  7 - output([t3.a], [t3.b], [t3.c]), filter(nil), rowset=256, 
      access([t3.a], [t3.b], [t3.c]), partitions(p[0-4])

explain select/*+leading(t1,t2,t3)*/ * from t1 full join t2 on t1.a = t2.a inner join t3 on t1.a = t3.a;
Query Plan
====================================================
|ID|OPERATOR               |NAME    |EST. ROWS|COST|
----------------------------------------------------
|0 |PX COORDINATOR         |        |1        |688 |
|1 | EXCHANGE OUT DISTR    |:EX10000|1        |687 |
|2 |  PX PARTITION ITERATOR|        |1        |684 |
|3 |   HASH JOIN           |        |1        |684 |
|4 |    HASH OUTER JOIN    |        |1        |456 |
|5 |     TABLE SCAN        |t1      |1        |228 |
|6 |     TABLE SCAN        |t2      |1        |228 |
|7 |    TABLE SCAN         |t3      |1        |228 |
====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t2.a, t2.b, t2.c, t3.a, t3.b, t3.c)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t2.a, t2.b, t2.c, t3.a, t3.b, t3.c)]), filter(nil), rowset=256, dop=1
  2 - output([t1.a], [t3.a], [t2.a], [t1.b], [t1.c], [t2.b], [t2.c], [t3.b], [t3.c]), filter(nil), rowset=256
  3 - output([t1.a], [t3.a], [t2.a], [t1.b], [t1.c], [t2.b], [t2.c], [t3.b], [t3.c]), filter(nil), rowset=256, 
      equal_conds([t1.a = t3.a]), other_conds(nil)
  4 - output([t1.a], [t2.a], [t1.b], [t1.c], [t2.b], [t2.c]), filter(nil), rowset=256, 
      equal_conds([t1.a = t2.a]), other_conds(nil)
  5 - output([t1.a], [t1.b], [t1.c]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c]), partitions(p[0-4])
  6 - output([t2.a], [t2.b], [t2.c]), filter(nil), rowset=256, 
      access([t2.a], [t2.b], [t2.c]), partitions(p[0-4])
  7 - output([t3.a], [t3.b], [t3.c]), filter(nil), rowset=256, 
      access([t3.a], [t3.b], [t3.c]), partitions(p[0-4])

explain select/*+leading(t1,t2,t3)*/ * from t1 full join t2 on t1.a = t2.a inner join t3 on t2.a = t3.a;
Query Plan
======================================================
|ID|OPERATOR                 |NAME    |EST. ROWS|COST|
------------------------------------------------------
|0 |PX COORDINATOR           |        |1        |688 |
|1 | EXCHANGE OUT DISTR      |:EX10000|1        |687 |
|2 |  PX PARTITION ITERATOR  |        |1        |684 |
|3 |   HASH JOIN             |        |1        |684 |
|4 |    HASH RIGHT OUTER JOIN|        |1        |456 |
|5 |     TABLE SCAN          |t1      |1        |228 |
|6 |     TABLE SCAN          |t2      |1        |228 |
|7 |    TABLE SCAN           |t3      |1        |228 |
======================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t2.a, t2.b, t2.c, t3.a, t3.b, t3.c)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t2.a, t2.b, t2.c, t3.a, t3.b, t3.c)]), filter(nil), rowset=256, dop=1
  2 - output([t2.a], [t3.a], [t1.a], [t1.b], [t1.c], [t2.b], [t2.c], [t3.b], [t3.c]), filter(nil), rowset=256
  3 - output([t2.a], [t3.a], [t1.a], [t1.b], [t1.c], [t2.b], [t2.c], [t3.b], [t3.c]), filter(nil), rowset=256, 
      equal_conds([t2.a = t3.a]), other_conds(nil)
  4 - output([t2.a], [t1.a], [t1.b], [t1.c], [t2.b], [t2.c]), filter(nil), rowset=256, 
      equal_conds([t1.a = t2.a]), other_conds(nil)
  5 - output([t1.a], [t1.b], [t1.c]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c]), partitions(p[0-4])
  6 - output([t2.a], [t2.b], [t2.c]), filter(nil), rowset=256, 
      access([t2.a], [t2.b], [t2.c]), partitions(p[0-4])
  7 - output([t3.a], [t3.b], [t3.c]), filter(nil), rowset=256, 
      access([t3.a], [t3.b], [t3.c]), partitions(p[0-4])

explain select/*+leading(t1,t2,t3)*/ * from t1 full join t2 on t1.a = t2.a left join t3 on t1.a = t3.a;
Query Plan
=====================================================
|ID|OPERATOR                |NAME    |EST. ROWS|COST|
-----------------------------------------------------
|0 |PX COORDINATOR          |        |1        |688 |
|1 | EXCHANGE OUT DISTR     |:EX10000|1        |687 |
|2 |  PX PARTITION ITERATOR |        |1        |684 |
|3 |   HASH OUTER JOIN      |        |1        |684 |
|4 |    HASH FULL OUTER JOIN|        |1        |456 |
|5 |     TABLE SCAN         |t1      |1        |228 |
|6 |     TABLE SCAN         |t2      |1        |228 |
|7 |    TABLE SCAN          |t3      |1        |228 |
=====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t2.a, t2.b, t2.c, t3.a, t3.b, t3.c)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t2.a, t2.b, t2.c, t3.a, t3.b, t3.c)]), filter(nil), rowset=256, dop=1
  2 - output([t1.a], [t3.a], [t2.a], [t1.b], [t1.c], [t2.b], [t2.c], [t3.b], [t3.c]), filter(nil), rowset=256
  3 - output([t1.a], [t3.a], [t2.a], [t1.b], [t1.c], [t2.b], [t2.c], [t3.b], [t3.c]), filter(nil), rowset=256, 
      equal_conds([t1.a = t3.a]), other_conds(nil)
  4 - output([t1.a], [t2.a], [t1.b], [t1.c], [t2.b], [t2.c]), filter(nil), rowset=256, 
      equal_conds([t1.a = t2.a]), other_conds(nil)
  5 - output([t1.a], [t1.b], [t1.c]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c]), partitions(p[0-4])
  6 - output([t2.a], [t2.b], [t2.c]), filter(nil), rowset=256, 
      access([t2.a], [t2.b], [t2.c]), partitions(p[0-4])
  7 - output([t3.a], [t3.b], [t3.c]), filter(nil), rowset=256, 
      access([t3.a], [t3.b], [t3.c]), partitions(p[0-4])

explain select/*+leading(t1,t2,t3)*/ * from t1 full join t2 on t1.a = t2.a left join t3 on t2.a = t3.a;
Query Plan
=====================================================
|ID|OPERATOR                |NAME    |EST. ROWS|COST|
-----------------------------------------------------
|0 |PX COORDINATOR          |        |1        |688 |
|1 | EXCHANGE OUT DISTR     |:EX10000|1        |687 |
|2 |  PX PARTITION ITERATOR |        |1        |684 |
|3 |   HASH OUTER JOIN      |        |1        |684 |
|4 |    HASH FULL OUTER JOIN|        |1        |456 |
|5 |     TABLE SCAN         |t1      |1        |228 |
|6 |     TABLE SCAN         |t2      |1        |228 |
|7 |    TABLE SCAN          |t3      |1        |228 |
=====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t2.a, t2.b, t2.c, t3.a, t3.b, t3.c)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t2.a, t2.b, t2.c, t3.a, t3.b, t3.c)]), filter(nil), rowset=256, dop=1
  2 - output([t2.a], [t3.a], [t1.a], [t1.b], [t1.c], [t2.b], [t2.c], [t3.b], [t3.c]), filter(nil), rowset=256
  3 - output([t2.a], [t3.a], [t1.a], [t1.b], [t1.c], [t2.b], [t2.c], [t3.b], [t3.c]), filter(nil), rowset=256, 
      equal_conds([t2.a = t3.a]), other_conds(nil)
  4 - output([t2.a], [t1.a], [t1.b], [t1.c], [t2.b], [t2.c]), filter(nil), rowset=256, 
      equal_conds([t1.a = t2.a]), other_conds(nil)
  5 - output([t1.a], [t1.b], [t1.c]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c]), partitions(p[0-4])
  6 - output([t2.a], [t2.b], [t2.c]), filter(nil), rowset=256, 
      access([t2.a], [t2.b], [t2.c]), partitions(p[0-4])
  7 - output([t3.a], [t3.b], [t3.c]), filter(nil), rowset=256, 
      access([t3.a], [t3.b], [t3.c]), partitions(p[0-4])

explain select * from t1 where t1.a in (select t2.a from t2);
Query Plan
====================================================
|ID|OPERATOR               |NAME    |EST. ROWS|COST|
----------------------------------------------------
|0 |PX COORDINATOR         |        |1        |457 |
|1 | EXCHANGE OUT DISTR    |:EX10000|1        |457 |
|2 |  PX PARTITION ITERATOR|        |1        |456 |
|3 |   HASH RIGHT SEMI JOIN|        |1        |456 |
|4 |    TABLE SCAN         |t2      |1        |228 |
|5 |    TABLE SCAN         |t1      |1        |228 |
====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c)]), filter(nil), rowset=256, dop=1
  2 - output([t1.a], [t1.b], [t1.c]), filter(nil), rowset=256
  3 - output([t1.a], [t1.b], [t1.c]), filter(nil), rowset=256, 
      equal_conds([t1.a = t2.a]), other_conds(nil)
  4 - output([t2.a]), filter(nil), rowset=256, 
      access([t2.a]), partitions(p[0-4])
  5 - output([t1.a], [t1.b], [t1.c]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c]), partitions(p[0-4])

explain select * from t1 where t1.a in (select t2.a from t2) and t1.a in (select t3.a from t3);
Query Plan
=====================================================
|ID|OPERATOR                |NAME    |EST. ROWS|COST|
-----------------------------------------------------
|0 |PX COORDINATOR          |        |1        |685 |
|1 | EXCHANGE OUT DISTR     |:EX10000|1        |685 |
|2 |  PX PARTITION ITERATOR |        |1        |684 |
|3 |   HASH RIGHT SEMI JOIN |        |1        |684 |
|4 |    TABLE SCAN          |t3      |1        |228 |
|5 |    HASH RIGHT SEMI JOIN|        |1        |456 |
|6 |     TABLE SCAN         |t2      |1        |228 |
|7 |     TABLE SCAN         |t1      |1        |228 |
=====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c)]), filter(nil), rowset=256, dop=1
  2 - output([t1.a], [t1.b], [t1.c]), filter(nil), rowset=256
  3 - output([t1.a], [t1.b], [t1.c]), filter(nil), rowset=256, 
      equal_conds([t1.a = t3.a]), other_conds(nil)
  4 - output([t3.a]), filter(nil), rowset=256, 
      access([t3.a]), partitions(p[0-4])
  5 - output([t1.a], [t1.b], [t1.c]), filter(nil), rowset=256, 
      equal_conds([t1.a = t2.a]), other_conds(nil)
  6 - output([t2.a]), filter(nil), rowset=256, 
      access([t2.a]), partitions(p[0-4])
  7 - output([t1.a], [t1.b], [t1.c]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c]), partitions(p[0-4])

explain select * from t1 where t1.a in (select t2.a from t2 where t2.a in (select t3.a from t3));
Query Plan
====================================================
|ID|OPERATOR               |NAME    |EST. ROWS|COST|
----------------------------------------------------
|0 |PX COORDINATOR         |        |1        |685 |
|1 | EXCHANGE OUT DISTR    |:EX10000|1        |685 |
|2 |  PX PARTITION ITERATOR|        |1        |684 |
|3 |   HASH RIGHT SEMI JOIN|        |1        |684 |
|4 |    SUBPLAN SCAN       |VIEW2   |1        |456 |
|5 |     HASH SEMI JOIN    |        |1        |456 |
|6 |      TABLE SCAN       |t2      |1        |228 |
|7 |      TABLE SCAN       |t3      |1        |228 |
|8 |    TABLE SCAN         |t1      |1        |228 |
====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c)]), filter(nil), rowset=256, dop=1
  2 - output([t1.a], [t1.b], [t1.c]), filter(nil), rowset=256
  3 - output([t1.a], [t1.b], [t1.c]), filter(nil), rowset=256, 
      equal_conds([t1.a = VIEW2.a]), other_conds(nil)
  4 - output([VIEW2.a]), filter(nil), rowset=256, 
      access([VIEW2.a])
  5 - output([t2.a]), filter(nil), rowset=256, 
      equal_conds([t2.a = t3.a]), other_conds(nil)
  6 - output([t2.a]), filter(nil), rowset=256, 
      access([t2.a]), partitions(p[0-4])
  7 - output([t3.a]), filter(nil), rowset=256, 
      access([t3.a]), partitions(p[0-4])
  8 - output([t1.a], [t1.b], [t1.c]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c]), partitions(p[0-4])

drop table if exists t1, t2, t3;
create table t1(a int, b int) partition by range(a) (
partition p0 values less than (100),
partition p1 values less than (200));
create table t2(a int, b int) partition by range(a) (
partition p0 values less than (100),
partition p1 values less than (200));
create table t3(a int, b int) partition by range(a) (
partition p0 values less than (100),
partition p1 values less than (200));
explain select/*+leading(t1,t2,t3)*/ * from t1, t2 where t1.a = t2.a;
Query Plan
====================================================
|ID|OPERATOR               |NAME    |EST. ROWS|COST|
----------------------------------------------------
|0 |PX COORDINATOR         |        |1        |186 |
|1 | EXCHANGE OUT DISTR    |:EX10000|1        |185 |
|2 |  PX PARTITION ITERATOR|        |1        |184 |
|3 |   HASH JOIN           |        |1        |184 |
|4 |    TABLE SCAN         |t1      |1        |92  |
|5 |    TABLE SCAN         |t2      |1        |92  |
====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b)]), filter(nil), rowset=256, dop=1
  2 - output([t1.a], [t2.a], [t1.b], [t2.b]), filter(nil), rowset=256
  3 - output([t1.a], [t2.a], [t1.b], [t2.b]), filter(nil), rowset=256, 
      equal_conds([t1.a = t2.a]), other_conds(nil)
  4 - output([t1.a], [t1.b]), filter(nil), rowset=256, 
      access([t1.a], [t1.b]), partitions(p[0-1])
  5 - output([t2.a], [t2.b]), filter(nil), rowset=256, 
      access([t2.a], [t2.b]), partitions(p[0-1])

explain select/*+leading(t1,t2,t3)*/ * from t1, t2, t3 where t1.a = t2.a and t2.a = t3.a;
Query Plan
====================================================
|ID|OPERATOR               |NAME    |EST. ROWS|COST|
----------------------------------------------------
|0 |PX COORDINATOR         |        |1        |278 |
|1 | EXCHANGE OUT DISTR    |:EX10000|1        |277 |
|2 |  PX PARTITION ITERATOR|        |1        |275 |
|3 |   HASH JOIN           |        |1        |275 |
|4 |    HASH JOIN          |        |1        |184 |
|5 |     TABLE SCAN        |t1      |1        |92  |
|6 |     TABLE SCAN        |t2      |1        |92  |
|7 |    TABLE SCAN         |t3      |1        |92  |
====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b, t3.a, t3.b)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b, t3.a, t3.b)]), filter(nil), rowset=256, dop=1
  2 - output([t2.a], [t3.a], [t1.a], [t1.b], [t2.b], [t3.b]), filter(nil), rowset=256
  3 - output([t2.a], [t3.a], [t1.a], [t1.b], [t2.b], [t3.b]), filter(nil), rowset=256, 
      equal_conds([t2.a = t3.a]), other_conds(nil)
  4 - output([t2.a], [t1.a], [t1.b], [t2.b]), filter(nil), rowset=256, 
      equal_conds([t1.a = t2.a]), other_conds(nil)
  5 - output([t1.a], [t1.b]), filter(nil), rowset=256, 
      access([t1.a], [t1.b]), partitions(p[0-1])
  6 - output([t2.a], [t2.b]), filter(nil), rowset=256, 
      access([t2.a], [t2.b]), partitions(p[0-1])
  7 - output([t3.a], [t3.b]), filter(nil), rowset=256, 
      access([t3.a], [t3.b]), partitions(p[0-1])

explain select/*+leading(t1,t2,t3)*/ * from t1, t2, t3 where t1.a = t2.a and t1.a = t3.a;
Query Plan
====================================================
|ID|OPERATOR               |NAME    |EST. ROWS|COST|
----------------------------------------------------
|0 |PX COORDINATOR         |        |1        |278 |
|1 | EXCHANGE OUT DISTR    |:EX10000|1        |277 |
|2 |  PX PARTITION ITERATOR|        |1        |275 |
|3 |   HASH JOIN           |        |1        |275 |
|4 |    HASH JOIN          |        |1        |184 |
|5 |     TABLE SCAN        |t1      |1        |92  |
|6 |     TABLE SCAN        |t2      |1        |92  |
|7 |    TABLE SCAN         |t3      |1        |92  |
====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b, t3.a, t3.b)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b, t3.a, t3.b)]), filter(nil), rowset=256, dop=1
  2 - output([t1.a], [t3.a], [t2.a], [t1.b], [t2.b], [t3.b]), filter(nil), rowset=256
  3 - output([t1.a], [t3.a], [t2.a], [t1.b], [t2.b], [t3.b]), filter(nil), rowset=256, 
      equal_conds([t1.a = t3.a]), other_conds(nil)
  4 - output([t1.a], [t2.a], [t1.b], [t2.b]), filter(nil), rowset=256, 
      equal_conds([t1.a = t2.a]), other_conds(nil)
  5 - output([t1.a], [t1.b]), filter(nil), rowset=256, 
      access([t1.a], [t1.b]), partitions(p[0-1])
  6 - output([t2.a], [t2.b]), filter(nil), rowset=256, 
      access([t2.a], [t2.b]), partitions(p[0-1])
  7 - output([t3.a], [t3.b]), filter(nil), rowset=256, 
      access([t3.a], [t3.b]), partitions(p[0-1])

explain select/*+leading(t1,t2)*/ * from t1 left join t2 on t1.a = t2.a;
Query Plan
====================================================
|ID|OPERATOR               |NAME    |EST. ROWS|COST|
----------------------------------------------------
|0 |PX COORDINATOR         |        |1        |186 |
|1 | EXCHANGE OUT DISTR    |:EX10000|1        |185 |
|2 |  PX PARTITION ITERATOR|        |1        |184 |
|3 |   HASH OUTER JOIN     |        |1        |184 |
|4 |    TABLE SCAN         |t1      |1        |92  |
|5 |    TABLE SCAN         |t2      |1        |92  |
====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b)]), filter(nil), rowset=256, dop=1
  2 - output([t1.a], [t2.a], [t1.b], [t2.b]), filter(nil), rowset=256
  3 - output([t1.a], [t2.a], [t1.b], [t2.b]), filter(nil), rowset=256, 
      equal_conds([t1.a = t2.a]), other_conds(nil)
  4 - output([t1.a], [t1.b]), filter(nil), rowset=256, 
      access([t1.a], [t1.b]), partitions(p[0-1])
  5 - output([t2.a], [t2.b]), filter(nil), rowset=256, 
      access([t2.a], [t2.b]), partitions(p[0-1])

explain select/*+leading(t1,t2,t3)*/ * from t1 left join t2 on t1.a = t2.a left join t3 on t1.a = t3.a;
Query Plan
====================================================
|ID|OPERATOR               |NAME    |EST. ROWS|COST|
----------------------------------------------------
|0 |PX COORDINATOR         |        |1        |278 |
|1 | EXCHANGE OUT DISTR    |:EX10000|1        |277 |
|2 |  PX PARTITION ITERATOR|        |1        |275 |
|3 |   HASH OUTER JOIN     |        |1        |275 |
|4 |    HASH OUTER JOIN    |        |1        |184 |
|5 |     TABLE SCAN        |t1      |1        |92  |
|6 |     TABLE SCAN        |t2      |1        |92  |
|7 |    TABLE SCAN         |t3      |1        |92  |
====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b, t3.a, t3.b)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b, t3.a, t3.b)]), filter(nil), rowset=256, dop=1
  2 - output([t1.a], [t3.a], [t2.a], [t1.b], [t2.b], [t3.b]), filter(nil), rowset=256
  3 - output([t1.a], [t3.a], [t2.a], [t1.b], [t2.b], [t3.b]), filter(nil), rowset=256, 
      equal_conds([t1.a = t3.a]), other_conds(nil)
  4 - output([t1.a], [t2.a], [t1.b], [t2.b]), filter(nil), rowset=256, 
      equal_conds([t1.a = t2.a]), other_conds(nil)
  5 - output([t1.a], [t1.b]), filter(nil), rowset=256, 
      access([t1.a], [t1.b]), partitions(p[0-1])
  6 - output([t2.a], [t2.b]), filter(nil), rowset=256, 
      access([t2.a], [t2.b]), partitions(p[0-1])
  7 - output([t3.a], [t3.b]), filter(nil), rowset=256, 
      access([t3.a], [t3.b]), partitions(p[0-1])

explain select/*+leading(t1,t2,t3)*/ * from t1 left join t2 on t1.a = t2.a left join t3 on t2.a = t3.a;
Query Plan
====================================================
|ID|OPERATOR               |NAME    |EST. ROWS|COST|
----------------------------------------------------
|0 |PX COORDINATOR         |        |1        |278 |
|1 | EXCHANGE OUT DISTR    |:EX10000|1        |277 |
|2 |  PX PARTITION ITERATOR|        |1        |275 |
|3 |   HASH OUTER JOIN     |        |1        |275 |
|4 |    HASH OUTER JOIN    |        |1        |184 |
|5 |     TABLE SCAN        |t1      |1        |92  |
|6 |     TABLE SCAN        |t2      |1        |92  |
|7 |    TABLE SCAN         |t3      |1        |92  |
====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b, t3.a, t3.b)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b, t3.a, t3.b)]), filter(nil), rowset=256, dop=1
  2 - output([t2.a], [t3.a], [t1.a], [t1.b], [t2.b], [t3.b]), filter(nil), rowset=256
  3 - output([t2.a], [t3.a], [t1.a], [t1.b], [t2.b], [t3.b]), filter(nil), rowset=256, 
      equal_conds([t2.a = t3.a]), other_conds(nil)
  4 - output([t2.a], [t1.a], [t1.b], [t2.b]), filter(nil), rowset=256, 
      equal_conds([t1.a = t2.a]), other_conds(nil)
  5 - output([t1.a], [t1.b]), filter(nil), rowset=256, 
      access([t1.a], [t1.b]), partitions(p[0-1])
  6 - output([t2.a], [t2.b]), filter(nil), rowset=256, 
      access([t2.a], [t2.b]), partitions(p[0-1])
  7 - output([t3.a], [t3.b]), filter(nil), rowset=256, 
      access([t3.a], [t3.b]), partitions(p[0-1])

explain select/*+leading(t1,t2)*/ * from t1 full join t2 on t1.a = t2.a;
Query Plan
====================================================
|ID|OPERATOR               |NAME    |EST. ROWS|COST|
----------------------------------------------------
|0 |PX COORDINATOR         |        |1        |186 |
|1 | EXCHANGE OUT DISTR    |:EX10000|1        |185 |
|2 |  PX PARTITION ITERATOR|        |1        |184 |
|3 |   HASH FULL OUTER JOIN|        |1        |184 |
|4 |    TABLE SCAN         |t1      |1        |92  |
|5 |    TABLE SCAN         |t2      |1        |92  |
====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b)]), filter(nil), rowset=256, dop=1
  2 - output([t1.a], [t2.a], [t1.b], [t2.b]), filter(nil), rowset=256
  3 - output([t1.a], [t2.a], [t1.b], [t2.b]), filter(nil), rowset=256, 
      equal_conds([t1.a = t2.a]), other_conds(nil)
  4 - output([t1.a], [t1.b]), filter(nil), rowset=256, 
      access([t1.a], [t1.b]), partitions(p[0-1])
  5 - output([t2.a], [t2.b]), filter(nil), rowset=256, 
      access([t2.a], [t2.b]), partitions(p[0-1])

explain select/*+leading(t1,t2,t3)*/ * from t1 full join t2 on t1.a = t2.a full join t3 on t1.a = t3.a;
Query Plan
=====================================================
|ID|OPERATOR                |NAME    |EST. ROWS|COST|
-----------------------------------------------------
|0 |PX COORDINATOR          |        |1        |278 |
|1 | EXCHANGE OUT DISTR     |:EX10000|1        |277 |
|2 |  PX PARTITION ITERATOR |        |1        |275 |
|3 |   HASH FULL OUTER JOIN |        |1        |275 |
|4 |    HASH FULL OUTER JOIN|        |1        |184 |
|5 |     TABLE SCAN         |t1      |1        |92  |
|6 |     TABLE SCAN         |t2      |1        |92  |
|7 |    TABLE SCAN          |t3      |1        |92  |
=====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b, t3.a, t3.b)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b, t3.a, t3.b)]), filter(nil), rowset=256, dop=1
  2 - output([t1.a], [t3.a], [t2.a], [t1.b], [t2.b], [t3.b]), filter(nil), rowset=256
  3 - output([t1.a], [t3.a], [t2.a], [t1.b], [t2.b], [t3.b]), filter(nil), rowset=256, 
      equal_conds([t1.a = t3.a]), other_conds(nil)
  4 - output([t1.a], [t2.a], [t1.b], [t2.b]), filter(nil), rowset=256, 
      equal_conds([t1.a = t2.a]), other_conds(nil)
  5 - output([t1.a], [t1.b]), filter(nil), rowset=256, 
      access([t1.a], [t1.b]), partitions(p[0-1])
  6 - output([t2.a], [t2.b]), filter(nil), rowset=256, 
      access([t2.a], [t2.b]), partitions(p[0-1])
  7 - output([t3.a], [t3.b]), filter(nil), rowset=256, 
      access([t3.a], [t3.b]), partitions(p[0-1])

explain select/*+leading(t1,t2,t3)*/ * from t1 full join t2 on t1.a = t2.a full join t3 on t2.a = t3.a;
Query Plan
=====================================================
|ID|OPERATOR                |NAME    |EST. ROWS|COST|
-----------------------------------------------------
|0 |PX COORDINATOR          |        |1        |278 |
|1 | EXCHANGE OUT DISTR     |:EX10000|1        |277 |
|2 |  PX PARTITION ITERATOR |        |1        |275 |
|3 |   HASH FULL OUTER JOIN |        |1        |275 |
|4 |    HASH FULL OUTER JOIN|        |1        |184 |
|5 |     TABLE SCAN         |t1      |1        |92  |
|6 |     TABLE SCAN         |t2      |1        |92  |
|7 |    TABLE SCAN          |t3      |1        |92  |
=====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b, t3.a, t3.b)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b, t3.a, t3.b)]), filter(nil), rowset=256, dop=1
  2 - output([t2.a], [t3.a], [t1.a], [t1.b], [t2.b], [t3.b]), filter(nil), rowset=256
  3 - output([t2.a], [t3.a], [t1.a], [t1.b], [t2.b], [t3.b]), filter(nil), rowset=256, 
      equal_conds([t2.a = t3.a]), other_conds(nil)
  4 - output([t2.a], [t1.a], [t1.b], [t2.b]), filter(nil), rowset=256, 
      equal_conds([t1.a = t2.a]), other_conds(nil)
  5 - output([t1.a], [t1.b]), filter(nil), rowset=256, 
      access([t1.a], [t1.b]), partitions(p[0-1])
  6 - output([t2.a], [t2.b]), filter(nil), rowset=256, 
      access([t2.a], [t2.b]), partitions(p[0-1])
  7 - output([t3.a], [t3.b]), filter(nil), rowset=256, 
      access([t3.a], [t3.b]), partitions(p[0-1])

explain select/*+leading(t1,t2,t3)*/ * from t1 inner join t2 on t1.a = t2.a left join t3 on t1.a = t3.a;
Query Plan
====================================================
|ID|OPERATOR               |NAME    |EST. ROWS|COST|
----------------------------------------------------
|0 |PX COORDINATOR         |        |1        |278 |
|1 | EXCHANGE OUT DISTR    |:EX10000|1        |277 |
|2 |  PX PARTITION ITERATOR|        |1        |275 |
|3 |   HASH OUTER JOIN     |        |1        |275 |
|4 |    HASH JOIN          |        |1        |184 |
|5 |     TABLE SCAN        |t1      |1        |92  |
|6 |     TABLE SCAN        |t2      |1        |92  |
|7 |    TABLE SCAN         |t3      |1        |92  |
====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b, t3.a, t3.b)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b, t3.a, t3.b)]), filter(nil), rowset=256, dop=1
  2 - output([t1.a], [t3.a], [t2.a], [t1.b], [t2.b], [t3.b]), filter(nil), rowset=256
  3 - output([t1.a], [t3.a], [t2.a], [t1.b], [t2.b], [t3.b]), filter(nil), rowset=256, 
      equal_conds([t1.a = t3.a]), other_conds(nil)
  4 - output([t1.a], [t2.a], [t1.b], [t2.b]), filter(nil), rowset=256, 
      equal_conds([t1.a = t2.a]), other_conds(nil)
  5 - output([t1.a], [t1.b]), filter(nil), rowset=256, 
      access([t1.a], [t1.b]), partitions(p[0-1])
  6 - output([t2.a], [t2.b]), filter(nil), rowset=256, 
      access([t2.a], [t2.b]), partitions(p[0-1])
  7 - output([t3.a], [t3.b]), filter(nil), rowset=256, 
      access([t3.a], [t3.b]), partitions(p[0-1])

explain select/*+leading(t1,t2,t3)*/ * from t1 inner join t2 on t1.a = t2.a left join t3 on t2.a = t3.a;
Query Plan
====================================================
|ID|OPERATOR               |NAME    |EST. ROWS|COST|
----------------------------------------------------
|0 |PX COORDINATOR         |        |1        |278 |
|1 | EXCHANGE OUT DISTR    |:EX10000|1        |277 |
|2 |  PX PARTITION ITERATOR|        |1        |275 |
|3 |   HASH OUTER JOIN     |        |1        |275 |
|4 |    HASH JOIN          |        |1        |184 |
|5 |     TABLE SCAN        |t1      |1        |92  |
|6 |     TABLE SCAN        |t2      |1        |92  |
|7 |    TABLE SCAN         |t3      |1        |92  |
====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b, t3.a, t3.b)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b, t3.a, t3.b)]), filter(nil), rowset=256, dop=1
  2 - output([t2.a], [t3.a], [t1.a], [t1.b], [t2.b], [t3.b]), filter(nil), rowset=256
  3 - output([t2.a], [t3.a], [t1.a], [t1.b], [t2.b], [t3.b]), filter(nil), rowset=256, 
      equal_conds([t2.a = t3.a]), other_conds(nil)
  4 - output([t2.a], [t1.a], [t1.b], [t2.b]), filter(nil), rowset=256, 
      equal_conds([t1.a = t2.a]), other_conds(nil)
  5 - output([t1.a], [t1.b]), filter(nil), rowset=256, 
      access([t1.a], [t1.b]), partitions(p[0-1])
  6 - output([t2.a], [t2.b]), filter(nil), rowset=256, 
      access([t2.a], [t2.b]), partitions(p[0-1])
  7 - output([t3.a], [t3.b]), filter(nil), rowset=256, 
      access([t3.a], [t3.b]), partitions(p[0-1])

explain select/*+leading(t1,t2,t3)*/ * from t1 inner join t2 on t1.a = t2.a full join t3 on t1.a = t3.a;
Query Plan
====================================================
|ID|OPERATOR               |NAME    |EST. ROWS|COST|
----------------------------------------------------
|0 |PX COORDINATOR         |        |1        |278 |
|1 | EXCHANGE OUT DISTR    |:EX10000|1        |277 |
|2 |  PX PARTITION ITERATOR|        |1        |275 |
|3 |   HASH FULL OUTER JOIN|        |1        |275 |
|4 |    HASH JOIN          |        |1        |184 |
|5 |     TABLE SCAN        |t1      |1        |92  |
|6 |     TABLE SCAN        |t2      |1        |92  |
|7 |    TABLE SCAN         |t3      |1        |92  |
====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b, t3.a, t3.b)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b, t3.a, t3.b)]), filter(nil), rowset=256, dop=1
  2 - output([t1.a], [t3.a], [t2.a], [t1.b], [t2.b], [t3.b]), filter(nil), rowset=256
  3 - output([t1.a], [t3.a], [t2.a], [t1.b], [t2.b], [t3.b]), filter(nil), rowset=256, 
      equal_conds([t1.a = t3.a]), other_conds(nil)
  4 - output([t1.a], [t2.a], [t1.b], [t2.b]), filter(nil), rowset=256, 
      equal_conds([t1.a = t2.a]), other_conds(nil)
  5 - output([t1.a], [t1.b]), filter(nil), rowset=256, 
      access([t1.a], [t1.b]), partitions(p[0-1])
  6 - output([t2.a], [t2.b]), filter(nil), rowset=256, 
      access([t2.a], [t2.b]), partitions(p[0-1])
  7 - output([t3.a], [t3.b]), filter(nil), rowset=256, 
      access([t3.a], [t3.b]), partitions(p[0-1])

explain select/*+leading(t1,t2,t3)*/ * from t1 inner join t2 on t1.a = t2.a full join t3 on t2.a = t3.a;
Query Plan
====================================================
|ID|OPERATOR               |NAME    |EST. ROWS|COST|
----------------------------------------------------
|0 |PX COORDINATOR         |        |1        |278 |
|1 | EXCHANGE OUT DISTR    |:EX10000|1        |277 |
|2 |  PX PARTITION ITERATOR|        |1        |275 |
|3 |   HASH FULL OUTER JOIN|        |1        |275 |
|4 |    HASH JOIN          |        |1        |184 |
|5 |     TABLE SCAN        |t1      |1        |92  |
|6 |     TABLE SCAN        |t2      |1        |92  |
|7 |    TABLE SCAN         |t3      |1        |92  |
====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b, t3.a, t3.b)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b, t3.a, t3.b)]), filter(nil), rowset=256, dop=1
  2 - output([t2.a], [t3.a], [t1.a], [t1.b], [t2.b], [t3.b]), filter(nil), rowset=256
  3 - output([t2.a], [t3.a], [t1.a], [t1.b], [t2.b], [t3.b]), filter(nil), rowset=256, 
      equal_conds([t2.a = t3.a]), other_conds(nil)
  4 - output([t2.a], [t1.a], [t1.b], [t2.b]), filter(nil), rowset=256, 
      equal_conds([t1.a = t2.a]), other_conds(nil)
  5 - output([t1.a], [t1.b]), filter(nil), rowset=256, 
      access([t1.a], [t1.b]), partitions(p[0-1])
  6 - output([t2.a], [t2.b]), filter(nil), rowset=256, 
      access([t2.a], [t2.b]), partitions(p[0-1])
  7 - output([t3.a], [t3.b]), filter(nil), rowset=256, 
      access([t3.a], [t3.b]), partitions(p[0-1])

explain select/*+leading(t1,t2,t3)*/ * from t1 left join t2 on t1.a = t2.a inner join t3 on t1.a = t3.a;
Query Plan
====================================================
|ID|OPERATOR               |NAME    |EST. ROWS|COST|
----------------------------------------------------
|0 |PX COORDINATOR         |        |1        |278 |
|1 | EXCHANGE OUT DISTR    |:EX10000|1        |277 |
|2 |  PX PARTITION ITERATOR|        |1        |275 |
|3 |   HASH JOIN           |        |1        |275 |
|4 |    HASH OUTER JOIN    |        |1        |184 |
|5 |     TABLE SCAN        |t1      |1        |92  |
|6 |     TABLE SCAN        |t2      |1        |92  |
|7 |    TABLE SCAN         |t3      |1        |92  |
====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b, t3.a, t3.b)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b, t3.a, t3.b)]), filter(nil), rowset=256, dop=1
  2 - output([t1.a], [t3.a], [t2.a], [t1.b], [t2.b], [t3.b]), filter(nil), rowset=256
  3 - output([t1.a], [t3.a], [t2.a], [t1.b], [t2.b], [t3.b]), filter(nil), rowset=256, 
      equal_conds([t1.a = t3.a]), other_conds(nil)
  4 - output([t1.a], [t2.a], [t1.b], [t2.b]), filter(nil), rowset=256, 
      equal_conds([t1.a = t2.a]), other_conds(nil)
  5 - output([t1.a], [t1.b]), filter(nil), rowset=256, 
      access([t1.a], [t1.b]), partitions(p[0-1])
  6 - output([t2.a], [t2.b]), filter(nil), rowset=256, 
      access([t2.a], [t2.b]), partitions(p[0-1])
  7 - output([t3.a], [t3.b]), filter(nil), rowset=256, 
      access([t3.a], [t3.b]), partitions(p[0-1])

explain select/*+leading(t1,t2,t3)*/ * from t1 left join t2 on t1.a = t2.a inner join t3 on t2.a = t3.a;
Query Plan
====================================================
|ID|OPERATOR               |NAME    |EST. ROWS|COST|
----------------------------------------------------
|0 |PX COORDINATOR         |        |1        |278 |
|1 | EXCHANGE OUT DISTR    |:EX10000|1        |277 |
|2 |  PX PARTITION ITERATOR|        |1        |275 |
|3 |   HASH JOIN           |        |1        |275 |
|4 |    HASH JOIN          |        |1        |184 |
|5 |     TABLE SCAN        |t1      |1        |92  |
|6 |     TABLE SCAN        |t2      |1        |92  |
|7 |    TABLE SCAN         |t3      |1        |92  |
====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b, t3.a, t3.b)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b, t3.a, t3.b)]), filter(nil), rowset=256, dop=1
  2 - output([t2.a], [t3.a], [t1.a], [t1.b], [t2.b], [t3.b]), filter(nil), rowset=256
  3 - output([t2.a], [t3.a], [t1.a], [t1.b], [t2.b], [t3.b]), filter(nil), rowset=256, 
      equal_conds([t2.a = t3.a]), other_conds(nil)
  4 - output([t2.a], [t1.a], [t1.b], [t2.b]), filter(nil), rowset=256, 
      equal_conds([t1.a = t2.a]), other_conds(nil)
  5 - output([t1.a], [t1.b]), filter(nil), rowset=256, 
      access([t1.a], [t1.b]), partitions(p[0-1])
  6 - output([t2.a], [t2.b]), filter(nil), rowset=256, 
      access([t2.a], [t2.b]), partitions(p[0-1])
  7 - output([t3.a], [t3.b]), filter(nil), rowset=256, 
      access([t3.a], [t3.b]), partitions(p[0-1])

explain select/*+leading(t1,t2,t3)*/ * from t1 full join t2 on t1.a = t2.a inner join t3 on t1.a = t3.a;
Query Plan
====================================================
|ID|OPERATOR               |NAME    |EST. ROWS|COST|
----------------------------------------------------
|0 |PX COORDINATOR         |        |1        |278 |
|1 | EXCHANGE OUT DISTR    |:EX10000|1        |277 |
|2 |  PX PARTITION ITERATOR|        |1        |275 |
|3 |   HASH JOIN           |        |1        |275 |
|4 |    HASH OUTER JOIN    |        |1        |184 |
|5 |     TABLE SCAN        |t1      |1        |92  |
|6 |     TABLE SCAN        |t2      |1        |92  |
|7 |    TABLE SCAN         |t3      |1        |92  |
====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b, t3.a, t3.b)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b, t3.a, t3.b)]), filter(nil), rowset=256, dop=1
  2 - output([t1.a], [t3.a], [t2.a], [t1.b], [t2.b], [t3.b]), filter(nil), rowset=256
  3 - output([t1.a], [t3.a], [t2.a], [t1.b], [t2.b], [t3.b]), filter(nil), rowset=256, 
      equal_conds([t1.a = t3.a]), other_conds(nil)
  4 - output([t1.a], [t2.a], [t1.b], [t2.b]), filter(nil), rowset=256, 
      equal_conds([t1.a = t2.a]), other_conds(nil)
  5 - output([t1.a], [t1.b]), filter(nil), rowset=256, 
      access([t1.a], [t1.b]), partitions(p[0-1])
  6 - output([t2.a], [t2.b]), filter(nil), rowset=256, 
      access([t2.a], [t2.b]), partitions(p[0-1])
  7 - output([t3.a], [t3.b]), filter(nil), rowset=256, 
      access([t3.a], [t3.b]), partitions(p[0-1])

explain select/*+leading(t1,t2,t3)*/ * from t1 full join t2 on t1.a = t2.a inner join t3 on t2.a = t3.a;
Query Plan
======================================================
|ID|OPERATOR                 |NAME    |EST. ROWS|COST|
------------------------------------------------------
|0 |PX COORDINATOR           |        |1        |278 |
|1 | EXCHANGE OUT DISTR      |:EX10000|1        |277 |
|2 |  PX PARTITION ITERATOR  |        |1        |275 |
|3 |   HASH JOIN             |        |1        |275 |
|4 |    HASH RIGHT OUTER JOIN|        |1        |184 |
|5 |     TABLE SCAN          |t1      |1        |92  |
|6 |     TABLE SCAN          |t2      |1        |92  |
|7 |    TABLE SCAN           |t3      |1        |92  |
======================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b, t3.a, t3.b)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b, t3.a, t3.b)]), filter(nil), rowset=256, dop=1
  2 - output([t2.a], [t3.a], [t1.a], [t1.b], [t2.b], [t3.b]), filter(nil), rowset=256
  3 - output([t2.a], [t3.a], [t1.a], [t1.b], [t2.b], [t3.b]), filter(nil), rowset=256, 
      equal_conds([t2.a = t3.a]), other_conds(nil)
  4 - output([t2.a], [t1.a], [t1.b], [t2.b]), filter(nil), rowset=256, 
      equal_conds([t1.a = t2.a]), other_conds(nil)
  5 - output([t1.a], [t1.b]), filter(nil), rowset=256, 
      access([t1.a], [t1.b]), partitions(p[0-1])
  6 - output([t2.a], [t2.b]), filter(nil), rowset=256, 
      access([t2.a], [t2.b]), partitions(p[0-1])
  7 - output([t3.a], [t3.b]), filter(nil), rowset=256, 
      access([t3.a], [t3.b]), partitions(p[0-1])

explain select/*+leading(t1,t2,t3)*/ * from t1 full join t2 on t1.a = t2.a left join t3 on t1.a = t3.a;
Query Plan
=====================================================
|ID|OPERATOR                |NAME    |EST. ROWS|COST|
-----------------------------------------------------
|0 |PX COORDINATOR          |        |1        |278 |
|1 | EXCHANGE OUT DISTR     |:EX10000|1        |277 |
|2 |  PX PARTITION ITERATOR |        |1        |275 |
|3 |   HASH OUTER JOIN      |        |1        |275 |
|4 |    HASH FULL OUTER JOIN|        |1        |184 |
|5 |     TABLE SCAN         |t1      |1        |92  |
|6 |     TABLE SCAN         |t2      |1        |92  |
|7 |    TABLE SCAN          |t3      |1        |92  |
=====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b, t3.a, t3.b)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b, t3.a, t3.b)]), filter(nil), rowset=256, dop=1
  2 - output([t1.a], [t3.a], [t2.a], [t1.b], [t2.b], [t3.b]), filter(nil), rowset=256
  3 - output([t1.a], [t3.a], [t2.a], [t1.b], [t2.b], [t3.b]), filter(nil), rowset=256, 
      equal_conds([t1.a = t3.a]), other_conds(nil)
  4 - output([t1.a], [t2.a], [t1.b], [t2.b]), filter(nil), rowset=256, 
      equal_conds([t1.a = t2.a]), other_conds(nil)
  5 - output([t1.a], [t1.b]), filter(nil), rowset=256, 
      access([t1.a], [t1.b]), partitions(p[0-1])
  6 - output([t2.a], [t2.b]), filter(nil), rowset=256, 
      access([t2.a], [t2.b]), partitions(p[0-1])
  7 - output([t3.a], [t3.b]), filter(nil), rowset=256, 
      access([t3.a], [t3.b]), partitions(p[0-1])

explain select/*+leading(t1,t2,t3)*/ * from t1 full join t2 on t1.a = t2.a left join t3 on t2.a = t3.a;
Query Plan
=====================================================
|ID|OPERATOR                |NAME    |EST. ROWS|COST|
-----------------------------------------------------
|0 |PX COORDINATOR          |        |1        |278 |
|1 | EXCHANGE OUT DISTR     |:EX10000|1        |277 |
|2 |  PX PARTITION ITERATOR |        |1        |275 |
|3 |   HASH OUTER JOIN      |        |1        |275 |
|4 |    HASH FULL OUTER JOIN|        |1        |184 |
|5 |     TABLE SCAN         |t1      |1        |92  |
|6 |     TABLE SCAN         |t2      |1        |92  |
|7 |    TABLE SCAN          |t3      |1        |92  |
=====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b, t3.a, t3.b)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b, t3.a, t3.b)]), filter(nil), rowset=256, dop=1
  2 - output([t2.a], [t3.a], [t1.a], [t1.b], [t2.b], [t3.b]), filter(nil), rowset=256
  3 - output([t2.a], [t3.a], [t1.a], [t1.b], [t2.b], [t3.b]), filter(nil), rowset=256, 
      equal_conds([t2.a = t3.a]), other_conds(nil)
  4 - output([t2.a], [t1.a], [t1.b], [t2.b]), filter(nil), rowset=256, 
      equal_conds([t1.a = t2.a]), other_conds(nil)
  5 - output([t1.a], [t1.b]), filter(nil), rowset=256, 
      access([t1.a], [t1.b]), partitions(p[0-1])
  6 - output([t2.a], [t2.b]), filter(nil), rowset=256, 
      access([t2.a], [t2.b]), partitions(p[0-1])
  7 - output([t3.a], [t3.b]), filter(nil), rowset=256, 
      access([t3.a], [t3.b]), partitions(p[0-1])

explain select * from t1 where t1.a in (select t2.a from t2);
Query Plan
====================================================
|ID|OPERATOR               |NAME    |EST. ROWS|COST|
----------------------------------------------------
|0 |PX COORDINATOR         |        |1        |185 |
|1 | EXCHANGE OUT DISTR    |:EX10000|1        |184 |
|2 |  PX PARTITION ITERATOR|        |1        |184 |
|3 |   HASH RIGHT SEMI JOIN|        |1        |184 |
|4 |    TABLE SCAN         |t2      |1        |92  |
|5 |    TABLE SCAN         |t1      |1        |92  |
====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b)]), filter(nil), rowset=256, dop=1
  2 - output([t1.a], [t1.b]), filter(nil), rowset=256
  3 - output([t1.a], [t1.b]), filter(nil), rowset=256, 
      equal_conds([t1.a = t2.a]), other_conds(nil)
  4 - output([t2.a]), filter(nil), rowset=256, 
      access([t2.a]), partitions(p[0-1])
  5 - output([t1.a], [t1.b]), filter(nil), rowset=256, 
      access([t1.a], [t1.b]), partitions(p[0-1])

explain select * from t1 where t1.a in (select t2.a from t2) and t1.a in (select t3.a from t3);
Query Plan
=====================================================
|ID|OPERATOR                |NAME    |EST. ROWS|COST|
-----------------------------------------------------
|0 |PX COORDINATOR          |        |1        |276 |
|1 | EXCHANGE OUT DISTR     |:EX10000|1        |276 |
|2 |  PX PARTITION ITERATOR |        |1        |275 |
|3 |   HASH RIGHT SEMI JOIN |        |1        |275 |
|4 |    TABLE SCAN          |t3      |1        |92  |
|5 |    HASH RIGHT SEMI JOIN|        |1        |184 |
|6 |     TABLE SCAN         |t2      |1        |92  |
|7 |     TABLE SCAN         |t1      |1        |92  |
=====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b)]), filter(nil), rowset=256, dop=1
  2 - output([t1.a], [t1.b]), filter(nil), rowset=256
  3 - output([t1.a], [t1.b]), filter(nil), rowset=256, 
      equal_conds([t1.a = t3.a]), other_conds(nil)
  4 - output([t3.a]), filter(nil), rowset=256, 
      access([t3.a]), partitions(p[0-1])
  5 - output([t1.a], [t1.b]), filter(nil), rowset=256, 
      equal_conds([t1.a = t2.a]), other_conds(nil)
  6 - output([t2.a]), filter(nil), rowset=256, 
      access([t2.a]), partitions(p[0-1])
  7 - output([t1.a], [t1.b]), filter(nil), rowset=256, 
      access([t1.a], [t1.b]), partitions(p[0-1])

explain select * from t1 where t1.a in (select t2.a from t2 where t2.a in (select t3.a from t3));
Query Plan
====================================================
|ID|OPERATOR               |NAME    |EST. ROWS|COST|
----------------------------------------------------
|0 |PX COORDINATOR         |        |1        |276 |
|1 | EXCHANGE OUT DISTR    |:EX10000|1        |276 |
|2 |  PX PARTITION ITERATOR|        |1        |275 |
|3 |   HASH RIGHT SEMI JOIN|        |1        |275 |
|4 |    SUBPLAN SCAN       |VIEW2   |1        |184 |
|5 |     HASH SEMI JOIN    |        |1        |184 |
|6 |      TABLE SCAN       |t2      |1        |92  |
|7 |      TABLE SCAN       |t3      |1        |92  |
|8 |    TABLE SCAN         |t1      |1        |92  |
====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b)]), filter(nil), rowset=256, dop=1
  2 - output([t1.a], [t1.b]), filter(nil), rowset=256
  3 - output([t1.a], [t1.b]), filter(nil), rowset=256, 
      equal_conds([t1.a = VIEW2.a]), other_conds(nil)
  4 - output([VIEW2.a]), filter(nil), rowset=256, 
      access([VIEW2.a])
  5 - output([t2.a]), filter(nil), rowset=256, 
      equal_conds([t2.a = t3.a]), other_conds(nil)
  6 - output([t2.a]), filter(nil), rowset=256, 
      access([t2.a]), partitions(p[0-1])
  7 - output([t3.a]), filter(nil), rowset=256, 
      access([t3.a]), partitions(p[0-1])
  8 - output([t1.a], [t1.b]), filter(nil), rowset=256, 
      access([t1.a], [t1.b]), partitions(p[0-1])

drop table if exists t1, t2, t3;
create table t1(a datetime, b int) partition by range columns(a) (
partition p0 values less than ('2011-01-01'),
partition p1 values less than ('2116-01-01'));
create table t2(a datetime, b int) partition by range columns(a) (
partition p0 values less than ('2011-01-01'),
partition p1 values less than ('2116-01-01'));
create table t3(a datetime, b int) partition by range columns(a) (
partition p0 values less than ('2011-01-01'),
partition p1 values less than ('2116-01-01'));
explain select/*+leading(t1,t2,t3)*/ * from t1, t2 where t1.a = t2.a;
Query Plan
====================================================
|ID|OPERATOR               |NAME    |EST. ROWS|COST|
----------------------------------------------------
|0 |PX COORDINATOR         |        |1        |186 |
|1 | EXCHANGE OUT DISTR    |:EX10000|1        |185 |
|2 |  PX PARTITION ITERATOR|        |1        |184 |
|3 |   HASH JOIN           |        |1        |184 |
|4 |    TABLE SCAN         |t1      |1        |92  |
|5 |    TABLE SCAN         |t2      |1        |92  |
====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b)]), filter(nil), rowset=256, dop=1
  2 - output([t1.a], [t2.a], [t1.b], [t2.b]), filter(nil), rowset=256
  3 - output([t1.a], [t2.a], [t1.b], [t2.b]), filter(nil), rowset=256, 
      equal_conds([t1.a = t2.a]), other_conds(nil)
  4 - output([t1.a], [t1.b]), filter(nil), rowset=256, 
      access([t1.a], [t1.b]), partitions(p[0-1])
  5 - output([t2.a], [t2.b]), filter(nil), rowset=256, 
      access([t2.a], [t2.b]), partitions(p[0-1])

explain select/*+leading(t1,t2,t3)*/ * from t1, t2, t3 where t1.a = t2.a and t2.a = t3.a;
Query Plan
====================================================
|ID|OPERATOR               |NAME    |EST. ROWS|COST|
----------------------------------------------------
|0 |PX COORDINATOR         |        |1        |279 |
|1 | EXCHANGE OUT DISTR    |:EX10000|1        |278 |
|2 |  PX PARTITION ITERATOR|        |1        |275 |
|3 |   HASH JOIN           |        |1        |275 |
|4 |    HASH JOIN          |        |1        |184 |
|5 |     TABLE SCAN        |t1      |1        |92  |
|6 |     TABLE SCAN        |t2      |1        |92  |
|7 |    TABLE SCAN         |t3      |1        |92  |
====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b, t3.a, t3.b)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b, t3.a, t3.b)]), filter(nil), rowset=256, dop=1
  2 - output([t2.a], [t3.a], [t1.a], [t1.b], [t2.b], [t3.b]), filter(nil), rowset=256
  3 - output([t2.a], [t3.a], [t1.a], [t1.b], [t2.b], [t3.b]), filter(nil), rowset=256, 
      equal_conds([t2.a = t3.a]), other_conds(nil)
  4 - output([t2.a], [t1.a], [t1.b], [t2.b]), filter(nil), rowset=256, 
      equal_conds([t1.a = t2.a]), other_conds(nil)
  5 - output([t1.a], [t1.b]), filter(nil), rowset=256, 
      access([t1.a], [t1.b]), partitions(p[0-1])
  6 - output([t2.a], [t2.b]), filter(nil), rowset=256, 
      access([t2.a], [t2.b]), partitions(p[0-1])
  7 - output([t3.a], [t3.b]), filter(nil), rowset=256, 
      access([t3.a], [t3.b]), partitions(p[0-1])

explain select/*+leading(t1,t2,t3)*/ * from t1, t2, t3 where t1.a = t2.a and t1.a = t3.a;
Query Plan
====================================================
|ID|OPERATOR               |NAME    |EST. ROWS|COST|
----------------------------------------------------
|0 |PX COORDINATOR         |        |1        |279 |
|1 | EXCHANGE OUT DISTR    |:EX10000|1        |278 |
|2 |  PX PARTITION ITERATOR|        |1        |275 |
|3 |   HASH JOIN           |        |1        |275 |
|4 |    HASH JOIN          |        |1        |184 |
|5 |     TABLE SCAN        |t1      |1        |92  |
|6 |     TABLE SCAN        |t2      |1        |92  |
|7 |    TABLE SCAN         |t3      |1        |92  |
====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b, t3.a, t3.b)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b, t3.a, t3.b)]), filter(nil), rowset=256, dop=1
  2 - output([t1.a], [t3.a], [t2.a], [t1.b], [t2.b], [t3.b]), filter(nil), rowset=256
  3 - output([t1.a], [t3.a], [t2.a], [t1.b], [t2.b], [t3.b]), filter(nil), rowset=256, 
      equal_conds([t1.a = t3.a]), other_conds(nil)
  4 - output([t1.a], [t2.a], [t1.b], [t2.b]), filter(nil), rowset=256, 
      equal_conds([t1.a = t2.a]), other_conds(nil)
  5 - output([t1.a], [t1.b]), filter(nil), rowset=256, 
      access([t1.a], [t1.b]), partitions(p[0-1])
  6 - output([t2.a], [t2.b]), filter(nil), rowset=256, 
      access([t2.a], [t2.b]), partitions(p[0-1])
  7 - output([t3.a], [t3.b]), filter(nil), rowset=256, 
      access([t3.a], [t3.b]), partitions(p[0-1])

explain select/*+leading(t1,t2)*/ * from t1 left join t2 on t1.a = t2.a;
Query Plan
====================================================
|ID|OPERATOR               |NAME    |EST. ROWS|COST|
----------------------------------------------------
|0 |PX COORDINATOR         |        |1        |186 |
|1 | EXCHANGE OUT DISTR    |:EX10000|1        |185 |
|2 |  PX PARTITION ITERATOR|        |1        |184 |
|3 |   HASH OUTER JOIN     |        |1        |184 |
|4 |    TABLE SCAN         |t1      |1        |92  |
|5 |    TABLE SCAN         |t2      |1        |92  |
====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b)]), filter(nil), rowset=256, dop=1
  2 - output([t1.a], [t2.a], [t1.b], [t2.b]), filter(nil), rowset=256
  3 - output([t1.a], [t2.a], [t1.b], [t2.b]), filter(nil), rowset=256, 
      equal_conds([t1.a = t2.a]), other_conds(nil)
  4 - output([t1.a], [t1.b]), filter(nil), rowset=256, 
      access([t1.a], [t1.b]), partitions(p[0-1])
  5 - output([t2.a], [t2.b]), filter(nil), rowset=256, 
      access([t2.a], [t2.b]), partitions(p[0-1])

explain select/*+leading(t1,t2,t3)*/ * from t1 left join t2 on t1.a = t2.a left join t3 on t1.a = t3.a;
Query Plan
====================================================
|ID|OPERATOR               |NAME    |EST. ROWS|COST|
----------------------------------------------------
|0 |PX COORDINATOR         |        |1        |279 |
|1 | EXCHANGE OUT DISTR    |:EX10000|1        |278 |
|2 |  PX PARTITION ITERATOR|        |1        |275 |
|3 |   HASH OUTER JOIN     |        |1        |275 |
|4 |    HASH OUTER JOIN    |        |1        |184 |
|5 |     TABLE SCAN        |t1      |1        |92  |
|6 |     TABLE SCAN        |t2      |1        |92  |
|7 |    TABLE SCAN         |t3      |1        |92  |
====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b, t3.a, t3.b)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b, t3.a, t3.b)]), filter(nil), rowset=256, dop=1
  2 - output([t1.a], [t3.a], [t2.a], [t1.b], [t2.b], [t3.b]), filter(nil), rowset=256
  3 - output([t1.a], [t3.a], [t2.a], [t1.b], [t2.b], [t3.b]), filter(nil), rowset=256, 
      equal_conds([t1.a = t3.a]), other_conds(nil)
  4 - output([t1.a], [t2.a], [t1.b], [t2.b]), filter(nil), rowset=256, 
      equal_conds([t1.a = t2.a]), other_conds(nil)
  5 - output([t1.a], [t1.b]), filter(nil), rowset=256, 
      access([t1.a], [t1.b]), partitions(p[0-1])
  6 - output([t2.a], [t2.b]), filter(nil), rowset=256, 
      access([t2.a], [t2.b]), partitions(p[0-1])
  7 - output([t3.a], [t3.b]), filter(nil), rowset=256, 
      access([t3.a], [t3.b]), partitions(p[0-1])

explain select/*+leading(t1,t2,t3)*/ * from t1 left join t2 on t1.a = t2.a left join t3 on t2.a = t3.a;
Query Plan
====================================================
|ID|OPERATOR               |NAME    |EST. ROWS|COST|
----------------------------------------------------
|0 |PX COORDINATOR         |        |1        |279 |
|1 | EXCHANGE OUT DISTR    |:EX10000|1        |278 |
|2 |  PX PARTITION ITERATOR|        |1        |275 |
|3 |   HASH OUTER JOIN     |        |1        |275 |
|4 |    HASH OUTER JOIN    |        |1        |184 |
|5 |     TABLE SCAN        |t1      |1        |92  |
|6 |     TABLE SCAN        |t2      |1        |92  |
|7 |    TABLE SCAN         |t3      |1        |92  |
====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b, t3.a, t3.b)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b, t3.a, t3.b)]), filter(nil), rowset=256, dop=1
  2 - output([t2.a], [t3.a], [t1.a], [t1.b], [t2.b], [t3.b]), filter(nil), rowset=256
  3 - output([t2.a], [t3.a], [t1.a], [t1.b], [t2.b], [t3.b]), filter(nil), rowset=256, 
      equal_conds([t2.a = t3.a]), other_conds(nil)
  4 - output([t2.a], [t1.a], [t1.b], [t2.b]), filter(nil), rowset=256, 
      equal_conds([t1.a = t2.a]), other_conds(nil)
  5 - output([t1.a], [t1.b]), filter(nil), rowset=256, 
      access([t1.a], [t1.b]), partitions(p[0-1])
  6 - output([t2.a], [t2.b]), filter(nil), rowset=256, 
      access([t2.a], [t2.b]), partitions(p[0-1])
  7 - output([t3.a], [t3.b]), filter(nil), rowset=256, 
      access([t3.a], [t3.b]), partitions(p[0-1])

explain select/*+leading(t1,t2)*/ * from t1 full join t2 on t1.a = t2.a;
Query Plan
====================================================
|ID|OPERATOR               |NAME    |EST. ROWS|COST|
----------------------------------------------------
|0 |PX COORDINATOR         |        |1        |186 |
|1 | EXCHANGE OUT DISTR    |:EX10000|1        |185 |
|2 |  PX PARTITION ITERATOR|        |1        |184 |
|3 |   HASH FULL OUTER JOIN|        |1        |184 |
|4 |    TABLE SCAN         |t1      |1        |92  |
|5 |    TABLE SCAN         |t2      |1        |92  |
====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b)]), filter(nil), rowset=256, dop=1
  2 - output([t1.a], [t2.a], [t1.b], [t2.b]), filter(nil), rowset=256
  3 - output([t1.a], [t2.a], [t1.b], [t2.b]), filter(nil), rowset=256, 
      equal_conds([t1.a = t2.a]), other_conds(nil)
  4 - output([t1.a], [t1.b]), filter(nil), rowset=256, 
      access([t1.a], [t1.b]), partitions(p[0-1])
  5 - output([t2.a], [t2.b]), filter(nil), rowset=256, 
      access([t2.a], [t2.b]), partitions(p[0-1])

explain select/*+leading(t1,t2,t3)*/ * from t1 full join t2 on t1.a = t2.a full join t3 on t1.a = t3.a;
Query Plan
=====================================================
|ID|OPERATOR                |NAME    |EST. ROWS|COST|
-----------------------------------------------------
|0 |PX COORDINATOR          |        |1        |279 |
|1 | EXCHANGE OUT DISTR     |:EX10000|1        |278 |
|2 |  PX PARTITION ITERATOR |        |1        |275 |
|3 |   HASH FULL OUTER JOIN |        |1        |275 |
|4 |    HASH FULL OUTER JOIN|        |1        |184 |
|5 |     TABLE SCAN         |t1      |1        |92  |
|6 |     TABLE SCAN         |t2      |1        |92  |
|7 |    TABLE SCAN          |t3      |1        |92  |
=====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b, t3.a, t3.b)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b, t3.a, t3.b)]), filter(nil), rowset=256, dop=1
  2 - output([t1.a], [t3.a], [t2.a], [t1.b], [t2.b], [t3.b]), filter(nil), rowset=256
  3 - output([t1.a], [t3.a], [t2.a], [t1.b], [t2.b], [t3.b]), filter(nil), rowset=256, 
      equal_conds([t1.a = t3.a]), other_conds(nil)
  4 - output([t1.a], [t2.a], [t1.b], [t2.b]), filter(nil), rowset=256, 
      equal_conds([t1.a = t2.a]), other_conds(nil)
  5 - output([t1.a], [t1.b]), filter(nil), rowset=256, 
      access([t1.a], [t1.b]), partitions(p[0-1])
  6 - output([t2.a], [t2.b]), filter(nil), rowset=256, 
      access([t2.a], [t2.b]), partitions(p[0-1])
  7 - output([t3.a], [t3.b]), filter(nil), rowset=256, 
      access([t3.a], [t3.b]), partitions(p[0-1])

explain select/*+leading(t1,t2,t3)*/ * from t1 full join t2 on t1.a = t2.a full join t3 on t2.a = t3.a;
Query Plan
=====================================================
|ID|OPERATOR                |NAME    |EST. ROWS|COST|
-----------------------------------------------------
|0 |PX COORDINATOR          |        |1        |279 |
|1 | EXCHANGE OUT DISTR     |:EX10000|1        |278 |
|2 |  PX PARTITION ITERATOR |        |1        |275 |
|3 |   HASH FULL OUTER JOIN |        |1        |275 |
|4 |    HASH FULL OUTER JOIN|        |1        |184 |
|5 |     TABLE SCAN         |t1      |1        |92  |
|6 |     TABLE SCAN         |t2      |1        |92  |
|7 |    TABLE SCAN          |t3      |1        |92  |
=====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b, t3.a, t3.b)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b, t3.a, t3.b)]), filter(nil), rowset=256, dop=1
  2 - output([t2.a], [t3.a], [t1.a], [t1.b], [t2.b], [t3.b]), filter(nil), rowset=256
  3 - output([t2.a], [t3.a], [t1.a], [t1.b], [t2.b], [t3.b]), filter(nil), rowset=256, 
      equal_conds([t2.a = t3.a]), other_conds(nil)
  4 - output([t2.a], [t1.a], [t1.b], [t2.b]), filter(nil), rowset=256, 
      equal_conds([t1.a = t2.a]), other_conds(nil)
  5 - output([t1.a], [t1.b]), filter(nil), rowset=256, 
      access([t1.a], [t1.b]), partitions(p[0-1])
  6 - output([t2.a], [t2.b]), filter(nil), rowset=256, 
      access([t2.a], [t2.b]), partitions(p[0-1])
  7 - output([t3.a], [t3.b]), filter(nil), rowset=256, 
      access([t3.a], [t3.b]), partitions(p[0-1])

explain select/*+leading(t1,t2,t3)*/ * from t1 inner join t2 on t1.a = t2.a left join t3 on t1.a = t3.a;
Query Plan
====================================================
|ID|OPERATOR               |NAME    |EST. ROWS|COST|
----------------------------------------------------
|0 |PX COORDINATOR         |        |1        |279 |
|1 | EXCHANGE OUT DISTR    |:EX10000|1        |278 |
|2 |  PX PARTITION ITERATOR|        |1        |275 |
|3 |   HASH OUTER JOIN     |        |1        |275 |
|4 |    HASH JOIN          |        |1        |184 |
|5 |     TABLE SCAN        |t1      |1        |92  |
|6 |     TABLE SCAN        |t2      |1        |92  |
|7 |    TABLE SCAN         |t3      |1        |92  |
====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b, t3.a, t3.b)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b, t3.a, t3.b)]), filter(nil), rowset=256, dop=1
  2 - output([t1.a], [t3.a], [t2.a], [t1.b], [t2.b], [t3.b]), filter(nil), rowset=256
  3 - output([t1.a], [t3.a], [t2.a], [t1.b], [t2.b], [t3.b]), filter(nil), rowset=256, 
      equal_conds([t1.a = t3.a]), other_conds(nil)
  4 - output([t1.a], [t2.a], [t1.b], [t2.b]), filter(nil), rowset=256, 
      equal_conds([t1.a = t2.a]), other_conds(nil)
  5 - output([t1.a], [t1.b]), filter(nil), rowset=256, 
      access([t1.a], [t1.b]), partitions(p[0-1])
  6 - output([t2.a], [t2.b]), filter(nil), rowset=256, 
      access([t2.a], [t2.b]), partitions(p[0-1])
  7 - output([t3.a], [t3.b]), filter(nil), rowset=256, 
      access([t3.a], [t3.b]), partitions(p[0-1])

explain select/*+leading(t1,t2,t3)*/ * from t1 inner join t2 on t1.a = t2.a left join t3 on t2.a = t3.a;
Query Plan
====================================================
|ID|OPERATOR               |NAME    |EST. ROWS|COST|
----------------------------------------------------
|0 |PX COORDINATOR         |        |1        |279 |
|1 | EXCHANGE OUT DISTR    |:EX10000|1        |278 |
|2 |  PX PARTITION ITERATOR|        |1        |275 |
|3 |   HASH OUTER JOIN     |        |1        |275 |
|4 |    HASH JOIN          |        |1        |184 |
|5 |     TABLE SCAN        |t1      |1        |92  |
|6 |     TABLE SCAN        |t2      |1        |92  |
|7 |    TABLE SCAN         |t3      |1        |92  |
====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b, t3.a, t3.b)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b, t3.a, t3.b)]), filter(nil), rowset=256, dop=1
  2 - output([t2.a], [t3.a], [t1.a], [t1.b], [t2.b], [t3.b]), filter(nil), rowset=256
  3 - output([t2.a], [t3.a], [t1.a], [t1.b], [t2.b], [t3.b]), filter(nil), rowset=256, 
      equal_conds([t2.a = t3.a]), other_conds(nil)
  4 - output([t2.a], [t1.a], [t1.b], [t2.b]), filter(nil), rowset=256, 
      equal_conds([t1.a = t2.a]), other_conds(nil)
  5 - output([t1.a], [t1.b]), filter(nil), rowset=256, 
      access([t1.a], [t1.b]), partitions(p[0-1])
  6 - output([t2.a], [t2.b]), filter(nil), rowset=256, 
      access([t2.a], [t2.b]), partitions(p[0-1])
  7 - output([t3.a], [t3.b]), filter(nil), rowset=256, 
      access([t3.a], [t3.b]), partitions(p[0-1])

explain select/*+leading(t1,t2,t3)*/ * from t1 inner join t2 on t1.a = t2.a full join t3 on t1.a = t3.a;
Query Plan
====================================================
|ID|OPERATOR               |NAME    |EST. ROWS|COST|
----------------------------------------------------
|0 |PX COORDINATOR         |        |1        |279 |
|1 | EXCHANGE OUT DISTR    |:EX10000|1        |278 |
|2 |  PX PARTITION ITERATOR|        |1        |275 |
|3 |   HASH FULL OUTER JOIN|        |1        |275 |
|4 |    HASH JOIN          |        |1        |184 |
|5 |     TABLE SCAN        |t1      |1        |92  |
|6 |     TABLE SCAN        |t2      |1        |92  |
|7 |    TABLE SCAN         |t3      |1        |92  |
====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b, t3.a, t3.b)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b, t3.a, t3.b)]), filter(nil), rowset=256, dop=1
  2 - output([t1.a], [t3.a], [t2.a], [t1.b], [t2.b], [t3.b]), filter(nil), rowset=256
  3 - output([t1.a], [t3.a], [t2.a], [t1.b], [t2.b], [t3.b]), filter(nil), rowset=256, 
      equal_conds([t1.a = t3.a]), other_conds(nil)
  4 - output([t1.a], [t2.a], [t1.b], [t2.b]), filter(nil), rowset=256, 
      equal_conds([t1.a = t2.a]), other_conds(nil)
  5 - output([t1.a], [t1.b]), filter(nil), rowset=256, 
      access([t1.a], [t1.b]), partitions(p[0-1])
  6 - output([t2.a], [t2.b]), filter(nil), rowset=256, 
      access([t2.a], [t2.b]), partitions(p[0-1])
  7 - output([t3.a], [t3.b]), filter(nil), rowset=256, 
      access([t3.a], [t3.b]), partitions(p[0-1])

explain select/*+leading(t1,t2,t3)*/ * from t1 inner join t2 on t1.a = t2.a full join t3 on t2.a = t3.a;
Query Plan
====================================================
|ID|OPERATOR               |NAME    |EST. ROWS|COST|
----------------------------------------------------
|0 |PX COORDINATOR         |        |1        |279 |
|1 | EXCHANGE OUT DISTR    |:EX10000|1        |278 |
|2 |  PX PARTITION ITERATOR|        |1        |275 |
|3 |   HASH FULL OUTER JOIN|        |1        |275 |
|4 |    HASH JOIN          |        |1        |184 |
|5 |     TABLE SCAN        |t1      |1        |92  |
|6 |     TABLE SCAN        |t2      |1        |92  |
|7 |    TABLE SCAN         |t3      |1        |92  |
====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b, t3.a, t3.b)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b, t3.a, t3.b)]), filter(nil), rowset=256, dop=1
  2 - output([t2.a], [t3.a], [t1.a], [t1.b], [t2.b], [t3.b]), filter(nil), rowset=256
  3 - output([t2.a], [t3.a], [t1.a], [t1.b], [t2.b], [t3.b]), filter(nil), rowset=256, 
      equal_conds([t2.a = t3.a]), other_conds(nil)
  4 - output([t2.a], [t1.a], [t1.b], [t2.b]), filter(nil), rowset=256, 
      equal_conds([t1.a = t2.a]), other_conds(nil)
  5 - output([t1.a], [t1.b]), filter(nil), rowset=256, 
      access([t1.a], [t1.b]), partitions(p[0-1])
  6 - output([t2.a], [t2.b]), filter(nil), rowset=256, 
      access([t2.a], [t2.b]), partitions(p[0-1])
  7 - output([t3.a], [t3.b]), filter(nil), rowset=256, 
      access([t3.a], [t3.b]), partitions(p[0-1])

explain select/*+leading(t1,t2,t3)*/ * from t1 left join t2 on t1.a = t2.a inner join t3 on t1.a = t3.a;
Query Plan
====================================================
|ID|OPERATOR               |NAME    |EST. ROWS|COST|
----------------------------------------------------
|0 |PX COORDINATOR         |        |1        |279 |
|1 | EXCHANGE OUT DISTR    |:EX10000|1        |278 |
|2 |  PX PARTITION ITERATOR|        |1        |275 |
|3 |   HASH JOIN           |        |1        |275 |
|4 |    HASH OUTER JOIN    |        |1        |184 |
|5 |     TABLE SCAN        |t1      |1        |92  |
|6 |     TABLE SCAN        |t2      |1        |92  |
|7 |    TABLE SCAN         |t3      |1        |92  |
====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b, t3.a, t3.b)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b, t3.a, t3.b)]), filter(nil), rowset=256, dop=1
  2 - output([t1.a], [t3.a], [t2.a], [t1.b], [t2.b], [t3.b]), filter(nil), rowset=256
  3 - output([t1.a], [t3.a], [t2.a], [t1.b], [t2.b], [t3.b]), filter(nil), rowset=256, 
      equal_conds([t1.a = t3.a]), other_conds(nil)
  4 - output([t1.a], [t2.a], [t1.b], [t2.b]), filter(nil), rowset=256, 
      equal_conds([t1.a = t2.a]), other_conds(nil)
  5 - output([t1.a], [t1.b]), filter(nil), rowset=256, 
      access([t1.a], [t1.b]), partitions(p[0-1])
  6 - output([t2.a], [t2.b]), filter(nil), rowset=256, 
      access([t2.a], [t2.b]), partitions(p[0-1])
  7 - output([t3.a], [t3.b]), filter(nil), rowset=256, 
      access([t3.a], [t3.b]), partitions(p[0-1])

explain select/*+leading(t1,t2,t3)*/ * from t1 left join t2 on t1.a = t2.a inner join t3 on t2.a = t3.a;
Query Plan
====================================================
|ID|OPERATOR               |NAME    |EST. ROWS|COST|
----------------------------------------------------
|0 |PX COORDINATOR         |        |1        |279 |
|1 | EXCHANGE OUT DISTR    |:EX10000|1        |278 |
|2 |  PX PARTITION ITERATOR|        |1        |275 |
|3 |   HASH JOIN           |        |1        |275 |
|4 |    HASH JOIN          |        |1        |184 |
|5 |     TABLE SCAN        |t1      |1        |92  |
|6 |     TABLE SCAN        |t2      |1        |92  |
|7 |    TABLE SCAN         |t3      |1        |92  |
====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b, t3.a, t3.b)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b, t3.a, t3.b)]), filter(nil), rowset=256, dop=1
  2 - output([t2.a], [t3.a], [t1.a], [t1.b], [t2.b], [t3.b]), filter(nil), rowset=256
  3 - output([t2.a], [t3.a], [t1.a], [t1.b], [t2.b], [t3.b]), filter(nil), rowset=256, 
      equal_conds([t2.a = t3.a]), other_conds(nil)
  4 - output([t2.a], [t1.a], [t1.b], [t2.b]), filter(nil), rowset=256, 
      equal_conds([t1.a = t2.a]), other_conds(nil)
  5 - output([t1.a], [t1.b]), filter(nil), rowset=256, 
      access([t1.a], [t1.b]), partitions(p[0-1])
  6 - output([t2.a], [t2.b]), filter(nil), rowset=256, 
      access([t2.a], [t2.b]), partitions(p[0-1])
  7 - output([t3.a], [t3.b]), filter(nil), rowset=256, 
      access([t3.a], [t3.b]), partitions(p[0-1])

explain select/*+leading(t1,t2,t3)*/ * from t1 full join t2 on t1.a = t2.a inner join t3 on t1.a = t3.a;
Query Plan
====================================================
|ID|OPERATOR               |NAME    |EST. ROWS|COST|
----------------------------------------------------
|0 |PX COORDINATOR         |        |1        |279 |
|1 | EXCHANGE OUT DISTR    |:EX10000|1        |278 |
|2 |  PX PARTITION ITERATOR|        |1        |275 |
|3 |   HASH JOIN           |        |1        |275 |
|4 |    HASH OUTER JOIN    |        |1        |184 |
|5 |     TABLE SCAN        |t1      |1        |92  |
|6 |     TABLE SCAN        |t2      |1        |92  |
|7 |    TABLE SCAN         |t3      |1        |92  |
====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b, t3.a, t3.b)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b, t3.a, t3.b)]), filter(nil), rowset=256, dop=1
  2 - output([t1.a], [t3.a], [t2.a], [t1.b], [t2.b], [t3.b]), filter(nil), rowset=256
  3 - output([t1.a], [t3.a], [t2.a], [t1.b], [t2.b], [t3.b]), filter(nil), rowset=256, 
      equal_conds([t1.a = t3.a]), other_conds(nil)
  4 - output([t1.a], [t2.a], [t1.b], [t2.b]), filter(nil), rowset=256, 
      equal_conds([t1.a = t2.a]), other_conds(nil)
  5 - output([t1.a], [t1.b]), filter(nil), rowset=256, 
      access([t1.a], [t1.b]), partitions(p[0-1])
  6 - output([t2.a], [t2.b]), filter(nil), rowset=256, 
      access([t2.a], [t2.b]), partitions(p[0-1])
  7 - output([t3.a], [t3.b]), filter(nil), rowset=256, 
      access([t3.a], [t3.b]), partitions(p[0-1])

explain select/*+leading(t1,t2,t3)*/ * from t1 full join t2 on t1.a = t2.a inner join t3 on t2.a = t3.a;
Query Plan
======================================================
|ID|OPERATOR                 |NAME    |EST. ROWS|COST|
------------------------------------------------------
|0 |PX COORDINATOR           |        |1        |279 |
|1 | EXCHANGE OUT DISTR      |:EX10000|1        |278 |
|2 |  PX PARTITION ITERATOR  |        |1        |275 |
|3 |   HASH JOIN             |        |1        |275 |
|4 |    HASH RIGHT OUTER JOIN|        |1        |184 |
|5 |     TABLE SCAN          |t1      |1        |92  |
|6 |     TABLE SCAN          |t2      |1        |92  |
|7 |    TABLE SCAN           |t3      |1        |92  |
======================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b, t3.a, t3.b)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b, t3.a, t3.b)]), filter(nil), rowset=256, dop=1
  2 - output([t2.a], [t3.a], [t1.a], [t1.b], [t2.b], [t3.b]), filter(nil), rowset=256
  3 - output([t2.a], [t3.a], [t1.a], [t1.b], [t2.b], [t3.b]), filter(nil), rowset=256, 
      equal_conds([t2.a = t3.a]), other_conds(nil)
  4 - output([t2.a], [t1.a], [t1.b], [t2.b]), filter(nil), rowset=256, 
      equal_conds([t1.a = t2.a]), other_conds(nil)
  5 - output([t1.a], [t1.b]), filter(nil), rowset=256, 
      access([t1.a], [t1.b]), partitions(p[0-1])
  6 - output([t2.a], [t2.b]), filter(nil), rowset=256, 
      access([t2.a], [t2.b]), partitions(p[0-1])
  7 - output([t3.a], [t3.b]), filter(nil), rowset=256, 
      access([t3.a], [t3.b]), partitions(p[0-1])

explain select/*+leading(t1,t2,t3)*/ * from t1 full join t2 on t1.a = t2.a left join t3 on t1.a = t3.a;
Query Plan
=====================================================
|ID|OPERATOR                |NAME    |EST. ROWS|COST|
-----------------------------------------------------
|0 |PX COORDINATOR          |        |1        |279 |
|1 | EXCHANGE OUT DISTR     |:EX10000|1        |278 |
|2 |  PX PARTITION ITERATOR |        |1        |275 |
|3 |   HASH OUTER JOIN      |        |1        |275 |
|4 |    HASH FULL OUTER JOIN|        |1        |184 |
|5 |     TABLE SCAN         |t1      |1        |92  |
|6 |     TABLE SCAN         |t2      |1        |92  |
|7 |    TABLE SCAN          |t3      |1        |92  |
=====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b, t3.a, t3.b)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b, t3.a, t3.b)]), filter(nil), rowset=256, dop=1
  2 - output([t1.a], [t3.a], [t2.a], [t1.b], [t2.b], [t3.b]), filter(nil), rowset=256
  3 - output([t1.a], [t3.a], [t2.a], [t1.b], [t2.b], [t3.b]), filter(nil), rowset=256, 
      equal_conds([t1.a = t3.a]), other_conds(nil)
  4 - output([t1.a], [t2.a], [t1.b], [t2.b]), filter(nil), rowset=256, 
      equal_conds([t1.a = t2.a]), other_conds(nil)
  5 - output([t1.a], [t1.b]), filter(nil), rowset=256, 
      access([t1.a], [t1.b]), partitions(p[0-1])
  6 - output([t2.a], [t2.b]), filter(nil), rowset=256, 
      access([t2.a], [t2.b]), partitions(p[0-1])
  7 - output([t3.a], [t3.b]), filter(nil), rowset=256, 
      access([t3.a], [t3.b]), partitions(p[0-1])

explain select/*+leading(t1,t2,t3)*/ * from t1 full join t2 on t1.a = t2.a left join t3 on t2.a = t3.a;
Query Plan
=====================================================
|ID|OPERATOR                |NAME    |EST. ROWS|COST|
-----------------------------------------------------
|0 |PX COORDINATOR          |        |1        |279 |
|1 | EXCHANGE OUT DISTR     |:EX10000|1        |278 |
|2 |  PX PARTITION ITERATOR |        |1        |275 |
|3 |   HASH OUTER JOIN      |        |1        |275 |
|4 |    HASH FULL OUTER JOIN|        |1        |184 |
|5 |     TABLE SCAN         |t1      |1        |92  |
|6 |     TABLE SCAN         |t2      |1        |92  |
|7 |    TABLE SCAN          |t3      |1        |92  |
=====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b, t3.a, t3.b)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b, t3.a, t3.b)]), filter(nil), rowset=256, dop=1
  2 - output([t2.a], [t3.a], [t1.a], [t1.b], [t2.b], [t3.b]), filter(nil), rowset=256
  3 - output([t2.a], [t3.a], [t1.a], [t1.b], [t2.b], [t3.b]), filter(nil), rowset=256, 
      equal_conds([t2.a = t3.a]), other_conds(nil)
  4 - output([t2.a], [t1.a], [t1.b], [t2.b]), filter(nil), rowset=256, 
      equal_conds([t1.a = t2.a]), other_conds(nil)
  5 - output([t1.a], [t1.b]), filter(nil), rowset=256, 
      access([t1.a], [t1.b]), partitions(p[0-1])
  6 - output([t2.a], [t2.b]), filter(nil), rowset=256, 
      access([t2.a], [t2.b]), partitions(p[0-1])
  7 - output([t3.a], [t3.b]), filter(nil), rowset=256, 
      access([t3.a], [t3.b]), partitions(p[0-1])

explain select * from t1 where t1.a in (select t2.a from t2);
Query Plan
====================================================
|ID|OPERATOR               |NAME    |EST. ROWS|COST|
----------------------------------------------------
|0 |PX COORDINATOR         |        |1        |185 |
|1 | EXCHANGE OUT DISTR    |:EX10000|1        |185 |
|2 |  PX PARTITION ITERATOR|        |1        |184 |
|3 |   HASH RIGHT SEMI JOIN|        |1        |184 |
|4 |    TABLE SCAN         |t2      |1        |92  |
|5 |    TABLE SCAN         |t1      |1        |92  |
====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b)]), filter(nil), rowset=256, dop=1
  2 - output([t1.a], [t1.b]), filter(nil), rowset=256
  3 - output([t1.a], [t1.b]), filter(nil), rowset=256, 
      equal_conds([t1.a = t2.a]), other_conds(nil)
  4 - output([t2.a]), filter(nil), rowset=256, 
      access([t2.a]), partitions(p[0-1])
  5 - output([t1.a], [t1.b]), filter(nil), rowset=256, 
      access([t1.a], [t1.b]), partitions(p[0-1])

explain select * from t1 where t1.a in (select t2.a from t2) and t1.a in (select t3.a from t3);
Query Plan
=====================================================
|ID|OPERATOR                |NAME    |EST. ROWS|COST|
-----------------------------------------------------
|0 |PX COORDINATOR          |        |1        |277 |
|1 | EXCHANGE OUT DISTR     |:EX10000|1        |276 |
|2 |  PX PARTITION ITERATOR |        |1        |275 |
|3 |   HASH RIGHT SEMI JOIN |        |1        |275 |
|4 |    TABLE SCAN          |t3      |1        |92  |
|5 |    HASH RIGHT SEMI JOIN|        |1        |184 |
|6 |     TABLE SCAN         |t2      |1        |92  |
|7 |     TABLE SCAN         |t1      |1        |92  |
=====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b)]), filter(nil), rowset=256, dop=1
  2 - output([t1.a], [t1.b]), filter(nil), rowset=256
  3 - output([t1.a], [t1.b]), filter(nil), rowset=256, 
      equal_conds([t1.a = t3.a]), other_conds(nil)
  4 - output([t3.a]), filter(nil), rowset=256, 
      access([t3.a]), partitions(p[0-1])
  5 - output([t1.a], [t1.b]), filter(nil), rowset=256, 
      equal_conds([t1.a = t2.a]), other_conds(nil)
  6 - output([t2.a]), filter(nil), rowset=256, 
      access([t2.a]), partitions(p[0-1])
  7 - output([t1.a], [t1.b]), filter(nil), rowset=256, 
      access([t1.a], [t1.b]), partitions(p[0-1])

explain select * from t1 where t1.a in (select t2.a from t2 where t2.a in (select t3.a from t3));
Query Plan
====================================================
|ID|OPERATOR               |NAME    |EST. ROWS|COST|
----------------------------------------------------
|0 |PX COORDINATOR         |        |1        |277 |
|1 | EXCHANGE OUT DISTR    |:EX10000|1        |276 |
|2 |  PX PARTITION ITERATOR|        |1        |275 |
|3 |   HASH RIGHT SEMI JOIN|        |1        |275 |
|4 |    SUBPLAN SCAN       |VIEW2   |1        |184 |
|5 |     HASH SEMI JOIN    |        |1        |184 |
|6 |      TABLE SCAN       |t2      |1        |92  |
|7 |      TABLE SCAN       |t3      |1        |92  |
|8 |    TABLE SCAN         |t1      |1        |92  |
====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b)]), filter(nil), rowset=256, dop=1
  2 - output([t1.a], [t1.b]), filter(nil), rowset=256
  3 - output([t1.a], [t1.b]), filter(nil), rowset=256, 
      equal_conds([t1.a = VIEW2.a]), other_conds(nil)
  4 - output([VIEW2.a]), filter(nil), rowset=256, 
      access([VIEW2.a])
  5 - output([t2.a]), filter(nil), rowset=256, 
      equal_conds([t2.a = t3.a]), other_conds(nil)
  6 - output([t2.a]), filter(nil), rowset=256, 
      access([t2.a]), partitions(p[0-1])
  7 - output([t3.a]), filter(nil), rowset=256, 
      access([t3.a]), partitions(p[0-1])
  8 - output([t1.a], [t1.b]), filter(nil), rowset=256, 
      access([t1.a], [t1.b]), partitions(p[0-1])

drop table if exists t1, t2, t3;
create table t1(a int, b datetime, primary key(a, b)) partition by hash(a) 
subpartition by range columns(b) 
subpartition template (
subpartition p0 values less than ('2016-10-10'),  
subpartition p1 values less than ('2116-3-30')) partitions 2;
create table t2(a int, b datetime, primary key(a, b)) partition by hash(a) 
subpartition by range columns(b) 
subpartition template (
subpartition p0 values less than ('2016-10-10'),  
subpartition p1 values less than ('2116-3-30')) partitions 2;
create table t3(a int, b datetime, primary key(a, b)) partition by hash(a) 
subpartition by range columns(b) 
subpartition template (
subpartition p0 values less than ('2016-10-10'),  
subpartition p1 values less than ('2116-3-30')) partitions 2;
explain select/*+leading(t1,t2,t3)*/ * from t1, t2 where t1.a = t2.a and t1.b = t2.b;
Query Plan
====================================================
|ID|OPERATOR               |NAME    |EST. ROWS|COST|
----------------------------------------------------
|0 |PX COORDINATOR         |        |1        |192 |
|1 | EXCHANGE OUT DISTR    |:EX10000|1        |192 |
|2 |  PX PARTITION ITERATOR|        |1        |190 |
|3 |   NESTED-LOOP JOIN    |        |1        |190 |
|4 |    TABLE SCAN         |t1      |1        |183 |
|5 |    TABLE GET          |t2      |1        |26  |
====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b)]), filter(nil), rowset=256, dop=1
  2 - output([t1.a], [t1.b], [t2.a], [t2.b]), filter(nil), rowset=256
  3 - output([t1.a], [t1.b], [t2.a], [t2.b]), filter(nil), rowset=256,
      conds(nil), nl_params_([t1.a], [t1.b])
  4 - output([t1.a], [t1.b]), filter(nil), rowset=256, 
      access([t1.a], [t1.b]), partitions(p0sp[0-1], p1sp[0-1])
  5 - output([t2.a], [t2.b]), filter(nil), rowset=256, 
      access([GROUP_ID], [t2.a], [t2.b]), partitions(p0sp[0-1], p1sp[0-1])

explain select/*+leading(t1,t2,t3)*/ * from t1, t2, t3 where t1.a = t2.a and t1.b = t2.b and t2.a = t3.a and t2.b = t3.b;
Query Plan
====================================================
|ID|OPERATOR               |NAME    |EST. ROWS|COST|
----------------------------------------------------
|0 |PX COORDINATOR         |        |1        |201 |
|1 | EXCHANGE OUT DISTR    |:EX10000|1        |200 |
|2 |  PX PARTITION ITERATOR|        |1        |198 |
|3 |   NESTED-LOOP JOIN    |        |1        |198 |
|4 |    NESTED-LOOP JOIN   |        |1        |190 |
|5 |     TABLE SCAN        |t1      |1        |183 |
|6 |     TABLE GET         |t2      |1        |26  |
|7 |    TABLE GET          |t3      |1        |26  |
====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b, t3.a, t3.b)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b, t3.a, t3.b)]), filter(nil), rowset=256, dop=1
  2 - output([t2.a], [t2.b], [t1.a], [t1.b], [t3.a], [t3.b]), filter(nil), rowset=256
  3 - output([t2.a], [t2.b], [t1.a], [t1.b], [t3.a], [t3.b]), filter(nil), rowset=256,
      conds(nil), nl_params_([t2.a], [t2.b])
  4 - output([t2.a], [t2.b], [t1.a], [t1.b]), filter(nil), rowset=256, 
      conds(nil), nl_params_([t1.a], [t1.b])
  5 - output([t1.a], [t1.b]), filter(nil), rowset=256, 
      access([t1.a], [t1.b]), partitions(p0sp[0-1], p1sp[0-1])
  6 - output([t2.a], [t2.b]), filter(nil), rowset=256, 
      access([GROUP_ID], [t2.a], [t2.b]), partitions(p0sp[0-1], p1sp[0-1])
  7 - output([t3.a], [t3.b]), filter(nil), rowset=256, 
      access([GROUP_ID], [t3.a], [t3.b]), partitions(p0sp[0-1], p1sp[0-1])

explain select/*+leading(t1,t2,t3)*/ * from t1, t2, t3 where t1.a = t2.a and t1.b = t2.b and t1.a = t3.a and t1.b = t3.b;
Query Plan
====================================================
|ID|OPERATOR               |NAME    |EST. ROWS|COST|
----------------------------------------------------
|0 |PX COORDINATOR         |        |1        |201 |
|1 | EXCHANGE OUT DISTR    |:EX10000|1        |200 |
|2 |  PX PARTITION ITERATOR|        |1        |198 |
|3 |   NESTED-LOOP JOIN    |        |1        |198 |
|4 |    NESTED-LOOP JOIN   |        |1        |190 |
|5 |     TABLE SCAN        |t1      |1        |183 |
|6 |     TABLE GET         |t2      |1        |26  |
|7 |    TABLE GET          |t3      |1        |26  |
====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b, t3.a, t3.b)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b, t3.a, t3.b)]), filter(nil), rowset=256, dop=1
  2 - output([t1.a], [t1.b], [t2.a], [t2.b], [t3.a], [t3.b]), filter(nil), rowset=256
  3 - output([t1.a], [t1.b], [t2.a], [t2.b], [t3.a], [t3.b]), filter(nil), rowset=256,
      conds(nil), nl_params_([t1.a], [t1.b])
  4 - output([t1.a], [t1.b], [t2.a], [t2.b]), filter(nil), rowset=256, 
      conds(nil), nl_params_([t1.a], [t1.b])
  5 - output([t1.a], [t1.b]), filter(nil), rowset=256, 
      access([t1.a], [t1.b]), partitions(p0sp[0-1], p1sp[0-1])
  6 - output([t2.a], [t2.b]), filter(nil), rowset=256, 
      access([GROUP_ID], [t2.a], [t2.b]), partitions(p0sp[0-1], p1sp[0-1])
  7 - output([t3.a], [t3.b]), filter(nil), rowset=256, 
      access([GROUP_ID], [t3.a], [t3.b]), partitions(p0sp[0-1], p1sp[0-1])

explain select/*+leading(t1,t2)*/ * from t1 left join t2 on t1.a = t2.a and t1.b = t2.b;
Query Plan
======================================================
|ID|OPERATOR                 |NAME    |EST. ROWS|COST|
------------------------------------------------------
|0 |PX COORDINATOR           |        |1        |192 |
|1 | EXCHANGE OUT DISTR      |:EX10000|1        |192 |
|2 |  PX PARTITION ITERATOR  |        |1        |190 |
|3 |   NESTED-LOOP OUTER JOIN|        |1        |190 |
|4 |    TABLE SCAN           |t1      |1        |183 |
|5 |    TABLE GET            |t2      |1        |26  |
======================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b)]), filter(nil), rowset=256, dop=1
  2 - output([t1.a], [t1.b], [t2.a], [t2.b]), filter(nil), rowset=256
  3 - output([t1.a], [t1.b], [t2.a], [t2.b]), filter(nil), rowset=256,
      conds(nil), nl_params_([t1.a], [t1.b])
  4 - output([t1.a], [t1.b]), filter(nil), rowset=256, 
      access([t1.a], [t1.b]), partitions(p0sp[0-1], p1sp[0-1])
  5 - output([t2.a], [t2.b]), filter(nil), rowset=256, 
      access([GROUP_ID], [t2.a], [t2.b]), partitions(p0sp[0-1], p1sp[0-1])

explain select/*+leading(t1,t2,t3)*/ * from t1 left join t2 on t1.a = t2.a and t1.b = t2.b left join t3 on t1.a = t3.a and t1.b = t3.b;
Query Plan
=======================================================
|ID|OPERATOR                  |NAME    |EST. ROWS|COST|
-------------------------------------------------------
|0 |PX COORDINATOR            |        |1        |201 |
|1 | EXCHANGE OUT DISTR       |:EX10000|1        |200 |
|2 |  PX PARTITION ITERATOR   |        |1        |198 |
|3 |   NESTED-LOOP OUTER JOIN |        |1        |198 |
|4 |    NESTED-LOOP OUTER JOIN|        |1        |190 |
|5 |     TABLE SCAN           |t1      |1        |183 |
|6 |     TABLE GET            |t2      |1        |26  |
|7 |    TABLE GET             |t3      |1        |26  |
=======================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b, t3.a, t3.b)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b, t3.a, t3.b)]), filter(nil), rowset=256, dop=1
  2 - output([t1.a], [t1.b], [t2.a], [t2.b], [t3.a], [t3.b]), filter(nil), rowset=256
  3 - output([t1.a], [t1.b], [t2.a], [t2.b], [t3.a], [t3.b]), filter(nil), rowset=256,
      conds(nil), nl_params_([t1.a], [t1.b])
  4 - output([t1.a], [t1.b], [t2.a], [t2.b]), filter(nil), rowset=256, 
      conds(nil), nl_params_([t1.a], [t1.b])
  5 - output([t1.a], [t1.b]), filter(nil), rowset=256, 
      access([t1.a], [t1.b]), partitions(p0sp[0-1], p1sp[0-1])
  6 - output([t2.a], [t2.b]), filter(nil), rowset=256, 
      access([GROUP_ID], [t2.a], [t2.b]), partitions(p0sp[0-1], p1sp[0-1])
  7 - output([t3.a], [t3.b]), filter(nil), rowset=256, 
      access([GROUP_ID], [t3.a], [t3.b]), partitions(p0sp[0-1], p1sp[0-1])

explain select/*+leading(t1,t2,t3)*/ * from t1 left join t2 on t1.a = t2.a and t1.b = t2.b left join t3 on t2.a = t3.a and t2.b = t3.b;
Query Plan
=======================================================
|ID|OPERATOR                  |NAME    |EST. ROWS|COST|
-------------------------------------------------------
|0 |PX COORDINATOR            |        |1        |201 |
|1 | EXCHANGE OUT DISTR       |:EX10000|1        |200 |
|2 |  PX PARTITION ITERATOR   |        |1        |198 |
|3 |   NESTED-LOOP OUTER JOIN |        |1        |198 |
|4 |    NESTED-LOOP OUTER JOIN|        |1        |190 |
|5 |     TABLE SCAN           |t1      |1        |183 |
|6 |     TABLE GET            |t2      |1        |26  |
|7 |    TABLE GET             |t3      |1        |26  |
=======================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b, t3.a, t3.b)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b, t3.a, t3.b)]), filter(nil), rowset=256, dop=1
  2 - output([t2.a], [t2.b], [t1.a], [t1.b], [t3.a], [t3.b]), filter(nil), rowset=256
  3 - output([t2.a], [t2.b], [t1.a], [t1.b], [t3.a], [t3.b]), filter(nil), rowset=256,
      conds(nil), nl_params_([t2.a], [t2.b])
  4 - output([t2.a], [t2.b], [t1.a], [t1.b]), filter(nil), rowset=256, 
      conds(nil), nl_params_([t1.a], [t1.b])
  5 - output([t1.a], [t1.b]), filter(nil), rowset=256, 
      access([t1.a], [t1.b]), partitions(p0sp[0-1], p1sp[0-1])
  6 - output([t2.a], [t2.b]), filter(nil), rowset=256, 
      access([GROUP_ID], [t2.a], [t2.b]), partitions(p0sp[0-1], p1sp[0-1])
  7 - output([t3.a], [t3.b]), filter(nil), rowset=256, 
      access([GROUP_ID], [t3.a], [t3.b]), partitions(p0sp[0-1], p1sp[0-1])

explain select/*+leading(t1,t2)*/ * from t1 full join t2 on t1.a = t2.a and t1.b = t2.b;
Query Plan
=====================================================
|ID|OPERATOR                |NAME    |EST. ROWS|COST|
-----------------------------------------------------
|0 |PX COORDINATOR          |        |1        |367 |
|1 | EXCHANGE OUT DISTR     |:EX10000|1        |367 |
|2 |  PX PARTITION ITERATOR |        |1        |365 |
|3 |   MERGE FULL OUTER JOIN|        |1        |365 |
|4 |    TABLE SCAN          |t1      |1        |183 |
|5 |    TABLE SCAN          |t2      |1        |183 |
=====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b)]), filter(nil), rowset=256, dop=1
  2 - output([t1.a], [t2.a], [t1.b], [t2.b]), filter(nil), rowset=256
  3 - output([t1.a], [t2.a], [t1.b], [t2.b]), filter(nil), rowset=256, 
      equal_conds([t1.a = t2.a], [t1.b = t2.b]), other_conds(nil)
  4 - output([t1.a], [t1.b]), filter(nil), rowset=256, 
      access([t1.a], [t1.b]), partitions(p0sp[0-1], p1sp[0-1])
  5 - output([t2.a], [t2.b]), filter(nil), rowset=256, 
      access([t2.a], [t2.b]), partitions(p0sp[0-1], p1sp[0-1])

explain select/*+leading(t1,t2,t3)*/ * from t1 full join t2 on t1.a = t2.a and t1.b = t2.b full join t3 on t1.a = t3.a and t1.b = t3.b;
Query Plan
======================================================
|ID|OPERATOR                 |NAME    |EST. ROWS|COST|
------------------------------------------------------
|0 |PX COORDINATOR           |        |1        |551 |
|1 | EXCHANGE OUT DISTR      |:EX10000|1        |550 |
|2 |  PX PARTITION ITERATOR  |        |1        |547 |
|3 |   HASH FULL OUTER JOIN  |        |1        |547 |
|4 |    MERGE FULL OUTER JOIN|        |1        |365 |
|5 |     TABLE SCAN          |t1      |1        |183 |
|6 |     TABLE SCAN          |t2      |1        |183 |
|7 |    TABLE SCAN           |t3      |1        |183 |
======================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b, t3.a, t3.b)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b, t3.a, t3.b)]), filter(nil), rowset=256, dop=1
  2 - output([t1.a], [t3.a], [t1.b], [t3.b], [t2.a], [t2.b]), filter(nil), rowset=256
  3 - output([t1.a], [t3.a], [t1.b], [t3.b], [t2.a], [t2.b]), filter(nil), rowset=256, 
      equal_conds([t1.a = t3.a], [t1.b = t3.b]), other_conds(nil)
  4 - output([t1.a], [t1.b], [t2.a], [t2.b]), filter(nil), rowset=256, 
      equal_conds([t1.a = t2.a], [t1.b = t2.b]), other_conds(nil)
  5 - output([t1.a], [t1.b]), filter(nil), rowset=256, 
      access([t1.a], [t1.b]), partitions(p0sp[0-1], p1sp[0-1])
  6 - output([t2.a], [t2.b]), filter(nil), rowset=256, 
      access([t2.a], [t2.b]), partitions(p0sp[0-1], p1sp[0-1])
  7 - output([t3.a], [t3.b]), filter(nil), rowset=256, 
      access([t3.a], [t3.b]), partitions(p0sp[0-1], p1sp[0-1])

explain select/*+leading(t1,t2,t3)*/ * from t1 full join t2 on t1.a = t2.a and t1.b = t2.b full join t3 on t2.a = t3.a and t2.b = t3.b;
Query Plan
======================================================
|ID|OPERATOR                 |NAME    |EST. ROWS|COST|
------------------------------------------------------
|0 |PX COORDINATOR           |        |1        |551 |
|1 | EXCHANGE OUT DISTR      |:EX10000|1        |550 |
|2 |  PX PARTITION ITERATOR  |        |1        |547 |
|3 |   HASH FULL OUTER JOIN  |        |1        |547 |
|4 |    MERGE FULL OUTER JOIN|        |1        |365 |
|5 |     TABLE SCAN          |t1      |1        |183 |
|6 |     TABLE SCAN          |t2      |1        |183 |
|7 |    TABLE SCAN           |t3      |1        |183 |
======================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b, t3.a, t3.b)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b, t3.a, t3.b)]), filter(nil), rowset=256, dop=1
  2 - output([t2.a], [t3.a], [t2.b], [t3.b], [t1.a], [t1.b]), filter(nil), rowset=256
  3 - output([t2.a], [t3.a], [t2.b], [t3.b], [t1.a], [t1.b]), filter(nil), rowset=256, 
      equal_conds([t2.a = t3.a], [t2.b = t3.b]), other_conds(nil)
  4 - output([t2.a], [t2.b], [t1.a], [t1.b]), filter(nil), rowset=256, 
      equal_conds([t1.a = t2.a], [t1.b = t2.b]), other_conds(nil)
  5 - output([t1.a], [t1.b]), filter(nil), rowset=256, 
      access([t1.a], [t1.b]), partitions(p0sp[0-1], p1sp[0-1])
  6 - output([t2.a], [t2.b]), filter(nil), rowset=256, 
      access([t2.a], [t2.b]), partitions(p0sp[0-1], p1sp[0-1])
  7 - output([t3.a], [t3.b]), filter(nil), rowset=256, 
      access([t3.a], [t3.b]), partitions(p0sp[0-1], p1sp[0-1])

explain select/*+leading(t1,t2,t3)*/ * from t1 inner join t2 on t1.a = t2.a and t1.b = t2.b left join t3 on t1.a = t3.a and t1.b = t3.b;
Query Plan
======================================================
|ID|OPERATOR                 |NAME    |EST. ROWS|COST|
------------------------------------------------------
|0 |PX COORDINATOR           |        |1        |201 |
|1 | EXCHANGE OUT DISTR      |:EX10000|1        |200 |
|2 |  PX PARTITION ITERATOR  |        |1        |198 |
|3 |   NESTED-LOOP OUTER JOIN|        |1        |198 |
|4 |    NESTED-LOOP JOIN     |        |1        |190 |
|5 |     TABLE SCAN          |t1      |1        |183 |
|6 |     TABLE GET           |t2      |1        |26  |
|7 |    TABLE GET            |t3      |1        |26  |
======================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b, t3.a, t3.b)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b, t3.a, t3.b)]), filter(nil), rowset=256, dop=1
  2 - output([t1.a], [t1.b], [t2.a], [t2.b], [t3.a], [t3.b]), filter(nil), rowset=256
  3 - output([t1.a], [t1.b], [t2.a], [t2.b], [t3.a], [t3.b]), filter(nil), rowset=256,
      conds(nil), nl_params_([t1.a], [t1.b])
  4 - output([t1.a], [t1.b], [t2.a], [t2.b]), filter(nil), rowset=256, 
      conds(nil), nl_params_([t1.a], [t1.b])
  5 - output([t1.a], [t1.b]), filter(nil), rowset=256, 
      access([t1.a], [t1.b]), partitions(p0sp[0-1], p1sp[0-1])
  6 - output([t2.a], [t2.b]), filter(nil), rowset=256, 
      access([GROUP_ID], [t2.a], [t2.b]), partitions(p0sp[0-1], p1sp[0-1])
  7 - output([t3.a], [t3.b]), filter(nil), rowset=256, 
      access([GROUP_ID], [t3.a], [t3.b]), partitions(p0sp[0-1], p1sp[0-1])

explain select/*+leading(t1,t2,t3)*/ * from t1 inner join t2 on t1.a = t2.a and t1.b = t2.b left join t3 on t2.a = t3.a and t2.b = t3.b;
Query Plan
======================================================
|ID|OPERATOR                 |NAME    |EST. ROWS|COST|
------------------------------------------------------
|0 |PX COORDINATOR           |        |1        |201 |
|1 | EXCHANGE OUT DISTR      |:EX10000|1        |200 |
|2 |  PX PARTITION ITERATOR  |        |1        |198 |
|3 |   NESTED-LOOP OUTER JOIN|        |1        |198 |
|4 |    NESTED-LOOP JOIN     |        |1        |190 |
|5 |     TABLE SCAN          |t1      |1        |183 |
|6 |     TABLE GET           |t2      |1        |26  |
|7 |    TABLE GET            |t3      |1        |26  |
======================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b, t3.a, t3.b)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b, t3.a, t3.b)]), filter(nil), rowset=256, dop=1
  2 - output([t2.a], [t2.b], [t1.a], [t1.b], [t3.a], [t3.b]), filter(nil), rowset=256
  3 - output([t2.a], [t2.b], [t1.a], [t1.b], [t3.a], [t3.b]), filter(nil), rowset=256,
      conds(nil), nl_params_([t2.a], [t2.b])
  4 - output([t2.a], [t2.b], [t1.a], [t1.b]), filter(nil), rowset=256, 
      conds(nil), nl_params_([t1.a], [t1.b])
  5 - output([t1.a], [t1.b]), filter(nil), rowset=256, 
      access([t1.a], [t1.b]), partitions(p0sp[0-1], p1sp[0-1])
  6 - output([t2.a], [t2.b]), filter(nil), rowset=256, 
      access([GROUP_ID], [t2.a], [t2.b]), partitions(p0sp[0-1], p1sp[0-1])
  7 - output([t3.a], [t3.b]), filter(nil), rowset=256, 
      access([GROUP_ID], [t3.a], [t3.b]), partitions(p0sp[0-1], p1sp[0-1])

explain select/*+leading(t1,t2,t3)*/ * from t1 inner join t2 on t1.a = t2.a and t1.b = t2.b full join t3 on t1.a = t3.a and t1.b = t3.b;
Query Plan
=====================================================
|ID|OPERATOR                |NAME    |EST. ROWS|COST|
-----------------------------------------------------
|0 |PX COORDINATOR          |        |1        |376 |
|1 | EXCHANGE OUT DISTR     |:EX10000|1        |375 |
|2 |  PX PARTITION ITERATOR |        |1        |372 |
|3 |   MERGE FULL OUTER JOIN|        |1        |372 |
|4 |    NESTED-LOOP JOIN    |        |1        |190 |
|5 |     TABLE SCAN         |t1      |1        |183 |
|6 |     TABLE GET          |t2      |1        |26  |
|7 |    TABLE SCAN          |t3      |1        |183 |
=====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b, t3.a, t3.b)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b, t3.a, t3.b)]), filter(nil), rowset=256, dop=1
  2 - output([t1.a], [t3.a], [t1.b], [t3.b], [t2.a], [t2.b]), filter(nil), rowset=256
  3 - output([t1.a], [t3.a], [t1.b], [t3.b], [t2.a], [t2.b]), filter(nil), rowset=256, 
      equal_conds([t1.a = t3.a], [t1.b = t3.b]), other_conds(nil)
  4 - output([t1.a], [t1.b], [t2.a], [t2.b]), filter(nil), rowset=256, 
      conds(nil), nl_params_([t1.a], [t1.b])
  5 - output([t1.a], [t1.b]), filter(nil), rowset=256, 
      access([t1.a], [t1.b]), partitions(p0sp[0-1], p1sp[0-1])
  6 - output([t2.a], [t2.b]), filter(nil), rowset=256, 
      access([GROUP_ID], [t2.a], [t2.b]), partitions(p0sp[0-1], p1sp[0-1])
  7 - output([t3.a], [t3.b]), filter(nil), rowset=256, 
      access([t3.a], [t3.b]), partitions(p0sp[0-1], p1sp[0-1])

explain select/*+leading(t1,t2,t3)*/ * from t1 inner join t2 on t1.a = t2.a and t1.b = t2.b full join t3 on t2.a = t3.a and t2.b = t3.b;
Query Plan
=====================================================
|ID|OPERATOR                |NAME    |EST. ROWS|COST|
-----------------------------------------------------
|0 |PX COORDINATOR          |        |1        |376 |
|1 | EXCHANGE OUT DISTR     |:EX10000|1        |375 |
|2 |  PX PARTITION ITERATOR |        |1        |372 |
|3 |   MERGE FULL OUTER JOIN|        |1        |372 |
|4 |    NESTED-LOOP JOIN    |        |1        |190 |
|5 |     TABLE SCAN         |t1      |1        |183 |
|6 |     TABLE GET          |t2      |1        |26  |
|7 |    TABLE SCAN          |t3      |1        |183 |
=====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b, t3.a, t3.b)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b, t3.a, t3.b)]), filter(nil), rowset=256, dop=1
  2 - output([t2.a], [t3.a], [t2.b], [t3.b], [t1.a], [t1.b]), filter(nil), rowset=256
  3 - output([t2.a], [t3.a], [t2.b], [t3.b], [t1.a], [t1.b]), filter(nil), rowset=256, 
      equal_conds([t2.a = t3.a], [t2.b = t3.b]), other_conds(nil)
  4 - output([t2.a], [t2.b], [t1.a], [t1.b]), filter(nil), rowset=256, 
      conds(nil), nl_params_([t1.a], [t1.b])
  5 - output([t1.a], [t1.b]), filter(nil), rowset=256, 
      access([t1.a], [t1.b]), partitions(p0sp[0-1], p1sp[0-1])
  6 - output([t2.a], [t2.b]), filter(nil), rowset=256, 
      access([GROUP_ID], [t2.a], [t2.b]), partitions(p0sp[0-1], p1sp[0-1])
  7 - output([t3.a], [t3.b]), filter(nil), rowset=256, 
      access([t3.a], [t3.b]), partitions(p0sp[0-1], p1sp[0-1])

explain select/*+leading(t1,t2,t3)*/ * from t1 left join t2 on t1.a = t2.a and t1.b = t2.b inner join t3 on t1.a = t3.a and t1.b = t3.b;
Query Plan
=======================================================
|ID|OPERATOR                  |NAME    |EST. ROWS|COST|
-------------------------------------------------------
|0 |PX COORDINATOR            |        |1        |201 |
|1 | EXCHANGE OUT DISTR       |:EX10000|1        |200 |
|2 |  PX PARTITION ITERATOR   |        |1        |198 |
|3 |   NESTED-LOOP JOIN       |        |1        |198 |
|4 |    NESTED-LOOP OUTER JOIN|        |1        |190 |
|5 |     TABLE SCAN           |t1      |1        |183 |
|6 |     TABLE GET            |t2      |1        |26  |
|7 |    TABLE GET             |t3      |1        |26  |
=======================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b, t3.a, t3.b)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b, t3.a, t3.b)]), filter(nil), rowset=256, dop=1
  2 - output([t1.a], [t1.b], [t2.a], [t2.b], [t3.a], [t3.b]), filter(nil), rowset=256
  3 - output([t1.a], [t1.b], [t2.a], [t2.b], [t3.a], [t3.b]), filter(nil), rowset=256,
      conds(nil), nl_params_([t1.a], [t1.b])
  4 - output([t1.a], [t1.b], [t2.a], [t2.b]), filter(nil), rowset=256, 
      conds(nil), nl_params_([t1.a], [t1.b])
  5 - output([t1.a], [t1.b]), filter(nil), rowset=256, 
      access([t1.a], [t1.b]), partitions(p0sp[0-1], p1sp[0-1])
  6 - output([t2.a], [t2.b]), filter(nil), rowset=256, 
      access([GROUP_ID], [t2.a], [t2.b]), partitions(p0sp[0-1], p1sp[0-1])
  7 - output([t3.a], [t3.b]), filter(nil), rowset=256, 
      access([GROUP_ID], [t3.a], [t3.b]), partitions(p0sp[0-1], p1sp[0-1])

explain select/*+leading(t1,t2,t3)*/ * from t1 left join t2 on t1.a = t2.a and t1.b = t2.b inner join t3 on t2.a = t3.a and t2.b = t3.b;
Query Plan
====================================================
|ID|OPERATOR               |NAME    |EST. ROWS|COST|
----------------------------------------------------
|0 |PX COORDINATOR         |        |1        |201 |
|1 | EXCHANGE OUT DISTR    |:EX10000|1        |200 |
|2 |  PX PARTITION ITERATOR|        |1        |198 |
|3 |   NESTED-LOOP JOIN    |        |1        |198 |
|4 |    NESTED-LOOP JOIN   |        |1        |190 |
|5 |     TABLE SCAN        |t1      |1        |183 |
|6 |     TABLE GET         |t2      |1        |26  |
|7 |    TABLE GET          |t3      |1        |26  |
====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b, t3.a, t3.b)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b, t3.a, t3.b)]), filter(nil), rowset=256, dop=1
  2 - output([t2.a], [t2.b], [t1.a], [t1.b], [t3.a], [t3.b]), filter(nil), rowset=256
  3 - output([t2.a], [t2.b], [t1.a], [t1.b], [t3.a], [t3.b]), filter(nil), rowset=256,
      conds(nil), nl_params_([t2.a], [t2.b])
  4 - output([t2.a], [t2.b], [t1.a], [t1.b]), filter(nil), rowset=256, 
      conds(nil), nl_params_([t1.a], [t1.b])
  5 - output([t1.a], [t1.b]), filter(nil), rowset=256, 
      access([t1.a], [t1.b]), partitions(p0sp[0-1], p1sp[0-1])
  6 - output([t2.a], [t2.b]), filter(nil), rowset=256, 
      access([GROUP_ID], [t2.a], [t2.b]), partitions(p0sp[0-1], p1sp[0-1])
  7 - output([t3.a], [t3.b]), filter(nil), rowset=256, 
      access([GROUP_ID], [t3.a], [t3.b]), partitions(p0sp[0-1], p1sp[0-1])

explain select/*+leading(t1,t2,t3)*/ * from t1 full join t2 on t1.a = t2.a and t1.b = t2.b inner join t3 on t1.a = t3.a and t1.b = t3.b;
Query Plan
=======================================================
|ID|OPERATOR                  |NAME    |EST. ROWS|COST|
-------------------------------------------------------
|0 |PX COORDINATOR            |        |1        |201 |
|1 | EXCHANGE OUT DISTR       |:EX10000|1        |200 |
|2 |  PX PARTITION ITERATOR   |        |1        |198 |
|3 |   NESTED-LOOP JOIN       |        |1        |198 |
|4 |    NESTED-LOOP OUTER JOIN|        |1        |190 |
|5 |     TABLE SCAN           |t1      |1        |183 |
|6 |     TABLE GET            |t2      |1        |26  |
|7 |    TABLE GET             |t3      |1        |26  |
=======================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b, t3.a, t3.b)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b, t3.a, t3.b)]), filter(nil), rowset=256, dop=1
  2 - output([t1.a], [t1.b], [t2.a], [t2.b], [t3.a], [t3.b]), filter(nil), rowset=256
  3 - output([t1.a], [t1.b], [t2.a], [t2.b], [t3.a], [t3.b]), filter(nil), rowset=256,
      conds(nil), nl_params_([t1.a], [t1.b])
  4 - output([t1.a], [t1.b], [t2.a], [t2.b]), filter(nil), rowset=256, 
      conds(nil), nl_params_([t1.a], [t1.b])
  5 - output([t1.a], [t1.b]), filter(nil), rowset=256, 
      access([t1.a], [t1.b]), partitions(p0sp[0-1], p1sp[0-1])
  6 - output([t2.a], [t2.b]), filter(nil), rowset=256, 
      access([GROUP_ID], [t2.a], [t2.b]), partitions(p0sp[0-1], p1sp[0-1])
  7 - output([t3.a], [t3.b]), filter(nil), rowset=256, 
      access([GROUP_ID], [t3.a], [t3.b]), partitions(p0sp[0-1], p1sp[0-1])

explain select/*+leading(t1,t2,t3)*/ * from t1 full join t2 on t1.a = t2.a and t1.b = t2.b inner join t3 on t2.a = t3.a and t2.b = t3.b;
Query Plan
=======================================================
|ID|OPERATOR                  |NAME    |EST. ROWS|COST|
-------------------------------------------------------
|0 |PX COORDINATOR            |        |1        |376 |
|1 | EXCHANGE OUT DISTR       |:EX10000|1        |375 |
|2 |  PX PARTITION ITERATOR   |        |1        |372 |
|3 |   NESTED-LOOP JOIN       |        |1        |372 |
|4 |    MERGE RIGHT OUTER JOIN|        |1        |365 |
|5 |     TABLE SCAN           |t1      |1        |183 |
|6 |     TABLE SCAN           |t2      |1        |183 |
|7 |    TABLE GET             |t3      |1        |26  |
=======================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b, t3.a, t3.b)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b, t3.a, t3.b)]), filter(nil), rowset=256, dop=1
  2 - output([t2.a], [t2.b], [t1.a], [t1.b], [t3.a], [t3.b]), filter(nil), rowset=256
  3 - output([t2.a], [t2.b], [t1.a], [t1.b], [t3.a], [t3.b]), filter(nil), rowset=256,
      conds(nil), nl_params_([t2.a], [t2.b])
  4 - output([t2.a], [t2.b], [t1.a], [t1.b]), filter(nil), rowset=256, 
      equal_conds([t1.a = t2.a], [t1.b = t2.b]), other_conds(nil)
  5 - output([t1.a], [t1.b]), filter(nil), rowset=256, 
      access([t1.a], [t1.b]), partitions(p0sp[0-1], p1sp[0-1])
  6 - output([t2.a], [t2.b]), filter(nil), rowset=256, 
      access([t2.a], [t2.b]), partitions(p0sp[0-1], p1sp[0-1])
  7 - output([t3.a], [t3.b]), filter(nil), rowset=256, 
      access([GROUP_ID], [t3.a], [t3.b]), partitions(p0sp[0-1], p1sp[0-1])

explain select/*+leading(t1,t2,t3)*/ * from t1 full join t2 on t1.a = t2.a and t1.b = t2.b left join t3 on t1.a = t3.a and t1.b = t3.b;
Query Plan
======================================================
|ID|OPERATOR                 |NAME    |EST. ROWS|COST|
------------------------------------------------------
|0 |PX COORDINATOR           |        |1        |376 |
|1 | EXCHANGE OUT DISTR      |:EX10000|1        |375 |
|2 |  PX PARTITION ITERATOR  |        |1        |372 |
|3 |   NESTED-LOOP OUTER JOIN|        |1        |372 |
|4 |    MERGE FULL OUTER JOIN|        |1        |365 |
|5 |     TABLE SCAN          |t1      |1        |183 |
|6 |     TABLE SCAN          |t2      |1        |183 |
|7 |    TABLE GET            |t3      |1        |26  |
======================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b, t3.a, t3.b)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b, t3.a, t3.b)]), filter(nil), rowset=256, dop=1
  2 - output([t1.a], [t1.b], [t2.a], [t2.b], [t3.a], [t3.b]), filter(nil), rowset=256
  3 - output([t1.a], [t1.b], [t2.a], [t2.b], [t3.a], [t3.b]), filter(nil), rowset=256,
      conds(nil), nl_params_([t1.a], [t1.b])
  4 - output([t1.a], [t1.b], [t2.a], [t2.b]), filter(nil), rowset=256, 
      equal_conds([t1.a = t2.a], [t1.b = t2.b]), other_conds(nil)
  5 - output([t1.a], [t1.b]), filter(nil), rowset=256, 
      access([t1.a], [t1.b]), partitions(p0sp[0-1], p1sp[0-1])
  6 - output([t2.a], [t2.b]), filter(nil), rowset=256, 
      access([t2.a], [t2.b]), partitions(p0sp[0-1], p1sp[0-1])
  7 - output([t3.a], [t3.b]), filter(nil), rowset=256, 
      access([GROUP_ID], [t3.a], [t3.b]), partitions(p0sp[0-1], p1sp[0-1])

explain select/*+leading(t1,t2,t3)*/ * from t1 full join t2 on t1.a = t2.a and t1.b = t2.b left join t3 on t2.a = t3.a and t2.b = t3.b;
Query Plan
======================================================
|ID|OPERATOR                 |NAME    |EST. ROWS|COST|
------------------------------------------------------
|0 |PX COORDINATOR           |        |1        |376 |
|1 | EXCHANGE OUT DISTR      |:EX10000|1        |375 |
|2 |  PX PARTITION ITERATOR  |        |1        |372 |
|3 |   NESTED-LOOP OUTER JOIN|        |1        |372 |
|4 |    MERGE FULL OUTER JOIN|        |1        |365 |
|5 |     TABLE SCAN          |t1      |1        |183 |
|6 |     TABLE SCAN          |t2      |1        |183 |
|7 |    TABLE GET            |t3      |1        |26  |
======================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b, t3.a, t3.b)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b, t3.a, t3.b)]), filter(nil), rowset=256, dop=1
  2 - output([t2.a], [t2.b], [t1.a], [t1.b], [t3.a], [t3.b]), filter(nil), rowset=256
  3 - output([t2.a], [t2.b], [t1.a], [t1.b], [t3.a], [t3.b]), filter(nil), rowset=256,
      conds(nil), nl_params_([t2.a], [t2.b])
  4 - output([t2.a], [t2.b], [t1.a], [t1.b]), filter(nil), rowset=256, 
      equal_conds([t1.a = t2.a], [t1.b = t2.b]), other_conds(nil)
  5 - output([t1.a], [t1.b]), filter(nil), rowset=256, 
      access([t1.a], [t1.b]), partitions(p0sp[0-1], p1sp[0-1])
  6 - output([t2.a], [t2.b]), filter(nil), rowset=256, 
      access([t2.a], [t2.b]), partitions(p0sp[0-1], p1sp[0-1])
  7 - output([t3.a], [t3.b]), filter(nil), rowset=256, 
      access([GROUP_ID], [t3.a], [t3.b]), partitions(p0sp[0-1], p1sp[0-1])

explain select * from t1 where (t1.a, t1.b) in (select t2.a, t2.b from t2);
Query Plan
====================================================
|ID|OPERATOR               |NAME    |EST. ROWS|COST|
----------------------------------------------------
|0 |PX COORDINATOR         |        |1        |191 |
|1 | EXCHANGE OUT DISTR    |:EX10000|1        |191 |
|2 |  PX PARTITION ITERATOR|        |1        |190 |
|3 |   NESTED-LOOP JOIN    |        |1        |190 |
|4 |    TABLE SCAN         |t1      |1        |183 |
|5 |    TABLE GET          |t2      |1        |26  |
====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b)]), filter(nil), rowset=256, dop=1
  2 - output([t1.a], [t1.b]), filter(nil), rowset=256
  3 - output([t1.a], [t1.b]), filter(nil), rowset=256, 
      conds(nil), nl_params_([t1.a], [t1.b])
  4 - output([t1.a], [t1.b]), filter(nil), rowset=256, 
      access([t1.a], [t1.b]), partitions(p0sp[0-1], p1sp[0-1])
  5 - output(nil), filter(nil), rowset=256,
      access([GROUP_ID]), partitions(p0sp[0-1], p1sp[0-1])

explain select * from t1 where (t1.a, t1.b) in (select t2.a, t2.b from t2) and (t1.a, t1.b) in (select t3.a, t3.b from t3);
Query Plan
====================================================
|ID|OPERATOR               |NAME    |EST. ROWS|COST|
----------------------------------------------------
|0 |PX COORDINATOR         |        |1        |199 |
|1 | EXCHANGE OUT DISTR    |:EX10000|1        |198 |
|2 |  PX PARTITION ITERATOR|        |1        |198 |
|3 |   NESTED-LOOP JOIN    |        |1        |198 |
|4 |    NESTED-LOOP JOIN   |        |1        |190 |
|5 |     TABLE SCAN        |t1      |1        |183 |
|6 |     TABLE GET         |t2      |1        |26  |
|7 |    TABLE GET          |t3      |1        |26  |
====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b)]), filter(nil), rowset=256, dop=1
  2 - output([t1.a], [t1.b]), filter(nil), rowset=256
  3 - output([t1.a], [t1.b]), filter(nil), rowset=256, 
      conds(nil), nl_params_([t1.a], [t1.b])
  4 - output([t1.a], [t1.b]), filter(nil), rowset=256,
      conds(nil), nl_params_([t1.a], [t1.b])
  5 - output([t1.a], [t1.b]), filter(nil), rowset=256, 
      access([t1.a], [t1.b]), partitions(p0sp[0-1], p1sp[0-1])
  6 - output(nil), filter(nil), rowset=256,
      access([GROUP_ID]), partitions(p0sp[0-1], p1sp[0-1])
  7 - output(nil), filter(nil), rowset=256,
      access([GROUP_ID]), partitions(p0sp[0-1], p1sp[0-1])

explain select * from t1 where (t1.a, t1.b) in (select t2.a, t2.b from t2 where (t2.a, t2.b) in (select t3.a, t3.b from t3));
Query Plan
====================================================
|ID|OPERATOR               |NAME    |EST. ROWS|COST|
----------------------------------------------------
|0 |PX COORDINATOR         |        |1        |199 |
|1 | EXCHANGE OUT DISTR    |:EX10000|1        |198 |
|2 |  PX PARTITION ITERATOR|        |1        |198 |
|3 |   NESTED-LOOP JOIN    |        |1        |198 |
|4 |    NESTED-LOOP JOIN   |        |1        |190 |
|5 |     TABLE SCAN        |t1      |1        |183 |
|6 |     TABLE GET         |t2      |1        |26  |
|7 |    TABLE GET          |t3      |1        |26  |
====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b)]), filter(nil), rowset=256, dop=1
  2 - output([t1.a], [t1.b]), filter(nil), rowset=256
  3 - output([t1.a], [t1.b]), filter(nil), rowset=256, 
      conds(nil), nl_params_([t2.a], [t2.b])
  4 - output([t2.a], [t2.b], [t1.a], [t1.b]), filter(nil), rowset=256,
      conds(nil), nl_params_([t1.a], [t1.b])
  5 - output([t1.a], [t1.b]), filter(nil), rowset=256,
      access([t1.a], [t1.b]), partitions(p0sp[0-1], p1sp[0-1])
  6 - output([t2.a], [t2.b]), filter(nil), rowset=256,
      access([GROUP_ID], [t2.a], [t2.b]), partitions(p0sp[0-1], p1sp[0-1])
  7 - output(nil), filter(nil), rowset=256,
      access([GROUP_ID]), partitions(p0sp[0-1], p1sp[0-1])

drop table if exists t1, t2, t3;
create table t1(a int, b int, c int, d int, primary key(a, b, c)) 
partition by range columns(a) subpartition by hash(b) subpartitions 5 ( 
partition p0 values less than (1),
partition p1 values less than (2),
partition p2 values less than (3),
partition p3 values less than (4),
partition p4 values less than (maxvalue)
);
create table t2(a int, b int, c int, d int, primary key(a, b, c))
partition by range columns(a) subpartition by hash(b) subpartitions 5 ( 
partition p0 values less than (1),
partition p1 values less than (2),
partition p2 values less than (3),
partition p3 values less than (4),
partition p4 values less than (maxvalue)
);
create table t3(a int, b int, c int, d int, primary key(a, b, c))
partition by range columns(a) subpartition by hash(b) subpartitions 5 ( 
partition p0 values less than (1),
partition p1 values less than (2),
partition p2 values less than (3),
partition p3 values less than (4),
partition p4 values less than (maxvalue)
);
explain select/*+leading(t1,t2,t3)*/ * from t1, t2 where t1.a = t2.a and t1.b = t2.b;
Query Plan
====================================================
|ID|OPERATOR               |NAME    |EST. ROWS|COST|
----------------------------------------------------
|0 |PX COORDINATOR         |        |1        |1146|
|1 | EXCHANGE OUT DISTR    |:EX10000|1        |1145|
|2 |  PX PARTITION ITERATOR|        |1        |1142|
|3 |   NESTED-LOOP JOIN    |        |1        |1142|
|4 |    TABLE SCAN         |t1      |1        |1135|
|5 |    TABLE SCAN         |t2      |1        |156 |
====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t1.d, t2.a, t2.b, t2.c, t2.d)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t1.d, t2.a, t2.b, t2.c, t2.d)]), filter(nil), rowset=256, dop=1
  2 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c], [t2.d]), filter(nil), rowset=256
  3 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c], [t2.d]), filter(nil), rowset=256, 
      conds(nil), nl_params_([t1.a], [t1.b])
  4 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0sp[0-4], p1sp[0-4], p2sp[0-4], p3sp[0-4], p4sp[0-4])
  5 - output([t2.a], [t2.b], [t2.c], [t2.d]), filter(nil), rowset=256, 
      access([GROUP_ID], [t2.a], [t2.b], [t2.c], [t2.d]), partitions(p0sp[0-4], p1sp[0-4], p2sp[0-4], p3sp[0-4], p4sp[0-4])

explain select/*+leading(t1,t2,t3)*/ * from t1, t2, t3 where t1.a = t2.a and t1.b = t2.b and t2.a = t3.a and t2.b = t3.b;
Query Plan
====================================================
|ID|OPERATOR               |NAME    |EST. ROWS|COST|
----------------------------------------------------
|0 |PX COORDINATOR         |        |1        |1156|
|1 | EXCHANGE OUT DISTR    |:EX10000|1        |1154|
|2 |  PX PARTITION ITERATOR|        |1        |1150|
|3 |   NESTED-LOOP JOIN    |        |1        |1150|
|4 |    NESTED-LOOP JOIN   |        |1        |1142|
|5 |     TABLE SCAN        |t1      |1        |1135|
|6 |     TABLE SCAN        |t2      |1        |156 |
|7 |    TABLE SCAN         |t3      |1        |156 |
====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t1.d, t2.a, t2.b, t2.c, t2.d, t3.a, t3.b, t3.c, t3.d)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t1.d, t2.a, t2.b, t2.c, t2.d, t3.a, t3.b, t3.c, t3.d)]), filter(nil), rowset=256, dop=1
  2 - output([t2.a], [t2.b], [t1.a], [t1.b], [t1.c], [t1.d], [t2.c], [t2.d], [t3.a], [t3.b], [t3.c], [t3.d]), filter(nil), rowset=256
  3 - output([t2.a], [t2.b], [t1.a], [t1.b], [t1.c], [t1.d], [t2.c], [t2.d], [t3.a], [t3.b], [t3.c], [t3.d]), filter(nil), rowset=256, 
      conds(nil), nl_params_([t2.a], [t2.b])
  4 - output([t2.a], [t2.b], [t1.a], [t1.b], [t1.c], [t1.d], [t2.c], [t2.d]), filter(nil), rowset=256, 
      conds(nil), nl_params_([t1.a], [t1.b])
  5 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0sp[0-4], p1sp[0-4], p2sp[0-4], p3sp[0-4], p4sp[0-4])
  6 - output([t2.a], [t2.b], [t2.c], [t2.d]), filter(nil), rowset=256, 
      access([GROUP_ID], [t2.a], [t2.b], [t2.c], [t2.d]), partitions(p0sp[0-4], p1sp[0-4], p2sp[0-4], p3sp[0-4], p4sp[0-4])
  7 - output([t3.a], [t3.b], [t3.c], [t3.d]), filter(nil), rowset=256, 
      access([GROUP_ID], [t3.a], [t3.b], [t3.c], [t3.d]), partitions(p0sp[0-4], p1sp[0-4], p2sp[0-4], p3sp[0-4], p4sp[0-4])

explain select/*+leading(t1,t2,t3)*/ * from t1, t2, t3 where t1.a = t2.a and t1.b = t2.b and t1.a = t3.a and t1.b = t3.b;
Query Plan
====================================================
|ID|OPERATOR               |NAME    |EST. ROWS|COST|
----------------------------------------------------
|0 |PX COORDINATOR         |        |1        |1156|
|1 | EXCHANGE OUT DISTR    |:EX10000|1        |1154|
|2 |  PX PARTITION ITERATOR|        |1        |1150|
|3 |   NESTED-LOOP JOIN    |        |1        |1150|
|4 |    NESTED-LOOP JOIN   |        |1        |1142|
|5 |     TABLE SCAN        |t1      |1        |1135|
|6 |     TABLE SCAN        |t2      |1        |156 |
|7 |    TABLE SCAN         |t3      |1        |156 |
====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t1.d, t2.a, t2.b, t2.c, t2.d, t3.a, t3.b, t3.c, t3.d)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t1.d, t2.a, t2.b, t2.c, t2.d, t3.a, t3.b, t3.c, t3.d)]), filter(nil), rowset=256, dop=1
  2 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c], [t2.d], [t3.a], [t3.b], [t3.c], [t3.d]), filter(nil), rowset=256
  3 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c], [t2.d], [t3.a], [t3.b], [t3.c], [t3.d]), filter(nil), rowset=256, 
      conds(nil), nl_params_([t1.a], [t1.b])
  4 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c], [t2.d]), filter(nil), rowset=256, 
      conds(nil), nl_params_([t1.a], [t1.b])
  5 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0sp[0-4], p1sp[0-4], p2sp[0-4], p3sp[0-4], p4sp[0-4])
  6 - output([t2.a], [t2.b], [t2.c], [t2.d]), filter(nil), rowset=256, 
      access([GROUP_ID], [t2.a], [t2.b], [t2.c], [t2.d]), partitions(p0sp[0-4], p1sp[0-4], p2sp[0-4], p3sp[0-4], p4sp[0-4])
  7 - output([t3.a], [t3.b], [t3.c], [t3.d]), filter(nil), rowset=256, 
      access([GROUP_ID], [t3.a], [t3.b], [t3.c], [t3.d]), partitions(p0sp[0-4], p1sp[0-4], p2sp[0-4], p3sp[0-4], p4sp[0-4])

explain select/*+leading(t1,t2)*/ * from t1 left join t2 on t1.a = t2.a and t1.b = t2.b;
Query Plan
======================================================
|ID|OPERATOR                 |NAME    |EST. ROWS|COST|
------------------------------------------------------
|0 |PX COORDINATOR           |        |1        |1146|
|1 | EXCHANGE OUT DISTR      |:EX10000|1        |1145|
|2 |  PX PARTITION ITERATOR  |        |1        |1142|
|3 |   NESTED-LOOP OUTER JOIN|        |1        |1142|
|4 |    TABLE SCAN           |t1      |1        |1135|
|5 |    TABLE SCAN           |t2      |1        |156 |
======================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t1.d, t2.a, t2.b, t2.c, t2.d)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t1.d, t2.a, t2.b, t2.c, t2.d)]), filter(nil), rowset=256, dop=1
  2 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c], [t2.d]), filter(nil), rowset=256
  3 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c], [t2.d]), filter(nil), rowset=256, 
      conds(nil), nl_params_([t1.a], [t1.b])
  4 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0sp[0-4], p1sp[0-4], p2sp[0-4], p3sp[0-4], p4sp[0-4])
  5 - output([t2.a], [t2.b], [t2.c], [t2.d]), filter(nil), rowset=256, 
      access([GROUP_ID], [t2.a], [t2.b], [t2.c], [t2.d]), partitions(p0sp[0-4], p1sp[0-4], p2sp[0-4], p3sp[0-4], p4sp[0-4])

explain select/*+leading(t1,t2,t3)*/ * from t1 left join t2 on t1.a = t2.a and t1.b = t2.b left join t3 on t1.a = t3.a and t1.b = t3.b;
Query Plan
=======================================================
|ID|OPERATOR                  |NAME    |EST. ROWS|COST|
-------------------------------------------------------
|0 |PX COORDINATOR            |        |1        |1156|
|1 | EXCHANGE OUT DISTR       |:EX10000|1        |1154|
|2 |  PX PARTITION ITERATOR   |        |1        |1150|
|3 |   NESTED-LOOP OUTER JOIN |        |1        |1150|
|4 |    NESTED-LOOP OUTER JOIN|        |1        |1142|
|5 |     TABLE SCAN           |t1      |1        |1135|
|6 |     TABLE SCAN           |t2      |1        |156 |
|7 |    TABLE SCAN            |t3      |1        |156 |
=======================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t1.d, t2.a, t2.b, t2.c, t2.d, t3.a, t3.b, t3.c, t3.d)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t1.d, t2.a, t2.b, t2.c, t2.d, t3.a, t3.b, t3.c, t3.d)]), filter(nil), rowset=256, dop=1
  2 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c], [t2.d], [t3.a], [t3.b], [t3.c], [t3.d]), filter(nil), rowset=256
  3 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c], [t2.d], [t3.a], [t3.b], [t3.c], [t3.d]), filter(nil), rowset=256, 
      conds(nil), nl_params_([t1.a], [t1.b])
  4 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c], [t2.d]), filter(nil), rowset=256, 
      conds(nil), nl_params_([t1.a], [t1.b])
  5 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0sp[0-4], p1sp[0-4], p2sp[0-4], p3sp[0-4], p4sp[0-4])
  6 - output([t2.a], [t2.b], [t2.c], [t2.d]), filter(nil), rowset=256, 
      access([GROUP_ID], [t2.a], [t2.b], [t2.c], [t2.d]), partitions(p0sp[0-4], p1sp[0-4], p2sp[0-4], p3sp[0-4], p4sp[0-4])
  7 - output([t3.a], [t3.b], [t3.c], [t3.d]), filter(nil), rowset=256, 
      access([GROUP_ID], [t3.a], [t3.b], [t3.c], [t3.d]), partitions(p0sp[0-4], p1sp[0-4], p2sp[0-4], p3sp[0-4], p4sp[0-4])

explain select/*+leading(t1,t2,t3)*/ * from t1 left join t2 on t1.a = t2.a and t1.b = t2.b left join t3 on t2.a = t3.a and t2.b = t3.b;
Query Plan
=======================================================
|ID|OPERATOR                  |NAME    |EST. ROWS|COST|
-------------------------------------------------------
|0 |PX COORDINATOR            |        |1        |1156|
|1 | EXCHANGE OUT DISTR       |:EX10000|1        |1154|
|2 |  PX PARTITION ITERATOR   |        |1        |1150|
|3 |   NESTED-LOOP OUTER JOIN |        |1        |1150|
|4 |    NESTED-LOOP OUTER JOIN|        |1        |1142|
|5 |     TABLE SCAN           |t1      |1        |1135|
|6 |     TABLE SCAN           |t2      |1        |156 |
|7 |    TABLE SCAN            |t3      |1        |156 |
=======================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t1.d, t2.a, t2.b, t2.c, t2.d, t3.a, t3.b, t3.c, t3.d)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t1.d, t2.a, t2.b, t2.c, t2.d, t3.a, t3.b, t3.c, t3.d)]), filter(nil), rowset=256, dop=1
  2 - output([t2.a], [t2.b], [t1.a], [t1.b], [t1.c], [t1.d], [t2.c], [t2.d], [t3.a], [t3.b], [t3.c], [t3.d]), filter(nil), rowset=256
  3 - output([t2.a], [t2.b], [t1.a], [t1.b], [t1.c], [t1.d], [t2.c], [t2.d], [t3.a], [t3.b], [t3.c], [t3.d]), filter(nil), rowset=256, 
      conds(nil), nl_params_([t2.a], [t2.b])
  4 - output([t2.a], [t2.b], [t1.a], [t1.b], [t1.c], [t1.d], [t2.c], [t2.d]), filter(nil), rowset=256, 
      conds(nil), nl_params_([t1.a], [t1.b])
  5 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0sp[0-4], p1sp[0-4], p2sp[0-4], p3sp[0-4], p4sp[0-4])
  6 - output([t2.a], [t2.b], [t2.c], [t2.d]), filter(nil), rowset=256, 
      access([GROUP_ID], [t2.a], [t2.b], [t2.c], [t2.d]), partitions(p0sp[0-4], p1sp[0-4], p2sp[0-4], p3sp[0-4], p4sp[0-4])
  7 - output([t3.a], [t3.b], [t3.c], [t3.d]), filter(nil), rowset=256, 
      access([GROUP_ID], [t3.a], [t3.b], [t3.c], [t3.d]), partitions(p0sp[0-4], p1sp[0-4], p2sp[0-4], p3sp[0-4], p4sp[0-4])

explain select/*+leading(t1,t2)*/ * from t1 full join t2 on t1.a = t2.a and t1.b = t2.b;
Query Plan
=====================================================
|ID|OPERATOR                |NAME    |EST. ROWS|COST|
-----------------------------------------------------
|0 |PX COORDINATOR          |        |1        |2274|
|1 | EXCHANGE OUT DISTR     |:EX10000|1        |2273|
|2 |  PX PARTITION ITERATOR |        |1        |2270|
|3 |   MERGE FULL OUTER JOIN|        |1        |2270|
|4 |    TABLE SCAN          |t1      |1        |1135|
|5 |    TABLE SCAN          |t2      |1        |1135|
=====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t1.d, t2.a, t2.b, t2.c, t2.d)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t1.d, t2.a, t2.b, t2.c, t2.d)]), filter(nil), rowset=256, dop=1
  2 - output([t1.a], [t2.a], [t1.b], [t2.b], [t1.c], [t1.d], [t2.c], [t2.d]), filter(nil), rowset=256
  3 - output([t1.a], [t2.a], [t1.b], [t2.b], [t1.c], [t1.d], [t2.c], [t2.d]), filter(nil), rowset=256, 
      equal_conds([t1.a = t2.a], [t1.b = t2.b]), other_conds(nil)
  4 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0sp[0-4], p1sp[0-4], p2sp[0-4], p3sp[0-4], p4sp[0-4])
  5 - output([t2.a], [t2.b], [t2.c], [t2.d]), filter(nil), rowset=256, 
      access([t2.a], [t2.b], [t2.c], [t2.d]), partitions(p0sp[0-4], p1sp[0-4], p2sp[0-4], p3sp[0-4], p4sp[0-4])

explain select/*+leading(t1,t2,t3)*/ * from t1 full join t2 on t1.a = t2.a and t1.b = t2.b full join t3 on t1.a = t3.a and t1.b = t3.b;
Query Plan
======================================================
|ID|OPERATOR                 |NAME    |EST. ROWS|COST|
------------------------------------------------------
|0 |PX COORDINATOR           |        |1        |3411|
|1 | EXCHANGE OUT DISTR      |:EX10000|1        |3409|
|2 |  PX PARTITION ITERATOR  |        |1        |3405|
|3 |   HASH FULL OUTER JOIN  |        |1        |3405|
|4 |    MERGE FULL OUTER JOIN|        |1        |2270|
|5 |     TABLE SCAN          |t1      |1        |1135|
|6 |     TABLE SCAN          |t2      |1        |1135|
|7 |    TABLE SCAN           |t3      |1        |1135|
======================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t1.d, t2.a, t2.b, t2.c, t2.d, t3.a, t3.b, t3.c, t3.d)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t1.d, t2.a, t2.b, t2.c, t2.d, t3.a, t3.b, t3.c, t3.d)]), filter(nil), rowset=256, dop=1
  2 - output([t1.a], [t3.a], [t1.b], [t3.b], [t2.a], [t2.b], [t1.c], [t1.d], [t2.c], [t2.d], [t3.c], [t3.d]), filter(nil), rowset=256
  3 - output([t1.a], [t3.a], [t1.b], [t3.b], [t2.a], [t2.b], [t1.c], [t1.d], [t2.c], [t2.d], [t3.c], [t3.d]), filter(nil), rowset=256, 
      equal_conds([t1.a = t3.a], [t1.b = t3.b]), other_conds(nil)
  4 - output([t1.a], [t1.b], [t2.a], [t2.b], [t1.c], [t1.d], [t2.c], [t2.d]), filter(nil), rowset=256, 
      equal_conds([t1.a = t2.a], [t1.b = t2.b]), other_conds(nil)
  5 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0sp[0-4], p1sp[0-4], p2sp[0-4], p3sp[0-4], p4sp[0-4])
  6 - output([t2.a], [t2.b], [t2.c], [t2.d]), filter(nil), rowset=256, 
      access([t2.a], [t2.b], [t2.c], [t2.d]), partitions(p0sp[0-4], p1sp[0-4], p2sp[0-4], p3sp[0-4], p4sp[0-4])
  7 - output([t3.a], [t3.b], [t3.c], [t3.d]), filter(nil), rowset=256, 
      access([t3.a], [t3.b], [t3.c], [t3.d]), partitions(p0sp[0-4], p1sp[0-4], p2sp[0-4], p3sp[0-4], p4sp[0-4])

explain select/*+leading(t1,t2,t3)*/ * from t1 full join t2 on t1.a = t2.a and t1.b = t2.b full join t3 on t2.a = t3.a and t2.b = t3.b;
Query Plan
======================================================
|ID|OPERATOR                 |NAME    |EST. ROWS|COST|
------------------------------------------------------
|0 |PX COORDINATOR           |        |1        |3411|
|1 | EXCHANGE OUT DISTR      |:EX10000|1        |3409|
|2 |  PX PARTITION ITERATOR  |        |1        |3405|
|3 |   HASH FULL OUTER JOIN  |        |1        |3405|
|4 |    MERGE FULL OUTER JOIN|        |1        |2270|
|5 |     TABLE SCAN          |t1      |1        |1135|
|6 |     TABLE SCAN          |t2      |1        |1135|
|7 |    TABLE SCAN           |t3      |1        |1135|
======================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t1.d, t2.a, t2.b, t2.c, t2.d, t3.a, t3.b, t3.c, t3.d)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t1.d, t2.a, t2.b, t2.c, t2.d, t3.a, t3.b, t3.c, t3.d)]), filter(nil), rowset=256, dop=1
  2 - output([t2.a], [t3.a], [t2.b], [t3.b], [t1.a], [t1.b], [t1.c], [t1.d], [t2.c], [t2.d], [t3.c], [t3.d]), filter(nil), rowset=256
  3 - output([t2.a], [t3.a], [t2.b], [t3.b], [t1.a], [t1.b], [t1.c], [t1.d], [t2.c], [t2.d], [t3.c], [t3.d]), filter(nil), rowset=256, 
      equal_conds([t2.a = t3.a], [t2.b = t3.b]), other_conds(nil)
  4 - output([t2.a], [t2.b], [t1.a], [t1.b], [t1.c], [t1.d], [t2.c], [t2.d]), filter(nil), rowset=256, 
      equal_conds([t1.a = t2.a], [t1.b = t2.b]), other_conds(nil)
  5 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0sp[0-4], p1sp[0-4], p2sp[0-4], p3sp[0-4], p4sp[0-4])
  6 - output([t2.a], [t2.b], [t2.c], [t2.d]), filter(nil), rowset=256, 
      access([t2.a], [t2.b], [t2.c], [t2.d]), partitions(p0sp[0-4], p1sp[0-4], p2sp[0-4], p3sp[0-4], p4sp[0-4])
  7 - output([t3.a], [t3.b], [t3.c], [t3.d]), filter(nil), rowset=256, 
      access([t3.a], [t3.b], [t3.c], [t3.d]), partitions(p0sp[0-4], p1sp[0-4], p2sp[0-4], p3sp[0-4], p4sp[0-4])

explain select/*+leading(t1,t2,t3)*/ * from t1 inner join t2 on t1.a = t2.a and t1.b = t2.b left join t3 on t1.a = t3.a and t1.b = t3.b;
Query Plan
======================================================
|ID|OPERATOR                 |NAME    |EST. ROWS|COST|
------------------------------------------------------
|0 |PX COORDINATOR           |        |1        |1156|
|1 | EXCHANGE OUT DISTR      |:EX10000|1        |1154|
|2 |  PX PARTITION ITERATOR  |        |1        |1150|
|3 |   NESTED-LOOP OUTER JOIN|        |1        |1150|
|4 |    NESTED-LOOP JOIN     |        |1        |1142|
|5 |     TABLE SCAN          |t1      |1        |1135|
|6 |     TABLE SCAN          |t2      |1        |156 |
|7 |    TABLE SCAN           |t3      |1        |156 |
======================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t1.d, t2.a, t2.b, t2.c, t2.d, t3.a, t3.b, t3.c, t3.d)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t1.d, t2.a, t2.b, t2.c, t2.d, t3.a, t3.b, t3.c, t3.d)]), filter(nil), rowset=256, dop=1
  2 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c], [t2.d], [t3.a], [t3.b], [t3.c], [t3.d]), filter(nil), rowset=256
  3 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c], [t2.d], [t3.a], [t3.b], [t3.c], [t3.d]), filter(nil), rowset=256, 
      conds(nil), nl_params_([t1.a], [t1.b])
  4 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c], [t2.d]), filter(nil), rowset=256, 
      conds(nil), nl_params_([t1.a], [t1.b])
  5 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0sp[0-4], p1sp[0-4], p2sp[0-4], p3sp[0-4], p4sp[0-4])
  6 - output([t2.a], [t2.b], [t2.c], [t2.d]), filter(nil), rowset=256, 
      access([GROUP_ID], [t2.a], [t2.b], [t2.c], [t2.d]), partitions(p0sp[0-4], p1sp[0-4], p2sp[0-4], p3sp[0-4], p4sp[0-4])
  7 - output([t3.a], [t3.b], [t3.c], [t3.d]), filter(nil), rowset=256, 
      access([GROUP_ID], [t3.a], [t3.b], [t3.c], [t3.d]), partitions(p0sp[0-4], p1sp[0-4], p2sp[0-4], p3sp[0-4], p4sp[0-4])

explain select/*+leading(t1,t2,t3)*/ * from t1 inner join t2 on t1.a = t2.a and t1.b = t2.b left join t3 on t2.a = t3.a and t2.b = t3.b;
Query Plan
======================================================
|ID|OPERATOR                 |NAME    |EST. ROWS|COST|
------------------------------------------------------
|0 |PX COORDINATOR           |        |1        |1156|
|1 | EXCHANGE OUT DISTR      |:EX10000|1        |1154|
|2 |  PX PARTITION ITERATOR  |        |1        |1150|
|3 |   NESTED-LOOP OUTER JOIN|        |1        |1150|
|4 |    NESTED-LOOP JOIN     |        |1        |1142|
|5 |     TABLE SCAN          |t1      |1        |1135|
|6 |     TABLE SCAN          |t2      |1        |156 |
|7 |    TABLE SCAN           |t3      |1        |156 |
======================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t1.d, t2.a, t2.b, t2.c, t2.d, t3.a, t3.b, t3.c, t3.d)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t1.d, t2.a, t2.b, t2.c, t2.d, t3.a, t3.b, t3.c, t3.d)]), filter(nil), rowset=256, dop=1
  2 - output([t2.a], [t2.b], [t1.a], [t1.b], [t1.c], [t1.d], [t2.c], [t2.d], [t3.a], [t3.b], [t3.c], [t3.d]), filter(nil), rowset=256
  3 - output([t2.a], [t2.b], [t1.a], [t1.b], [t1.c], [t1.d], [t2.c], [t2.d], [t3.a], [t3.b], [t3.c], [t3.d]), filter(nil), rowset=256, 
      conds(nil), nl_params_([t2.a], [t2.b])
  4 - output([t2.a], [t2.b], [t1.a], [t1.b], [t1.c], [t1.d], [t2.c], [t2.d]), filter(nil), rowset=256, 
      conds(nil), nl_params_([t1.a], [t1.b])
  5 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0sp[0-4], p1sp[0-4], p2sp[0-4], p3sp[0-4], p4sp[0-4])
  6 - output([t2.a], [t2.b], [t2.c], [t2.d]), filter(nil), rowset=256, 
      access([GROUP_ID], [t2.a], [t2.b], [t2.c], [t2.d]), partitions(p0sp[0-4], p1sp[0-4], p2sp[0-4], p3sp[0-4], p4sp[0-4])
  7 - output([t3.a], [t3.b], [t3.c], [t3.d]), filter(nil), rowset=256, 
      access([GROUP_ID], [t3.a], [t3.b], [t3.c], [t3.d]), partitions(p0sp[0-4], p1sp[0-4], p2sp[0-4], p3sp[0-4], p4sp[0-4])

explain select/*+leading(t1,t2,t3)*/ * from t1 inner join t2 on t1.a = t2.a and t1.b = t2.b full join t3 on t1.a = t3.a and t1.b = t3.b;
Query Plan
=====================================================
|ID|OPERATOR                |NAME    |EST. ROWS|COST|
-----------------------------------------------------
|0 |PX COORDINATOR          |        |1        |2283|
|1 | EXCHANGE OUT DISTR     |:EX10000|1        |2281|
|2 |  PX PARTITION ITERATOR |        |1        |2277|
|3 |   MERGE FULL OUTER JOIN|        |1        |2277|
|4 |    NESTED-LOOP JOIN    |        |1        |1142|
|5 |     TABLE SCAN         |t1      |1        |1135|
|6 |     TABLE SCAN         |t2      |1        |156 |
|7 |    TABLE SCAN          |t3      |1        |1135|
=====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t1.d, t2.a, t2.b, t2.c, t2.d, t3.a, t3.b, t3.c, t3.d)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t1.d, t2.a, t2.b, t2.c, t2.d, t3.a, t3.b, t3.c, t3.d)]), filter(nil), rowset=256, dop=1
  2 - output([t1.a], [t3.a], [t1.b], [t3.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c], [t2.d], [t3.c], [t3.d]), filter(nil), rowset=256
  3 - output([t1.a], [t3.a], [t1.b], [t3.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c], [t2.d], [t3.c], [t3.d]), filter(nil), rowset=256, 
      equal_conds([t1.a = t3.a], [t1.b = t3.b]), other_conds(nil)
  4 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c], [t2.d]), filter(nil), rowset=256, 
      conds(nil), nl_params_([t1.a], [t1.b])
  5 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0sp[0-4], p1sp[0-4], p2sp[0-4], p3sp[0-4], p4sp[0-4])
  6 - output([t2.a], [t2.b], [t2.c], [t2.d]), filter(nil), rowset=256, 
      access([GROUP_ID], [t2.a], [t2.b], [t2.c], [t2.d]), partitions(p0sp[0-4], p1sp[0-4], p2sp[0-4], p3sp[0-4], p4sp[0-4])
  7 - output([t3.a], [t3.b], [t3.c], [t3.d]), filter(nil), rowset=256, 
      access([t3.a], [t3.b], [t3.c], [t3.d]), partitions(p0sp[0-4], p1sp[0-4], p2sp[0-4], p3sp[0-4], p4sp[0-4])

explain select/*+leading(t1,t2,t3)*/ * from t1 inner join t2 on t1.a = t2.a and t1.b = t2.b full join t3 on t2.a = t3.a and t2.b = t3.b;
Query Plan
=====================================================
|ID|OPERATOR                |NAME    |EST. ROWS|COST|
-----------------------------------------------------
|0 |PX COORDINATOR          |        |1        |2283|
|1 | EXCHANGE OUT DISTR     |:EX10000|1        |2281|
|2 |  PX PARTITION ITERATOR |        |1        |2277|
|3 |   MERGE FULL OUTER JOIN|        |1        |2277|
|4 |    NESTED-LOOP JOIN    |        |1        |1142|
|5 |     TABLE SCAN         |t1      |1        |1135|
|6 |     TABLE SCAN         |t2      |1        |156 |
|7 |    TABLE SCAN          |t3      |1        |1135|
=====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t1.d, t2.a, t2.b, t2.c, t2.d, t3.a, t3.b, t3.c, t3.d)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t1.d, t2.a, t2.b, t2.c, t2.d, t3.a, t3.b, t3.c, t3.d)]), filter(nil), rowset=256, dop=1
  2 - output([t2.a], [t3.a], [t2.b], [t3.b], [t1.a], [t1.b], [t1.c], [t1.d], [t2.c], [t2.d], [t3.c], [t3.d]), filter(nil), rowset=256
  3 - output([t2.a], [t3.a], [t2.b], [t3.b], [t1.a], [t1.b], [t1.c], [t1.d], [t2.c], [t2.d], [t3.c], [t3.d]), filter(nil), rowset=256, 
      equal_conds([t2.a = t3.a], [t2.b = t3.b]), other_conds(nil)
  4 - output([t2.a], [t2.b], [t1.a], [t1.b], [t1.c], [t1.d], [t2.c], [t2.d]), filter(nil), rowset=256, 
      conds(nil), nl_params_([t1.a], [t1.b])
  5 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0sp[0-4], p1sp[0-4], p2sp[0-4], p3sp[0-4], p4sp[0-4])
  6 - output([t2.a], [t2.b], [t2.c], [t2.d]), filter(nil), rowset=256, 
      access([GROUP_ID], [t2.a], [t2.b], [t2.c], [t2.d]), partitions(p0sp[0-4], p1sp[0-4], p2sp[0-4], p3sp[0-4], p4sp[0-4])
  7 - output([t3.a], [t3.b], [t3.c], [t3.d]), filter(nil), rowset=256, 
      access([t3.a], [t3.b], [t3.c], [t3.d]), partitions(p0sp[0-4], p1sp[0-4], p2sp[0-4], p3sp[0-4], p4sp[0-4])

explain select/*+leading(t1,t2,t3)*/ * from t1 left join t2 on t1.a = t2.a and t1.b = t2.b inner join t3 on t1.a = t3.a and t1.b = t3.b;
Query Plan
=======================================================
|ID|OPERATOR                  |NAME    |EST. ROWS|COST|
-------------------------------------------------------
|0 |PX COORDINATOR            |        |1        |1156|
|1 | EXCHANGE OUT DISTR       |:EX10000|1        |1154|
|2 |  PX PARTITION ITERATOR   |        |1        |1150|
|3 |   NESTED-LOOP JOIN       |        |1        |1150|
|4 |    NESTED-LOOP OUTER JOIN|        |1        |1142|
|5 |     TABLE SCAN           |t1      |1        |1135|
|6 |     TABLE SCAN           |t2      |1        |156 |
|7 |    TABLE SCAN            |t3      |1        |156 |
=======================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t1.d, t2.a, t2.b, t2.c, t2.d, t3.a, t3.b, t3.c, t3.d)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t1.d, t2.a, t2.b, t2.c, t2.d, t3.a, t3.b, t3.c, t3.d)]), filter(nil), rowset=256, dop=1
  2 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c], [t2.d], [t3.a], [t3.b], [t3.c], [t3.d]), filter(nil), rowset=256
  3 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c], [t2.d], [t3.a], [t3.b], [t3.c], [t3.d]), filter(nil), rowset=256, 
      conds(nil), nl_params_([t1.a], [t1.b])
  4 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c], [t2.d]), filter(nil), rowset=256, 
      conds(nil), nl_params_([t1.a], [t1.b])
  5 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0sp[0-4], p1sp[0-4], p2sp[0-4], p3sp[0-4], p4sp[0-4])
  6 - output([t2.a], [t2.b], [t2.c], [t2.d]), filter(nil), rowset=256, 
      access([GROUP_ID], [t2.a], [t2.b], [t2.c], [t2.d]), partitions(p0sp[0-4], p1sp[0-4], p2sp[0-4], p3sp[0-4], p4sp[0-4])
  7 - output([t3.a], [t3.b], [t3.c], [t3.d]), filter(nil), rowset=256, 
      access([GROUP_ID], [t3.a], [t3.b], [t3.c], [t3.d]), partitions(p0sp[0-4], p1sp[0-4], p2sp[0-4], p3sp[0-4], p4sp[0-4])

explain select/*+leading(t1,t2,t3)*/ * from t1 left join t2 on t1.a = t2.a and t1.b = t2.b inner join t3 on t2.a = t3.a and t2.b = t3.b;
Query Plan
====================================================
|ID|OPERATOR               |NAME    |EST. ROWS|COST|
----------------------------------------------------
|0 |PX COORDINATOR         |        |1        |1156|
|1 | EXCHANGE OUT DISTR    |:EX10000|1        |1154|
|2 |  PX PARTITION ITERATOR|        |1        |1150|
|3 |   NESTED-LOOP JOIN    |        |1        |1150|
|4 |    NESTED-LOOP JOIN   |        |1        |1142|
|5 |     TABLE SCAN        |t1      |1        |1135|
|6 |     TABLE SCAN        |t2      |1        |156 |
|7 |    TABLE SCAN         |t3      |1        |156 |
====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t1.d, t2.a, t2.b, t2.c, t2.d, t3.a, t3.b, t3.c, t3.d)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t1.d, t2.a, t2.b, t2.c, t2.d, t3.a, t3.b, t3.c, t3.d)]), filter(nil), rowset=256, dop=1
  2 - output([t2.a], [t2.b], [t1.a], [t1.b], [t1.c], [t1.d], [t2.c], [t2.d], [t3.a], [t3.b], [t3.c], [t3.d]), filter(nil), rowset=256
  3 - output([t2.a], [t2.b], [t1.a], [t1.b], [t1.c], [t1.d], [t2.c], [t2.d], [t3.a], [t3.b], [t3.c], [t3.d]), filter(nil), rowset=256, 
      conds(nil), nl_params_([t2.a], [t2.b])
  4 - output([t2.a], [t2.b], [t1.a], [t1.b], [t1.c], [t1.d], [t2.c], [t2.d]), filter(nil), rowset=256, 
      conds(nil), nl_params_([t1.a], [t1.b])
  5 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0sp[0-4], p1sp[0-4], p2sp[0-4], p3sp[0-4], p4sp[0-4])
  6 - output([t2.a], [t2.b], [t2.c], [t2.d]), filter(nil), rowset=256, 
      access([GROUP_ID], [t2.a], [t2.b], [t2.c], [t2.d]), partitions(p0sp[0-4], p1sp[0-4], p2sp[0-4], p3sp[0-4], p4sp[0-4])
  7 - output([t3.a], [t3.b], [t3.c], [t3.d]), filter(nil), rowset=256, 
      access([GROUP_ID], [t3.a], [t3.b], [t3.c], [t3.d]), partitions(p0sp[0-4], p1sp[0-4], p2sp[0-4], p3sp[0-4], p4sp[0-4])

explain select/*+leading(t1,t2,t3)*/ * from t1 full join t2 on t1.a = t2.a and t1.b = t2.b inner join t3 on t1.a = t3.a and t1.b = t3.b;
Query Plan
=======================================================
|ID|OPERATOR                  |NAME    |EST. ROWS|COST|
-------------------------------------------------------
|0 |PX COORDINATOR            |        |1        |1156|
|1 | EXCHANGE OUT DISTR       |:EX10000|1        |1154|
|2 |  PX PARTITION ITERATOR   |        |1        |1150|
|3 |   NESTED-LOOP JOIN       |        |1        |1150|
|4 |    NESTED-LOOP OUTER JOIN|        |1        |1142|
|5 |     TABLE SCAN           |t1      |1        |1135|
|6 |     TABLE SCAN           |t2      |1        |156 |
|7 |    TABLE SCAN            |t3      |1        |156 |
=======================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t1.d, t2.a, t2.b, t2.c, t2.d, t3.a, t3.b, t3.c, t3.d)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t1.d, t2.a, t2.b, t2.c, t2.d, t3.a, t3.b, t3.c, t3.d)]), filter(nil), rowset=256, dop=1
  2 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c], [t2.d], [t3.a], [t3.b], [t3.c], [t3.d]), filter(nil), rowset=256
  3 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c], [t2.d], [t3.a], [t3.b], [t3.c], [t3.d]), filter(nil), rowset=256, 
      conds(nil), nl_params_([t1.a], [t1.b])
  4 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c], [t2.d]), filter(nil), rowset=256, 
      conds(nil), nl_params_([t1.a], [t1.b])
  5 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0sp[0-4], p1sp[0-4], p2sp[0-4], p3sp[0-4], p4sp[0-4])
  6 - output([t2.a], [t2.b], [t2.c], [t2.d]), filter(nil), rowset=256, 
      access([GROUP_ID], [t2.a], [t2.b], [t2.c], [t2.d]), partitions(p0sp[0-4], p1sp[0-4], p2sp[0-4], p3sp[0-4], p4sp[0-4])
  7 - output([t3.a], [t3.b], [t3.c], [t3.d]), filter(nil), rowset=256, 
      access([GROUP_ID], [t3.a], [t3.b], [t3.c], [t3.d]), partitions(p0sp[0-4], p1sp[0-4], p2sp[0-4], p3sp[0-4], p4sp[0-4])

explain select/*+leading(t1,t2,t3)*/ * from t1 full join t2 on t1.a = t2.a and t1.b = t2.b inner join t3 on t2.a = t3.a and t2.b = t3.b;
Query Plan
=======================================================
|ID|OPERATOR                  |NAME    |EST. ROWS|COST|
-------------------------------------------------------
|0 |PX COORDINATOR            |        |1        |2283|
|1 | EXCHANGE OUT DISTR       |:EX10000|1        |2281|
|2 |  PX PARTITION ITERATOR   |        |1        |2277|
|3 |   NESTED-LOOP JOIN       |        |1        |2277|
|4 |    MERGE RIGHT OUTER JOIN|        |1        |2270|
|5 |     TABLE SCAN           |t1      |1        |1135|
|6 |     TABLE SCAN           |t2      |1        |1135|
|7 |    TABLE SCAN            |t3      |1        |156 |
=======================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t1.d, t2.a, t2.b, t2.c, t2.d, t3.a, t3.b, t3.c, t3.d)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t1.d, t2.a, t2.b, t2.c, t2.d, t3.a, t3.b, t3.c, t3.d)]), filter(nil), rowset=256, dop=1
  2 - output([t2.a], [t2.b], [t1.a], [t1.b], [t1.c], [t1.d], [t2.c], [t2.d], [t3.a], [t3.b], [t3.c], [t3.d]), filter(nil), rowset=256
  3 - output([t2.a], [t2.b], [t1.a], [t1.b], [t1.c], [t1.d], [t2.c], [t2.d], [t3.a], [t3.b], [t3.c], [t3.d]), filter(nil), rowset=256, 
      conds(nil), nl_params_([t2.a], [t2.b])
  4 - output([t2.a], [t2.b], [t1.a], [t1.b], [t1.c], [t1.d], [t2.c], [t2.d]), filter(nil), rowset=256, 
      equal_conds([t1.a = t2.a], [t1.b = t2.b]), other_conds(nil)
  5 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0sp[0-4], p1sp[0-4], p2sp[0-4], p3sp[0-4], p4sp[0-4])
  6 - output([t2.a], [t2.b], [t2.c], [t2.d]), filter(nil), rowset=256, 
      access([t2.a], [t2.b], [t2.c], [t2.d]), partitions(p0sp[0-4], p1sp[0-4], p2sp[0-4], p3sp[0-4], p4sp[0-4])
  7 - output([t3.a], [t3.b], [t3.c], [t3.d]), filter(nil), rowset=256, 
      access([GROUP_ID], [t3.a], [t3.b], [t3.c], [t3.d]), partitions(p0sp[0-4], p1sp[0-4], p2sp[0-4], p3sp[0-4], p4sp[0-4])

explain select/*+leading(t1,t2,t3)*/ * from t1 full join t2 on t1.a = t2.a and t1.b = t2.b left join t3 on t1.a = t3.a and t1.b = t3.b;
Query Plan
======================================================
|ID|OPERATOR                 |NAME    |EST. ROWS|COST|
------------------------------------------------------
|0 |PX COORDINATOR           |        |1        |2283|
|1 | EXCHANGE OUT DISTR      |:EX10000|1        |2281|
|2 |  PX PARTITION ITERATOR  |        |1        |2277|
|3 |   NESTED-LOOP OUTER JOIN|        |1        |2277|
|4 |    MERGE FULL OUTER JOIN|        |1        |2270|
|5 |     TABLE SCAN          |t1      |1        |1135|
|6 |     TABLE SCAN          |t2      |1        |1135|
|7 |    TABLE SCAN           |t3      |1        |156 |
======================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t1.d, t2.a, t2.b, t2.c, t2.d, t3.a, t3.b, t3.c, t3.d)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t1.d, t2.a, t2.b, t2.c, t2.d, t3.a, t3.b, t3.c, t3.d)]), filter(nil), rowset=256, dop=1
  2 - output([t1.a], [t1.b], [t2.a], [t2.b], [t1.c], [t1.d], [t2.c], [t2.d], [t3.a], [t3.b], [t3.c], [t3.d]), filter(nil), rowset=256
  3 - output([t1.a], [t1.b], [t2.a], [t2.b], [t1.c], [t1.d], [t2.c], [t2.d], [t3.a], [t3.b], [t3.c], [t3.d]), filter(nil), rowset=256, 
      conds(nil), nl_params_([t1.a], [t1.b])
  4 - output([t1.a], [t1.b], [t2.a], [t2.b], [t1.c], [t1.d], [t2.c], [t2.d]), filter(nil), rowset=256, 
      equal_conds([t1.a = t2.a], [t1.b = t2.b]), other_conds(nil)
  5 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0sp[0-4], p1sp[0-4], p2sp[0-4], p3sp[0-4], p4sp[0-4])
  6 - output([t2.a], [t2.b], [t2.c], [t2.d]), filter(nil), rowset=256, 
      access([t2.a], [t2.b], [t2.c], [t2.d]), partitions(p0sp[0-4], p1sp[0-4], p2sp[0-4], p3sp[0-4], p4sp[0-4])
  7 - output([t3.a], [t3.b], [t3.c], [t3.d]), filter(nil), rowset=256, 
      access([GROUP_ID], [t3.a], [t3.b], [t3.c], [t3.d]), partitions(p0sp[0-4], p1sp[0-4], p2sp[0-4], p3sp[0-4], p4sp[0-4])

explain select/*+leading(t1,t2,t3)*/ * from t1 full join t2 on t1.a = t2.a and t1.b = t2.b left join t3 on t2.a = t3.a and t2.b = t3.b;
Query Plan
======================================================
|ID|OPERATOR                 |NAME    |EST. ROWS|COST|
------------------------------------------------------
|0 |PX COORDINATOR           |        |1        |2283|
|1 | EXCHANGE OUT DISTR      |:EX10000|1        |2281|
|2 |  PX PARTITION ITERATOR  |        |1        |2277|
|3 |   NESTED-LOOP OUTER JOIN|        |1        |2277|
|4 |    MERGE FULL OUTER JOIN|        |1        |2270|
|5 |     TABLE SCAN          |t1      |1        |1135|
|6 |     TABLE SCAN          |t2      |1        |1135|
|7 |    TABLE SCAN           |t3      |1        |156 |
======================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t1.d, t2.a, t2.b, t2.c, t2.d, t3.a, t3.b, t3.c, t3.d)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t1.d, t2.a, t2.b, t2.c, t2.d, t3.a, t3.b, t3.c, t3.d)]), filter(nil), rowset=256, dop=1
  2 - output([t2.a], [t2.b], [t1.a], [t1.b], [t1.c], [t1.d], [t2.c], [t2.d], [t3.a], [t3.b], [t3.c], [t3.d]), filter(nil), rowset=256
  3 - output([t2.a], [t2.b], [t1.a], [t1.b], [t1.c], [t1.d], [t2.c], [t2.d], [t3.a], [t3.b], [t3.c], [t3.d]), filter(nil), rowset=256, 
      conds(nil), nl_params_([t2.a], [t2.b])
  4 - output([t2.a], [t2.b], [t1.a], [t1.b], [t1.c], [t1.d], [t2.c], [t2.d]), filter(nil), rowset=256, 
      equal_conds([t1.a = t2.a], [t1.b = t2.b]), other_conds(nil)
  5 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0sp[0-4], p1sp[0-4], p2sp[0-4], p3sp[0-4], p4sp[0-4])
  6 - output([t2.a], [t2.b], [t2.c], [t2.d]), filter(nil), rowset=256, 
      access([t2.a], [t2.b], [t2.c], [t2.d]), partitions(p0sp[0-4], p1sp[0-4], p2sp[0-4], p3sp[0-4], p4sp[0-4])
  7 - output([t3.a], [t3.b], [t3.c], [t3.d]), filter(nil), rowset=256, 
      access([GROUP_ID], [t3.a], [t3.b], [t3.c], [t3.d]), partitions(p0sp[0-4], p1sp[0-4], p2sp[0-4], p3sp[0-4], p4sp[0-4])

explain select * from t1 where (t1.a, t1.b) in (select t2.a, t2.b from t2);
Query Plan
====================================================
|ID|OPERATOR               |NAME    |EST. ROWS|COST|
----------------------------------------------------
|0 |PX COORDINATOR         |        |1        |1142|
|1 | EXCHANGE OUT DISTR    |:EX10000|1        |1141|
|2 |  PX PARTITION ITERATOR|        |1        |1140|
|3 |   NESTED-LOOP JOIN    |        |1        |1140|
|4 |    SUBPLAN SCAN       |VIEW2   |1        |1135|
|5 |     MERGE DISTINCT    |        |1        |1135|
|6 |      TABLE SCAN       |t2      |1        |1135|
|7 |    TABLE SCAN         |t1      |1        |156 |
====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t1.d)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t1.d)]), filter(nil), rowset=256, dop=1
  2 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), rowset=256
  3 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), rowset=256, 
      conds(nil), nl_params_([VIEW2.VIEW1.a], [VIEW2.VIEW1.b])
  4 - output([VIEW2.VIEW1.a], [VIEW2.VIEW1.b]), filter(nil), rowset=256, 
      access([VIEW2.VIEW1.a], [VIEW2.VIEW1.b])
  5 - output([t2.a], [t2.b]), filter(nil), rowset=256, 
      distinct([t2.a], [t2.b])
  6 - output([t2.a], [t2.b]), filter(nil), rowset=256, 
      access([t2.a], [t2.b]), partitions(p0sp[0-4], p1sp[0-4], p2sp[0-4], p3sp[0-4], p4sp[0-4])
  7 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), rowset=256, 
      access([GROUP_ID], [t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0sp[0-4], p1sp[0-4], p2sp[0-4], p3sp[0-4], p4sp[0-4])

explain select * from t1 where (t1.a, t1.b) in (select t2.a, t2.b from t2) and (t1.a, t1.b) in (select t3.a, t3.b from t3);
Query Plan
=====================================================
|ID|OPERATOR                |NAME    |EST. ROWS|COST|
-----------------------------------------------------
|0 |PX COORDINATOR          |        |1        |1147|
|1 | EXCHANGE OUT DISTR     |:EX10000|1        |1146|
|2 |  PX PARTITION ITERATOR |        |1        |1145|
|3 |   NESTED-LOOP SEMI JOIN|        |1        |1145|
|4 |    NESTED-LOOP JOIN    |        |1        |1140|
|5 |     SUBPLAN SCAN       |VIEW3   |1        |1135|
|6 |      MERGE DISTINCT    |        |1        |1135|
|7 |       TABLE SCAN       |t2      |1        |1135|
|8 |     TABLE SCAN         |t1      |1        |156 |
|9 |    TABLE SCAN          |t3      |1        |157 |
=====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t1.d)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t1.d)]), filter(nil), rowset=256, dop=1
  2 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), rowset=256
  3 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), rowset=256, 
      conds(nil), nl_params_([t1.a], [t1.b])
  4 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), rowset=256, 
      conds(nil), nl_params_([VIEW3.VIEW1.a], [VIEW3.VIEW1.b])
  5 - output([VIEW3.VIEW1.a], [VIEW3.VIEW1.b]), filter(nil), rowset=256, 
      access([VIEW3.VIEW1.a], [VIEW3.VIEW1.b])
  6 - output([t2.a], [t2.b]), filter(nil), rowset=256, 
      distinct([t2.a], [t2.b])
  7 - output([t2.a], [t2.b]), filter(nil), rowset=256, 
      access([t2.a], [t2.b]), partitions(p0sp[0-4], p1sp[0-4], p2sp[0-4], p3sp[0-4], p4sp[0-4])
  8 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), rowset=256, 
      access([GROUP_ID], [t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0sp[0-4], p1sp[0-4], p2sp[0-4], p3sp[0-4], p4sp[0-4])
  9 - output(nil), filter(nil), rowset=256, 
      access(nil), partitions(p0sp[0-4], p1sp[0-4], p2sp[0-4], p3sp[0-4], p4sp[0-4])

explain select * from t1 where (t1.a, t1.b) in (select t2.a, t2.b from t2 where (t2.a, t2.b) in (select t3.a, t3.b from t3));
Query Plan
====================================================
|ID|OPERATOR               |NAME    |EST. ROWS|COST|
----------------------------------------------------
|0 |PX COORDINATOR         |        |1        |1147|
|1 | EXCHANGE OUT DISTR    |:EX10000|1        |1146|
|2 |  PX PARTITION ITERATOR|        |1        |1145|
|3 |   NESTED-LOOP JOIN    |        |1        |1145|
|4 |    SUBPLAN SCAN       |VIEW4   |1        |1140|
|5 |     MERGE DISTINCT    |        |1        |1140|
|6 |      NESTED-LOOP JOIN |        |1        |1140|
|7 |       SUBPLAN SCAN    |VIEW3   |1        |1135|
|8 |        MERGE DISTINCT |        |1        |1135|
|9 |         TABLE SCAN    |t3      |1        |1135|
|10|       TABLE SCAN      |t2      |1        |156 |
|11|    TABLE SCAN         |t1      |1        |156 |
====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t1.d)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t1.d)]), filter(nil), rowset=256, dop=1
  2 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), rowset=256
  3 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), rowset=256, 
      conds(nil), nl_params_([VIEW4.VIEW2.a], [VIEW4.VIEW2.b])
  4 - output([VIEW4.VIEW2.a], [VIEW4.VIEW2.b]), filter(nil), rowset=256,
      access([VIEW4.VIEW2.a], [VIEW4.VIEW2.b])
  5 - output([t2.a], [t2.b]), filter(nil), rowset=256,
      distinct([t2.a], [t2.b])
  6 - output([t2.a], [t2.b]), filter(nil), rowset=256, 
      conds(nil), nl_params_([VIEW3.VIEW1.a], [VIEW3.VIEW1.b])
  7 - output([VIEW3.VIEW1.a], [VIEW3.VIEW1.b]), filter(nil), rowset=256, 
      access([VIEW3.VIEW1.a], [VIEW3.VIEW1.b])
  8 - output([t3.a], [t3.b]), filter(nil), rowset=256, 
      distinct([t3.a], [t3.b])
  9 - output([t3.a], [t3.b]), filter(nil), rowset=256, 
      access([t3.a], [t3.b]), partitions(p0sp[0-4], p1sp[0-4], p2sp[0-4], p3sp[0-4], p4sp[0-4])
  10 - output([t2.a], [t2.b]), filter(nil), rowset=256, 
      access([GROUP_ID], [t2.a], [t2.b]), partitions(p0sp[0-4], p1sp[0-4], p2sp[0-4], p3sp[0-4], p4sp[0-4])
  11 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), rowset=256,
      access([GROUP_ID], [t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0sp[0-4], p1sp[0-4], p2sp[0-4], p3sp[0-4], p4sp[0-4])

drop table if exists t1, t2, t3;
create table t1(a int, b int) partition by hash(a+1) partitions 5;
create table t2(a int, b int) partition by hash(a+1) partitions 5;
create table t3(a int, b int) partition by hash(a+2) partitions 5;
explain select * from t1, t2 where t1.a = t2.a;
Query Plan
=====================================================
|ID|OPERATOR                |NAME    |EST. ROWS|COST|
-----------------------------------------------------
|0 |HASH JOIN               |        |1        |458 |
|1 | PX COORDINATOR         |        |1        |229 |
|2 |  EXCHANGE OUT DISTR    |:EX10000|1        |229 |
|3 |   PX PARTITION ITERATOR|        |1        |228 |
|4 |    TABLE SCAN          |t1      |1        |228 |
|5 | PX COORDINATOR         |        |1        |229 |
|6 |  EXCHANGE OUT DISTR    |:EX20000|1        |229 |
|7 |   PX PARTITION ITERATOR|        |1        |228 |
|8 |    TABLE SCAN          |t2      |1        |228 |
=====================================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t2.a], [t2.b]), filter(nil), rowset=256, 
      equal_conds([t1.a = t2.a]), other_conds(nil)
  1 - output([t1.a], [t1.b]), filter(nil), rowset=256
  2 - output([t1.a], [t1.b]), filter(nil), rowset=256, dop=1
  3 - output([t1.a], [t1.b]), filter(nil), rowset=256
  4 - output([t1.a], [t1.b]), filter(nil), rowset=256, 
      access([t1.a], [t1.b]), partitions(p[0-4])
  5 - output([t2.a], [t2.b]), filter(nil), rowset=256
  6 - output([t2.a], [t2.b]), filter(nil), rowset=256, dop=1
  7 - output([t2.a], [t2.b]), filter(nil), rowset=256
  8 - output([t2.a], [t2.b]), filter(nil), rowset=256, 
      access([t2.a], [t2.b]), partitions(p[0-4])

explain select * from t1, t2 where t1.a + 1 = t2.a + 1;
Query Plan
====================================================
|ID|OPERATOR               |NAME    |EST. ROWS|COST|
----------------------------------------------------
|0 |PX COORDINATOR         |        |1        |458 |
|1 | EXCHANGE OUT DISTR    |:EX10000|1        |457 |
|2 |  PX PARTITION ITERATOR|        |1        |456 |
|3 |   HASH JOIN           |        |1        |456 |
|4 |    TABLE SCAN         |t1      |1        |228 |
|5 |    TABLE SCAN         |t2      |1        |228 |
====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b)]), filter(nil), rowset=256, dop=1
  2 - output([t1.a], [t2.a], [t1.b], [t2.b]), filter(nil), rowset=256
  3 - output([t1.a], [t2.a], [t1.b], [t2.b]), filter(nil), rowset=256, 
      equal_conds([t1.a + 1 = t2.a + 1]), other_conds(nil)
  4 - output([t1.a], [t1.b]), filter(nil), rowset=256, 
      access([t1.a], [t1.b]), partitions(p[0-4])
  5 - output([t2.a], [t2.b]), filter(nil), rowset=256, 
      access([t2.a], [t2.b]), partitions(p[0-4])

explain select * from t1, t3 where t1.a + 1 = t3.a + 2;
Query Plan
====================================================
|ID|OPERATOR               |NAME    |EST. ROWS|COST|
----------------------------------------------------
|0 |PX COORDINATOR         |        |1        |458 |
|1 | EXCHANGE OUT DISTR    |:EX10000|1        |457 |
|2 |  PX PARTITION ITERATOR|        |1        |456 |
|3 |   HASH JOIN           |        |1        |456 |
|4 |    TABLE SCAN         |t1      |1        |228 |
|5 |    TABLE SCAN         |t3      |1        |228 |
====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t3.a, t3.b)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t3.a, t3.b)]), filter(nil), rowset=256, dop=1
  2 - output([t1.a], [t3.a], [t1.b], [t3.b]), filter(nil), rowset=256
  3 - output([t1.a], [t3.a], [t1.b], [t3.b]), filter(nil), rowset=256, 
      equal_conds([t1.a + 1 = t3.a + 2]), other_conds(nil)
  4 - output([t1.a], [t1.b]), filter(nil), rowset=256, 
      access([t1.a], [t1.b]), partitions(p[0-4])
  5 - output([t3.a], [t3.b]), filter(nil), rowset=256, 
      access([t3.a], [t3.b]), partitions(p[0-4])

explain select * from t1, t3 where t1.a = t3.a;
Query Plan
=====================================================
|ID|OPERATOR                |NAME    |EST. ROWS|COST|
-----------------------------------------------------
|0 |HASH JOIN               |        |1        |458 |
|1 | PX COORDINATOR         |        |1        |229 |
|2 |  EXCHANGE OUT DISTR    |:EX10000|1        |229 |
|3 |   PX PARTITION ITERATOR|        |1        |228 |
|4 |    TABLE SCAN          |t1      |1        |228 |
|5 | PX COORDINATOR         |        |1        |229 |
|6 |  EXCHANGE OUT DISTR    |:EX20000|1        |229 |
|7 |   PX PARTITION ITERATOR|        |1        |228 |
|8 |    TABLE SCAN          |t3      |1        |228 |
=====================================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t3.a], [t3.b]), filter(nil), rowset=256, 
      equal_conds([t1.a = t3.a]), other_conds(nil)
  1 - output([t1.a], [t1.b]), filter(nil), rowset=256
  2 - output([t1.a], [t1.b]), filter(nil), rowset=256, dop=1
  3 - output([t1.a], [t1.b]), filter(nil), rowset=256
  4 - output([t1.a], [t1.b]), filter(nil), rowset=256, 
      access([t1.a], [t1.b]), partitions(p[0-4])
  5 - output([t3.a], [t3.b]), filter(nil), rowset=256
  6 - output([t3.a], [t3.b]), filter(nil), rowset=256, dop=1
  7 - output([t3.a], [t3.b]), filter(nil), rowset=256
  8 - output([t3.a], [t3.b]), filter(nil), rowset=256, 
      access([t3.a], [t3.b]), partitions(p[0-4])

explain select * from t1, t2, t3 where t1.a + 1 = t2.a + 1 and t1.a + 1 = t3.a + 2;
Query Plan
====================================================
|ID|OPERATOR               |NAME    |EST. ROWS|COST|
----------------------------------------------------
|0 |PX COORDINATOR         |        |1        |687 |
|1 | EXCHANGE OUT DISTR    |:EX10000|1        |686 |
|2 |  PX PARTITION ITERATOR|        |1        |684 |
|3 |   HASH JOIN           |        |1        |684 |
|4 |    TABLE SCAN         |t3      |1        |228 |
|5 |    HASH JOIN          |        |1        |456 |
|6 |     TABLE SCAN        |t1      |1        |228 |
|7 |     TABLE SCAN        |t2      |1        |228 |
====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b, t3.a, t3.b)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b, t3.a, t3.b)]), filter(nil), rowset=256, dop=1
  2 - output([t1.a], [t3.a], [t3.b], [t2.a], [t1.b], [t2.b]), filter(nil), rowset=256
  3 - output([t1.a], [t3.a], [t3.b], [t2.a], [t1.b], [t2.b]), filter(nil), rowset=256, 
      equal_conds([t1.a + 1 = t3.a + 2]), other_conds(nil)
  4 - output([t3.a], [t3.b]), filter(nil), rowset=256, 
      access([t3.a], [t3.b]), partitions(p[0-4])
  5 - output([t1.a], [t2.a], [t1.b], [t2.b]), filter(nil), rowset=256, 
      equal_conds([t1.a + 1 = t2.a + 1]), other_conds(nil)
  6 - output([t1.a], [t1.b]), filter(nil), rowset=256, 
      access([t1.a], [t1.b]), partitions(p[0-4])
  7 - output([t2.a], [t2.b]), filter(nil), rowset=256, 
      access([t2.a], [t2.b]), partitions(p[0-4])

explain select * from t1, t2, t3 where t1.a + 1 = t2.a + 1 and t2.a + 1 = t3.a + 2;
Query Plan
====================================================
|ID|OPERATOR               |NAME    |EST. ROWS|COST|
----------------------------------------------------
|0 |PX COORDINATOR         |        |1        |687 |
|1 | EXCHANGE OUT DISTR    |:EX10000|1        |686 |
|2 |  PX PARTITION ITERATOR|        |1        |684 |
|3 |   HASH JOIN           |        |1        |684 |
|4 |    TABLE SCAN         |t3      |1        |228 |
|5 |    HASH JOIN          |        |1        |456 |
|6 |     TABLE SCAN        |t1      |1        |228 |
|7 |     TABLE SCAN        |t2      |1        |228 |
====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b, t3.a, t3.b)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t2.a, t2.b, t3.a, t3.b)]), filter(nil), rowset=256, dop=1
  2 - output([t2.a], [t3.a], [t3.b], [t1.a], [t1.b], [t2.b]), filter(nil), rowset=256
  3 - output([t2.a], [t3.a], [t3.b], [t1.a], [t1.b], [t2.b]), filter(nil), rowset=256, 
      equal_conds([t2.a + 1 = t3.a + 2]), other_conds(nil)
  4 - output([t3.a], [t3.b]), filter(nil), rowset=256, 
      access([t3.a], [t3.b]), partitions(p[0-4])
  5 - output([t2.a], [t1.a], [t1.b], [t2.b]), filter(nil), rowset=256, 
      equal_conds([t1.a + 1 = t2.a + 1]), other_conds(nil)
  6 - output([t1.a], [t1.b]), filter(nil), rowset=256, 
      access([t1.a], [t1.b]), partitions(p[0-4])
  7 - output([t2.a], [t2.b]), filter(nil), rowset=256, 
      access([t2.a], [t2.b]), partitions(p[0-4])

drop table if exists t1, t2, t3;
create table t1(a int, b int, c int) partition by hash(a) partitions 5;
create table t2(a int, b int, c int) partition by hash(a) partitions 5;
create table t3(a int, b int, c int) partition by hash(a) partitions 5;
explain select a from t1 union distinct select a from t2;
Query Plan
====================================================
|ID|OPERATOR               |NAME    |EST. ROWS|COST|
----------------------------------------------------
|0 |PX COORDINATOR         |        |2        |457 |
|1 | EXCHANGE OUT DISTR    |:EX10000|2        |457 |
|2 |  PX PARTITION ITERATOR|        |2        |456 |
|3 |   HASH UNION DISTINCT |        |2        |456 |
|4 |    TABLE SCAN         |t1      |1        |228 |
|5 |    TABLE SCAN         |t2      |1        |228 |
====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(UNION([1]))]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(UNION([1]))]), filter(nil), rowset=256, dop=1
  2 - output([UNION([1])]), filter(nil), rowset=256
  3 - output([UNION([1])]), filter(nil), rowset=256
  4 - output([t1.a]), filter(nil), rowset=256, 
      access([t1.a]), partitions(p[0-4])
  5 - output([t2.a]), filter(nil), rowset=256, 
      access([t2.a]), partitions(p[0-4])

explain select a from t1 where a = 1 union distinct select a from t2;
Query Plan
==========================================================
|ID|OPERATOR                     |NAME    |EST. ROWS|COST|
----------------------------------------------------------
|0 |PX COORDINATOR               |        |2        |275 |
|1 | EXCHANGE OUT DISTR          |:EX10001|2        |275 |
|2 |  HASH UNION DISTINCT        |        |2        |274 |
|3 |   PX PARTITION ITERATOR     |        |1        |228 |
|4 |    TABLE SCAN               |t2      |1        |228 |
|5 |   EXCHANGE IN DISTR         |        |1        |46  |
|6 |    EXCHANGE OUT DISTR (PKEY)|:EX10000|1        |46  |
|7 |     TABLE SCAN              |t1      |1        |46  |
==========================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(UNION([1]))]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(UNION([1]))]), filter(nil), rowset=256, dop=1
  2 - output([UNION([1])]), filter(nil), rowset=256
  3 - output([t2.a]), filter(nil), rowset=256
  4 - output([t2.a]), filter(nil), rowset=256, 
      access([t2.a]), partitions(p[0-4])
  5 - output([t1.a]), filter(nil), rowset=256
  6 - (#keys=1, [t1.a]), output([t1.a]), filter(nil), rowset=256, is_single, dop=1
  7 - output([t1.a]), filter([t1.a = 1]), rowset=256, 
      access([t1.a]), partitions(p1)

explain select a from t1 union distinct select a from t2 where a = 1;
Query Plan
==========================================================
|ID|OPERATOR                     |NAME    |EST. ROWS|COST|
----------------------------------------------------------
|0 |PX COORDINATOR               |        |2        |275 |
|1 | EXCHANGE OUT DISTR          |:EX10001|2        |275 |
|2 |  HASH UNION DISTINCT        |        |2        |274 |
|3 |   PX PARTITION ITERATOR     |        |1        |228 |
|4 |    TABLE SCAN               |t1      |1        |228 |
|5 |   EXCHANGE IN DISTR         |        |1        |46  |
|6 |    EXCHANGE OUT DISTR (PKEY)|:EX10000|1        |46  |
|7 |     TABLE SCAN              |t2      |1        |46  |
==========================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(UNION([1]))]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(UNION([1]))]), filter(nil), rowset=256, dop=1
  2 - output([UNION([1])]), filter(nil), rowset=256
  3 - output([t1.a]), filter(nil), rowset=256
  4 - output([t1.a]), filter(nil), rowset=256, 
      access([t1.a]), partitions(p[0-4])
  5 - output([t2.a]), filter(nil), rowset=256
  6 - (#keys=1, [t2.a]), output([t2.a]), filter(nil), rowset=256, is_single, dop=1
  7 - output([t2.a]), filter([t2.a = 1]), rowset=256, 
      access([t2.a]), partitions(p1)

explain select a from t1 where a = 1 union distinct select a from t2 where a = 1;
Query Plan
=============================================
|ID|OPERATOR            |NAME|EST. ROWS|COST|
---------------------------------------------
|0 |MERGE UNION DISTINCT|    |2        |91  |
|1 | TABLE SCAN         |t1  |1        |46  |
|2 | TABLE SCAN         |t2  |1        |46  |
=============================================

Outputs & filters: 
-------------------------------------
  0 - output([UNION([1])]), filter(nil), rowset=256
  1 - output([t1.a]), filter([t1.a = 1]), rowset=256, 
      access([t1.a]), partitions(p1)
  2 - output([t2.a]), filter([t2.a = 1]), rowset=256, 
      access([t2.a]), partitions(p1)

explain select a from t1 union distinct select a from t2 union distinct select b from t3;
Query Plan
==========================================================
|ID|OPERATOR                     |NAME    |EST. ROWS|COST|
----------------------------------------------------------
|0 |PX COORDINATOR               |        |1        |684 |
|1 | EXCHANGE OUT DISTR          |:EX10001|1        |684 |
|2 |  HASH DISTINCT              |        |1        |684 |
|3 |   EXCHANGE IN DISTR         |        |1        |684 |
|4 |    EXCHANGE OUT DISTR (HASH)|:EX10000|1        |684 |
|5 |     HASH DISTINCT           |        |1        |683 |
|6 |      PX PARTITION ITERATOR  |        |3        |683 |
|7 |       UNION ALL             |        |3        |683 |
|8 |        TABLE SCAN           |t1      |1        |228 |
|9 |        TABLE SCAN           |t2      |1        |228 |
|10|        TABLE SCAN           |t3      |1        |228 |
==========================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(UNION([1]))]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(UNION([1]))]), filter(nil), rowset=256, dop=1
  2 - output([UNION([1])]), filter(nil), rowset=256, 
      distinct([UNION([1])])
  3 - output([UNION([1])]), filter(nil), rowset=256
  4 - (#keys=1, [UNION([1])]), output([UNION([1])]), filter(nil), rowset=256, dop=1
  5 - output([UNION([1])]), filter(nil), rowset=256, 
      distinct([UNION([1])])
  6 - output([UNION([1])]), filter(nil), rowset=256
  7 - output([UNION([1])]), filter(nil), rowset=256
  8 - output([t1.a]), filter(nil), rowset=256, 
      access([t1.a]), partitions(p[0-4])
  9 - output([t2.a]), filter(nil), rowset=256, 
      access([t2.a]), partitions(p[0-4])
  10 - output([t3.b]), filter(nil), rowset=256, 
      access([t3.b]), partitions(p[0-4])

explain select a from t1 where a = 1 union distinct select a from t2 union distinct select b from t3;
Query Plan
======================================================
|ID|OPERATOR                 |NAME    |EST. ROWS|COST|
------------------------------------------------------
|0 |HASH DISTINCT            |        |1        |502 |
|1 | UNION ALL               |        |3        |502 |
|2 |  TABLE SCAN             |t1      |1        |46  |
|3 |  PX COORDINATOR         |        |1        |229 |
|4 |   EXCHANGE OUT DISTR    |:EX10000|1        |228 |
|5 |    PX PARTITION ITERATOR|        |1        |228 |
|6 |     TABLE SCAN          |t2      |1        |228 |
|7 |  PX COORDINATOR         |        |1        |229 |
|8 |   EXCHANGE OUT DISTR    |:EX20000|1        |228 |
|9 |    PX PARTITION ITERATOR|        |1        |228 |
|10|     TABLE SCAN          |t3      |1        |228 |
======================================================

Outputs & filters: 
-------------------------------------
  0 - output([UNION([1])]), filter(nil), rowset=256, 
      distinct([UNION([1])])
  1 - output([UNION([1])]), filter(nil), rowset=256
  2 - output([t1.a]), filter([t1.a = 1]), rowset=256, 
      access([t1.a]), partitions(p1)
  3 - output([t2.a]), filter(nil), rowset=256
  4 - output([t2.a]), filter(nil), rowset=256, dop=1
  5 - output([t2.a]), filter(nil), rowset=256
  6 - output([t2.a]), filter(nil), rowset=256, 
      access([t2.a]), partitions(p[0-4])
  7 - output([t3.b]), filter(nil), rowset=256
  8 - output([t3.b]), filter(nil), rowset=256, dop=1
  9 - output([t3.b]), filter(nil), rowset=256
  10 - output([t3.b]), filter(nil), rowset=256, 
      access([t3.b]), partitions(p[0-4])

explain select a from t1 union distinct select a from t2 where a = 1 union distinct select b from t3;
Query Plan
======================================================
|ID|OPERATOR                 |NAME    |EST. ROWS|COST|
------------------------------------------------------
|0 |HASH DISTINCT            |        |1        |502 |
|1 | UNION ALL               |        |3        |502 |
|2 |  PX COORDINATOR         |        |1        |229 |
|3 |   EXCHANGE OUT DISTR    |:EX10000|1        |228 |
|4 |    PX PARTITION ITERATOR|        |1        |228 |
|5 |     TABLE SCAN          |t1      |1        |228 |
|6 |  TABLE SCAN             |t2      |1        |46  |
|7 |  PX COORDINATOR         |        |1        |229 |
|8 |   EXCHANGE OUT DISTR    |:EX20000|1        |228 |
|9 |    PX PARTITION ITERATOR|        |1        |228 |
|10|     TABLE SCAN          |t3      |1        |228 |
======================================================

Outputs & filters: 
-------------------------------------
  0 - output([UNION([1])]), filter(nil), rowset=256, 
      distinct([UNION([1])])
  1 - output([UNION([1])]), filter(nil), rowset=256
  2 - output([t1.a]), filter(nil), rowset=256
  3 - output([t1.a]), filter(nil), rowset=256, dop=1
  4 - output([t1.a]), filter(nil), rowset=256
  5 - output([t1.a]), filter(nil), rowset=256, 
      access([t1.a]), partitions(p[0-4])
  6 - output([t2.a]), filter([t2.a = 1]), rowset=256, 
      access([t2.a]), partitions(p1)
  7 - output([t3.b]), filter(nil), rowset=256
  8 - output([t3.b]), filter(nil), rowset=256, dop=1
  9 - output([t3.b]), filter(nil), rowset=256
  10 - output([t3.b]), filter(nil), rowset=256, 
      access([t3.b]), partitions(p[0-4])

explain select a from t1 where a = 1 union distinct select a from t2 where a = 1 union distinct select b from t3;
Query Plan
======================================================
|ID|OPERATOR                 |NAME    |EST. ROWS|COST|
------------------------------------------------------
|0 |HASH DISTINCT            |        |1        |320 |
|1 | UNION ALL               |        |3        |319 |
|2 |  TABLE SCAN             |t1      |1        |46  |
|3 |  TABLE SCAN             |t2      |1        |46  |
|4 |  PX COORDINATOR         |        |1        |229 |
|5 |   EXCHANGE OUT DISTR    |:EX10000|1        |228 |
|6 |    PX PARTITION ITERATOR|        |1        |228 |
|7 |     TABLE SCAN          |t3      |1        |228 |
======================================================

Outputs & filters: 
-------------------------------------
  0 - output([UNION([1])]), filter(nil), rowset=256, 
      distinct([UNION([1])])
  1 - output([UNION([1])]), filter(nil), rowset=256
  2 - output([t1.a]), filter([t1.a = 1]), rowset=256, 
      access([t1.a]), partitions(p1)
  3 - output([t2.a]), filter([t2.a = 1]), rowset=256, 
      access([t2.a]), partitions(p1)
  4 - output([t3.b]), filter(nil), rowset=256
  5 - output([t3.b]), filter(nil), rowset=256, dop=1
  6 - output([t3.b]), filter(nil), rowset=256
  7 - output([t3.b]), filter(nil), rowset=256, 
      access([t3.b]), partitions(p[0-4])

explain select 1 a union distinct select a from t1 union distinct select a from t2;
Query Plan
======================================================
|ID|OPERATOR                 |NAME    |EST. ROWS|COST|
------------------------------------------------------
|0 |HASH DISTINCT            |        |1        |457 |
|1 | UNION ALL               |        |3        |457 |
|2 |  EXPRESSION             |        |1        |1   |
|3 |  PX COORDINATOR         |        |1        |229 |
|4 |   EXCHANGE OUT DISTR    |:EX10000|1        |228 |
|5 |    PX PARTITION ITERATOR|        |1        |228 |
|6 |     TABLE SCAN          |t1      |1        |228 |
|7 |  PX COORDINATOR         |        |1        |229 |
|8 |   EXCHANGE OUT DISTR    |:EX20000|1        |228 |
|9 |    PX PARTITION ITERATOR|        |1        |228 |
|10|     TABLE SCAN          |t2      |1        |228 |
======================================================

Outputs & filters: 
-------------------------------------
  0 - output([UNION([1])]), filter(nil), rowset=256, 
      distinct([UNION([1])])
  1 - output([UNION([1])]), filter(nil), rowset=256
  2 - output([1]), filter(nil)
      values({1})
  3 - output([cast(t1.a, BIGINT(20, 0))]), filter(nil), rowset=256
  4 - output([t1.a]), filter(nil), rowset=256, dop=1
  5 - output([t1.a]), filter(nil), rowset=256
  6 - output([t1.a]), filter(nil), rowset=256, 
      access([t1.a]), partitions(p[0-4])
  7 - output([cast(t2.a, BIGINT(20, 0))]), filter(nil), rowset=256
  8 - output([t2.a]), filter(nil), rowset=256, dop=1
  9 - output([t2.a]), filter(nil), rowset=256
  10 - output([t2.a]), filter(nil), rowset=256, 
      access([t2.a]), partitions(p[0-4])

explain select a from t1 union distinct select 1 a union distinct select a from t2;
Query Plan
======================================================
|ID|OPERATOR                 |NAME    |EST. ROWS|COST|
------------------------------------------------------
|0 |HASH DISTINCT            |        |1        |457 |
|1 | UNION ALL               |        |3        |457 |
|2 |  PX COORDINATOR         |        |1        |229 |
|3 |   EXCHANGE OUT DISTR    |:EX10000|1        |228 |
|4 |    PX PARTITION ITERATOR|        |1        |228 |
|5 |     TABLE SCAN          |t1      |1        |228 |
|6 |  EXPRESSION             |        |1        |1   |
|7 |  PX COORDINATOR         |        |1        |229 |
|8 |   EXCHANGE OUT DISTR    |:EX20000|1        |228 |
|9 |    PX PARTITION ITERATOR|        |1        |228 |
|10|     TABLE SCAN          |t2      |1        |228 |
======================================================

Outputs & filters: 
-------------------------------------
  0 - output([UNION([1])]), filter(nil), rowset=256, 
      distinct([UNION([1])])
  1 - output([UNION([1])]), filter(nil), rowset=256
  2 - output([cast(t1.a, BIGINT(20, 0))]), filter(nil), rowset=256
  3 - output([t1.a]), filter(nil), rowset=256, dop=1
  4 - output([t1.a]), filter(nil), rowset=256
  5 - output([t1.a]), filter(nil), rowset=256, 
      access([t1.a]), partitions(p[0-4])
  6 - output([1]), filter(nil)
      values({1})
  7 - output([cast(t2.a, BIGINT(20, 0))]), filter(nil), rowset=256
  8 - output([t2.a]), filter(nil), rowset=256, dop=1
  9 - output([t2.a]), filter(nil), rowset=256
  10 - output([t2.a]), filter(nil), rowset=256, 
      access([t2.a]), partitions(p[0-4])

explain select a from t1 union distinct select a from t2 union distinct select 1 a;
Query Plan
======================================================
|ID|OPERATOR                 |NAME    |EST. ROWS|COST|
------------------------------------------------------
|0 |HASH DISTINCT            |        |1        |457 |
|1 | UNION ALL               |        |3        |457 |
|2 |  PX COORDINATOR         |        |1        |229 |
|3 |   EXCHANGE OUT DISTR    |:EX10000|1        |228 |
|4 |    PX PARTITION ITERATOR|        |1        |228 |
|5 |     TABLE SCAN          |t1      |1        |228 |
|6 |  PX COORDINATOR         |        |1        |229 |
|7 |   EXCHANGE OUT DISTR    |:EX20000|1        |228 |
|8 |    PX PARTITION ITERATOR|        |1        |228 |
|9 |     TABLE SCAN          |t2      |1        |228 |
|10|  EXPRESSION             |        |1        |1   |
======================================================

Outputs & filters: 
-------------------------------------
  0 - output([UNION([1])]), filter(nil), rowset=256, 
      distinct([UNION([1])])
  1 - output([UNION([1])]), filter(nil), rowset=256
  2 - output([cast(t1.a, BIGINT(20, 0))]), filter(nil), rowset=256
  3 - output([t1.a]), filter(nil), rowset=256, dop=1
  4 - output([t1.a]), filter(nil), rowset=256
  5 - output([t1.a]), filter(nil), rowset=256, 
      access([t1.a]), partitions(p[0-4])
  6 - output([cast(t2.a, BIGINT(20, 0))]), filter(nil), rowset=256
  7 - output([t2.a]), filter(nil), rowset=256, dop=1
  8 - output([t2.a]), filter(nil), rowset=256
  9 - output([t2.a]), filter(nil), rowset=256, 
      access([t2.a]), partitions(p[0-4])
  10 - output([1]), filter(nil)
      values({1})

explain select * from (select a from t1 union distinct select a from t2) as t3, t1 as t4 where t3.a = t4.a;
Query Plan
=====================================================
|ID|OPERATOR                |NAME    |EST. ROWS|COST|
-----------------------------------------------------
|0 |PX COORDINATOR          |        |1        |686 |
|1 | EXCHANGE OUT DISTR     |:EX10000|1        |685 |
|2 |  PX PARTITION ITERATOR |        |1        |684 |
|3 |   HASH JOIN            |        |1        |684 |
|4 |    TABLE SCAN          |t4      |1        |228 |
|5 |    SUBPLAN SCAN        |t3      |2        |456 |
|6 |     HASH UNION DISTINCT|        |2        |456 |
|7 |      TABLE SCAN        |t1      |1        |228 |
|8 |      TABLE SCAN        |t2      |1        |228 |
=====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t3.a, t4.a, t4.b, t4.c)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t3.a, t4.a, t4.b, t4.c)]), filter(nil), rowset=256, dop=1
  2 - output([t3.a], [t4.a], [t4.b], [t4.c]), filter(nil), rowset=256
  3 - output([t3.a], [t4.a], [t4.b], [t4.c]), filter(nil), rowset=256, 
      equal_conds([t3.a = t4.a]), other_conds(nil)
  4 - output([t4.a], [t4.b], [t4.c]), filter(nil), rowset=256, 
      access([t4.a], [t4.b], [t4.c]), partitions(p[0-4])
  5 - output([t3.a]), filter(nil), rowset=256, 
      access([t3.a])
  6 - output([UNION([1])]), filter(nil), rowset=256
  7 - output([t1.a]), filter(nil), rowset=256, 
      access([t1.a]), partitions(p[0-4])
  8 - output([t2.a]), filter(nil), rowset=256, 
      access([t2.a]), partitions(p[0-4])

explain select * from (select a from t1 union distinct select a from t2 union distinct select a from t3) as t4, t1 as t5 where t4.a = t5.a;
Query Plan
==============================================================
|ID|OPERATOR                         |NAME    |EST. ROWS|COST|
--------------------------------------------------------------
|0 |PX COORDINATOR                   |        |1        |914 |
|1 | EXCHANGE OUT DISTR              |:EX10002|1        |913 |
|2 |  HASH JOIN                      |        |1        |912 |
|3 |   EXCHANGE IN DISTR             |        |1        |684 |
|4 |    EXCHANGE OUT DISTR (PKEY)    |:EX10001|1        |684 |
|5 |     SUBPLAN SCAN                |t4      |1        |684 |
|6 |      HASH DISTINCT              |        |1        |684 |
|7 |       EXCHANGE IN DISTR         |        |1        |684 |
|8 |        EXCHANGE OUT DISTR (HASH)|:EX10000|1        |684 |
|9 |         HASH DISTINCT           |        |1        |683 |
|10|          PX PARTITION ITERATOR  |        |3        |683 |
|11|           UNION ALL             |        |3        |683 |
|12|            TABLE SCAN           |t1      |1        |228 |
|13|            TABLE SCAN           |t2      |1        |228 |
|14|            TABLE SCAN           |t3      |1        |228 |
|15|   PX PARTITION ITERATOR         |        |1        |228 |
|16|    TABLE SCAN                   |t5      |1        |228 |
==============================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t4.a, t5.a, t5.b, t5.c)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t4.a, t5.a, t5.b, t5.c)]), filter(nil), rowset=256, dop=1
  2 - output([t4.a], [t5.a], [t5.b], [t5.c]), filter(nil), rowset=256, 
      equal_conds([t4.a = t5.a]), other_conds(nil)
  3 - output([t4.a]), filter(nil), rowset=256
  4 - (#keys=1, [t4.a]), output([t4.a]), filter(nil), rowset=256, dop=1
  5 - output([t4.a]), filter(nil), rowset=256, 
      access([t4.a])
  6 - output([UNION([1])]), filter(nil), rowset=256, 
      distinct([UNION([1])])
  7 - output([UNION([1])]), filter(nil), rowset=256
  8 - (#keys=1, [UNION([1])]), output([UNION([1])]), filter(nil), rowset=256, dop=1
  9 - output([UNION([1])]), filter(nil), rowset=256, 
      distinct([UNION([1])])
  10 - output([UNION([1])]), filter(nil), rowset=256
  11 - output([UNION([1])]), filter(nil), rowset=256
  12 - output([t1.a]), filter(nil), rowset=256, 
      access([t1.a]), partitions(p[0-4])
  13 - output([t2.a]), filter(nil), rowset=256, 
      access([t2.a]), partitions(p[0-4])
  14 - output([t3.a]), filter(nil), rowset=256, 
      access([t3.a]), partitions(p[0-4])
  15 - output([t5.a], [t5.b], [t5.c]), filter(nil), rowset=256
  16 - output([t5.a], [t5.b], [t5.c]), filter(nil), rowset=256, 
      access([t5.a], [t5.b], [t5.c]), partitions(p[0-4])

explain select * from (select a from t1 union distinct select a from t2 union distinct select b from t3) as t4, t1 as t5 where t4.a = t5.a;
Query Plan
==============================================================
|ID|OPERATOR                         |NAME    |EST. ROWS|COST|
--------------------------------------------------------------
|0 |PX COORDINATOR                   |        |1        |914 |
|1 | EXCHANGE OUT DISTR              |:EX10002|1        |913 |
|2 |  HASH JOIN                      |        |1        |912 |
|3 |   EXCHANGE IN DISTR             |        |1        |684 |
|4 |    EXCHANGE OUT DISTR (PKEY)    |:EX10001|1        |684 |
|5 |     SUBPLAN SCAN                |t4      |1        |684 |
|6 |      HASH DISTINCT              |        |1        |684 |
|7 |       EXCHANGE IN DISTR         |        |1        |684 |
|8 |        EXCHANGE OUT DISTR (HASH)|:EX10000|1        |684 |
|9 |         HASH DISTINCT           |        |1        |683 |
|10|          PX PARTITION ITERATOR  |        |3        |683 |
|11|           UNION ALL             |        |3        |683 |
|12|            TABLE SCAN           |t1      |1        |228 |
|13|            TABLE SCAN           |t2      |1        |228 |
|14|            TABLE SCAN           |t3      |1        |228 |
|15|   PX PARTITION ITERATOR         |        |1        |228 |
|16|    TABLE SCAN                   |t5      |1        |228 |
==============================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t4.a, t5.a, t5.b, t5.c)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t4.a, t5.a, t5.b, t5.c)]), filter(nil), rowset=256, dop=1
  2 - output([t4.a], [t5.a], [t5.b], [t5.c]), filter(nil), rowset=256, 
      equal_conds([t4.a = t5.a]), other_conds(nil)
  3 - output([t4.a]), filter(nil), rowset=256
  4 - (#keys=1, [t4.a]), output([t4.a]), filter(nil), rowset=256, dop=1
  5 - output([t4.a]), filter(nil), rowset=256, 
      access([t4.a])
  6 - output([UNION([1])]), filter(nil), rowset=256, 
      distinct([UNION([1])])
  7 - output([UNION([1])]), filter(nil), rowset=256
  8 - (#keys=1, [UNION([1])]), output([UNION([1])]), filter(nil), rowset=256, dop=1
  9 - output([UNION([1])]), filter(nil), rowset=256, 
      distinct([UNION([1])])
  10 - output([UNION([1])]), filter(nil), rowset=256
  11 - output([UNION([1])]), filter(nil), rowset=256
  12 - output([t1.a]), filter(nil), rowset=256, 
      access([t1.a]), partitions(p[0-4])
  13 - output([t2.a]), filter(nil), rowset=256, 
      access([t2.a]), partitions(p[0-4])
  14 - output([t3.b]), filter(nil), rowset=256, 
      access([t3.b]), partitions(p[0-4])
  15 - output([t5.a], [t5.b], [t5.c]), filter(nil), rowset=256
  16 - output([t5.a], [t5.b], [t5.c]), filter(nil), rowset=256, 
      access([t5.a], [t5.b], [t5.c]), partitions(p[0-4])

explain select * from (select a from t1 union distinct select 1 a union distinct select b from t3) as t4, t1 as t5 where t4.a = t5.a;
Query Plan
============================================================
|ID|OPERATOR                       |NAME    |EST. ROWS|COST|
------------------------------------------------------------
|0 |PX COORDINATOR                 |        |1        |687 |
|1 | EXCHANGE OUT DISTR            |:EX10003|1        |687 |
|2 |  HASH JOIN                    |        |1        |685 |
|3 |   EXCHANGE IN DISTR           |        |1        |457 |
|4 |    EXCHANGE OUT DISTR (PKEY)  |:EX10002|1        |457 |
|5 |     SUBPLAN SCAN              |t4      |1        |457 |
|6 |      HASH DISTINCT            |        |1        |457 |
|7 |       UNION ALL               |        |3        |457 |
|8 |        EXCHANGE IN DISTR      |        |1        |229 |
|9 |         EXCHANGE OUT DISTR    |:EX10000|1        |228 |
|10|          PX PARTITION ITERATOR|        |1        |228 |
|11|           TABLE SCAN          |t1      |1        |228 |
|12|        EXPRESSION             |        |1        |1   |
|13|        EXCHANGE IN DISTR      |        |1        |229 |
|14|         EXCHANGE OUT DISTR    |:EX10001|1        |228 |
|15|          PX PARTITION ITERATOR|        |1        |228 |
|16|           TABLE SCAN          |t3      |1        |228 |
|17|   PX PARTITION ITERATOR       |        |1        |228 |
|18|    TABLE SCAN                 |t5      |1        |228 |
============================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t4.a, t5.a, t5.b, t5.c)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t4.a, t5.a, t5.b, t5.c)]), filter(nil), rowset=256, dop=1
  2 - output([t4.a], [t5.a], [t5.b], [t5.c]), filter(nil), rowset=256, 
      equal_conds([t4.a = t5.a]), other_conds(nil)
  3 - output([t4.a]), filter(nil), rowset=256
  4 - (#keys=1, [t4.a]), output([t4.a]), filter(nil), rowset=256, is_single, dop=1
  5 - output([t4.a]), filter(nil), rowset=256, 
      access([t4.a])
  6 - output([UNION([1])]), filter(nil), rowset=256, 
      distinct([UNION([1])])
  7 - output([UNION([1])]), filter(nil), rowset=256
  8 - output([cast(t1.a, BIGINT(20, 0))]), filter(nil), rowset=256
  9 - output([t1.a]), filter(nil), rowset=256, dop=1
  10 - output([t1.a]), filter(nil), rowset=256
  11 - output([t1.a]), filter(nil), rowset=256, 
      access([t1.a]), partitions(p[0-4])
  12 - output([1]), filter(nil)
      values({1})
  13 - output([cast(t3.b, BIGINT(20, 0))]), filter(nil), rowset=256
  14 - output([t3.b]), filter(nil), rowset=256, dop=1
  15 - output([t3.b]), filter(nil), rowset=256
  16 - output([t3.b]), filter(nil), rowset=256, 
      access([t3.b]), partitions(p[0-4])
  17 - output([t5.a], [t5.b], [t5.c]), filter(nil), rowset=256
  18 - output([t5.a], [t5.b], [t5.c]), filter(nil), rowset=256, 
      access([t5.a], [t5.b], [t5.c]), partitions(p[0-4])

explain select * from (select 1 a union distinct select a from t1 union distinct select b from t2) as t3, t1 as t4 where t3.a = t4.a;
Query Plan
============================================================
|ID|OPERATOR                       |NAME    |EST. ROWS|COST|
------------------------------------------------------------
|0 |PX COORDINATOR                 |        |1        |687 |
|1 | EXCHANGE OUT DISTR            |:EX10003|1        |687 |
|2 |  HASH JOIN                    |        |1        |685 |
|3 |   EXCHANGE IN DISTR           |        |1        |457 |
|4 |    EXCHANGE OUT DISTR (PKEY)  |:EX10002|1        |457 |
|5 |     SUBPLAN SCAN              |t3      |1        |457 |
|6 |      HASH DISTINCT            |        |1        |457 |
|7 |       UNION ALL               |        |3        |457 |
|8 |        EXPRESSION             |        |1        |1   |
|9 |        EXCHANGE IN DISTR      |        |1        |229 |
|10|         EXCHANGE OUT DISTR    |:EX10000|1        |228 |
|11|          PX PARTITION ITERATOR|        |1        |228 |
|12|           TABLE SCAN          |t1      |1        |228 |
|13|        EXCHANGE IN DISTR      |        |1        |229 |
|14|         EXCHANGE OUT DISTR    |:EX10001|1        |228 |
|15|          PX PARTITION ITERATOR|        |1        |228 |
|16|           TABLE SCAN          |t2      |1        |228 |
|17|   PX PARTITION ITERATOR       |        |1        |228 |
|18|    TABLE SCAN                 |t4      |1        |228 |
============================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t3.a, t4.a, t4.b, t4.c)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t3.a, t4.a, t4.b, t4.c)]), filter(nil), rowset=256, dop=1
  2 - output([t3.a], [t4.a], [t4.b], [t4.c]), filter(nil), rowset=256, 
      equal_conds([t3.a = t4.a]), other_conds(nil)
  3 - output([t3.a]), filter(nil), rowset=256
  4 - (#keys=1, [t3.a]), output([t3.a]), filter(nil), rowset=256, is_single, dop=1
  5 - output([t3.a]), filter(nil), rowset=256, 
      access([t3.a])
  6 - output([UNION([1])]), filter(nil), rowset=256, 
      distinct([UNION([1])])
  7 - output([UNION([1])]), filter(nil), rowset=256
  8 - output([1]), filter(nil)
      values({1})
  9 - output([cast(t1.a, BIGINT(20, 0))]), filter(nil), rowset=256
  10 - output([t1.a]), filter(nil), rowset=256, dop=1
  11 - output([t1.a]), filter(nil), rowset=256
  12 - output([t1.a]), filter(nil), rowset=256, 
      access([t1.a]), partitions(p[0-4])
  13 - output([cast(t2.b, BIGINT(20, 0))]), filter(nil), rowset=256
  14 - output([t2.b]), filter(nil), rowset=256, dop=1
  15 - output([t2.b]), filter(nil), rowset=256
  16 - output([t2.b]), filter(nil), rowset=256, 
      access([t2.b]), partitions(p[0-4])
  17 - output([t4.a], [t4.b], [t4.c]), filter(nil), rowset=256
  18 - output([t4.a], [t4.b], [t4.c]), filter(nil), rowset=256, 
      access([t4.a], [t4.b], [t4.c]), partitions(p[0-4])

explain select * from (select a from t1 union distinct select a from t2 union distinct select 1 a) as t3, t1 as t4 where t3.a = t4.a;
Query Plan
============================================================
|ID|OPERATOR                       |NAME    |EST. ROWS|COST|
------------------------------------------------------------
|0 |PX COORDINATOR                 |        |1        |687 |
|1 | EXCHANGE OUT DISTR            |:EX10003|1        |687 |
|2 |  HASH JOIN                    |        |1        |685 |
|3 |   EXCHANGE IN DISTR           |        |1        |457 |
|4 |    EXCHANGE OUT DISTR (PKEY)  |:EX10002|1        |457 |
|5 |     SUBPLAN SCAN              |t3      |1        |457 |
|6 |      HASH DISTINCT            |        |1        |457 |
|7 |       UNION ALL               |        |3        |457 |
|8 |        EXCHANGE IN DISTR      |        |1        |229 |
|9 |         EXCHANGE OUT DISTR    |:EX10000|1        |228 |
|10|          PX PARTITION ITERATOR|        |1        |228 |
|11|           TABLE SCAN          |t1      |1        |228 |
|12|        EXCHANGE IN DISTR      |        |1        |229 |
|13|         EXCHANGE OUT DISTR    |:EX10001|1        |228 |
|14|          PX PARTITION ITERATOR|        |1        |228 |
|15|           TABLE SCAN          |t2      |1        |228 |
|16|        EXPRESSION             |        |1        |1   |
|17|   PX PARTITION ITERATOR       |        |1        |228 |
|18|    TABLE SCAN                 |t4      |1        |228 |
============================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t3.a, t4.a, t4.b, t4.c)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t3.a, t4.a, t4.b, t4.c)]), filter(nil), rowset=256, dop=1
  2 - output([t3.a], [t4.a], [t4.b], [t4.c]), filter(nil), rowset=256, 
      equal_conds([t3.a = t4.a]), other_conds(nil)
  3 - output([t3.a]), filter(nil), rowset=256
  4 - (#keys=1, [t3.a]), output([t3.a]), filter(nil), rowset=256, is_single, dop=1
  5 - output([t3.a]), filter(nil), rowset=256, 
      access([t3.a])
  6 - output([UNION([1])]), filter(nil), rowset=256, 
      distinct([UNION([1])])
  7 - output([UNION([1])]), filter(nil), rowset=256
  8 - output([cast(t1.a, BIGINT(20, 0))]), filter(nil), rowset=256
  9 - output([t1.a]), filter(nil), rowset=256, dop=1
  10 - output([t1.a]), filter(nil), rowset=256
  11 - output([t1.a]), filter(nil), rowset=256, 
      access([t1.a]), partitions(p[0-4])
  12 - output([cast(t2.a, BIGINT(20, 0))]), filter(nil), rowset=256
  13 - output([t2.a]), filter(nil), rowset=256, dop=1
  14 - output([t2.a]), filter(nil), rowset=256
  15 - output([t2.a]), filter(nil), rowset=256, 
      access([t2.a]), partitions(p[0-4])
  16 - output([1]), filter(nil)
      values({1})
  17 - output([t4.a], [t4.b], [t4.c]), filter(nil), rowset=256
  18 - output([t4.a], [t4.b], [t4.c]), filter(nil), rowset=256, 
      access([t4.a], [t4.b], [t4.c]), partitions(p[0-4])

explain select * from (select t2.a from t1, t2 where t1.a = t2.a union distinct select a from t1 as t3) as t4, t2 as t5 where t4.a = t5.a;
Query Plan
=====================================================
|ID|OPERATOR                |NAME    |EST. ROWS|COST|
-----------------------------------------------------
|0 |PX COORDINATOR          |        |1        |914 |
|1 | EXCHANGE OUT DISTR     |:EX10000|1        |913 |
|2 |  PX PARTITION ITERATOR |        |1        |912 |
|3 |   HASH JOIN            |        |1        |912 |
|4 |    TABLE SCAN          |t5      |1        |228 |
|5 |    SUBPLAN SCAN        |t4      |2        |684 |
|6 |     HASH UNION DISTINCT|        |2        |684 |
|7 |      HASH JOIN         |        |1        |456 |
|8 |       TABLE SCAN       |t1      |1        |228 |
|9 |       TABLE SCAN       |t2      |1        |228 |
|10|      TABLE SCAN        |t3      |1        |228 |
=====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t4.a, t5.a, t5.b, t5.c)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t4.a, t5.a, t5.b, t5.c)]), filter(nil), rowset=256, dop=1
  2 - output([t4.a], [t5.a], [t5.b], [t5.c]), filter(nil), rowset=256
  3 - output([t4.a], [t5.a], [t5.b], [t5.c]), filter(nil), rowset=256, 
      equal_conds([t4.a = t5.a]), other_conds(nil)
  4 - output([t5.a], [t5.b], [t5.c]), filter(nil), rowset=256, 
      access([t5.a], [t5.b], [t5.c]), partitions(p[0-4])
  5 - output([t4.a]), filter(nil), rowset=256, 
      access([t4.a])
  6 - output([UNION([1])]), filter(nil), rowset=256
  7 - output([t2.a]), filter(nil), rowset=256, 
      equal_conds([t1.a = t2.a]), other_conds(nil)
  8 - output([t1.a]), filter(nil), rowset=256, 
      access([t1.a]), partitions(p[0-4])
  9 - output([t2.a]), filter(nil), rowset=256, 
      access([t2.a]), partitions(p[0-4])
  10 - output([t3.a]), filter(nil), rowset=256, 
      access([t3.a]), partitions(p[0-4])

explain select a from t1 union all select a from t2;
Query Plan
====================================================
|ID|OPERATOR               |NAME    |EST. ROWS|COST|
----------------------------------------------------
|0 |PX COORDINATOR         |        |2        |457 |
|1 | EXCHANGE OUT DISTR    |:EX10000|2        |456 |
|2 |  PX PARTITION ITERATOR|        |2        |456 |
|3 |   UNION ALL           |        |2        |456 |
|4 |    TABLE SCAN         |t1      |1        |228 |
|5 |    TABLE SCAN         |t2      |1        |228 |
====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(UNION([1]))]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(UNION([1]))]), filter(nil), rowset=256, dop=1
  2 - output([UNION([1])]), filter(nil), rowset=256
  3 - output([UNION([1])]), filter(nil), rowset=256
  4 - output([t1.a]), filter(nil), rowset=256, 
      access([t1.a]), partitions(p[0-4])
  5 - output([t2.a]), filter(nil), rowset=256, 
      access([t2.a]), partitions(p[0-4])

explain select a from t1 where a = 1 union all select a from t2;
Query Plan
=====================================================
|ID|OPERATOR                |NAME    |EST. ROWS|COST|
-----------------------------------------------------
|0 |UNION ALL               |        |2        |274 |
|1 | TABLE SCAN             |t1      |1        |46  |
|2 | PX COORDINATOR         |        |1        |229 |
|3 |  EXCHANGE OUT DISTR    |:EX10000|1        |228 |
|4 |   PX PARTITION ITERATOR|        |1        |228 |
|5 |    TABLE SCAN          |t2      |1        |228 |
=====================================================

Outputs & filters: 
-------------------------------------
  0 - output([UNION([1])]), filter(nil), rowset=256
  1 - output([t1.a]), filter([t1.a = 1]), rowset=256, 
      access([t1.a]), partitions(p1)
  2 - output([t2.a]), filter(nil), rowset=256
  3 - output([t2.a]), filter(nil), rowset=256, dop=1
  4 - output([t2.a]), filter(nil), rowset=256
  5 - output([t2.a]), filter(nil), rowset=256, 
      access([t2.a]), partitions(p[0-4])

explain select a from t1 union all select a from t2 where a = 1;
Query Plan
=====================================================
|ID|OPERATOR                |NAME    |EST. ROWS|COST|
-----------------------------------------------------
|0 |UNION ALL               |        |2        |274 |
|1 | PX COORDINATOR         |        |1        |229 |
|2 |  EXCHANGE OUT DISTR    |:EX10000|1        |228 |
|3 |   PX PARTITION ITERATOR|        |1        |228 |
|4 |    TABLE SCAN          |t1      |1        |228 |
|5 | TABLE SCAN             |t2      |1        |46  |
=====================================================

Outputs & filters: 
-------------------------------------
  0 - output([UNION([1])]), filter(nil), rowset=256
  1 - output([t1.a]), filter(nil), rowset=256
  2 - output([t1.a]), filter(nil), rowset=256, dop=1
  3 - output([t1.a]), filter(nil), rowset=256
  4 - output([t1.a]), filter(nil), rowset=256, 
      access([t1.a]), partitions(p[0-4])
  5 - output([t2.a]), filter([t2.a = 1]), rowset=256, 
      access([t2.a]), partitions(p1)

explain select a from t1 where a = 1 union all select a from t2 where a = 1;
Query Plan
====================================
|ID|OPERATOR   |NAME|EST. ROWS|COST|
------------------------------------
|0 |UNION ALL  |    |2        |91  |
|1 | TABLE SCAN|t1  |1        |46  |
|2 | TABLE SCAN|t2  |1        |46  |
====================================

Outputs & filters: 
-------------------------------------
  0 - output([UNION([1])]), filter(nil), rowset=256
  1 - output([t1.a]), filter([t1.a = 1]), rowset=256, 
      access([t1.a]), partitions(p1)
  2 - output([t2.a]), filter([t2.a = 1]), rowset=256, 
      access([t2.a]), partitions(p1)

explain select a from t1 union all select a from t2 union all select b from t3;
Query Plan
====================================================
|ID|OPERATOR               |NAME    |EST. ROWS|COST|
----------------------------------------------------
|0 |PX COORDINATOR         |        |3        |685 |
|1 | EXCHANGE OUT DISTR    |:EX10000|3        |684 |
|2 |  PX PARTITION ITERATOR|        |3        |683 |
|3 |   UNION ALL           |        |3        |683 |
|4 |    TABLE SCAN         |t1      |1        |228 |
|5 |    TABLE SCAN         |t2      |1        |228 |
|6 |    TABLE SCAN         |t3      |1        |228 |
====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(UNION([1]))]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(UNION([1]))]), filter(nil), rowset=256, dop=1
  2 - output([UNION([1])]), filter(nil), rowset=256
  3 - output([UNION([1])]), filter(nil), rowset=256
  4 - output([t1.a]), filter(nil), rowset=256, 
      access([t1.a]), partitions(p[0-4])
  5 - output([t2.a]), filter(nil), rowset=256, 
      access([t2.a]), partitions(p[0-4])
  6 - output([t3.b]), filter(nil), rowset=256, 
      access([t3.b]), partitions(p[0-4])

explain select a from t1 where a = 1 union all select a from t2 union all select b from t3;
Query Plan
=====================================================
|ID|OPERATOR                |NAME    |EST. ROWS|COST|
-----------------------------------------------------
|0 |UNION ALL               |        |3        |502 |
|1 | TABLE SCAN             |t1      |1        |46  |
|2 | PX COORDINATOR         |        |1        |229 |
|3 |  EXCHANGE OUT DISTR    |:EX10000|1        |228 |
|4 |   PX PARTITION ITERATOR|        |1        |228 |
|5 |    TABLE SCAN          |t2      |1        |228 |
|6 | PX COORDINATOR         |        |1        |229 |
|7 |  EXCHANGE OUT DISTR    |:EX20000|1        |228 |
|8 |   PX PARTITION ITERATOR|        |1        |228 |
|9 |    TABLE SCAN          |t3      |1        |228 |
=====================================================

Outputs & filters: 
-------------------------------------
  0 - output([UNION([1])]), filter(nil), rowset=256
  1 - output([t1.a]), filter([t1.a = 1]), rowset=256, 
      access([t1.a]), partitions(p1)
  2 - output([t2.a]), filter(nil), rowset=256
  3 - output([t2.a]), filter(nil), rowset=256, dop=1
  4 - output([t2.a]), filter(nil), rowset=256
  5 - output([t2.a]), filter(nil), rowset=256, 
      access([t2.a]), partitions(p[0-4])
  6 - output([t3.b]), filter(nil), rowset=256
  7 - output([t3.b]), filter(nil), rowset=256, dop=1
  8 - output([t3.b]), filter(nil), rowset=256
  9 - output([t3.b]), filter(nil), rowset=256, 
      access([t3.b]), partitions(p[0-4])

explain select a from t1 union all select a from t2 where a = 1 union all select b from t3;
Query Plan
=====================================================
|ID|OPERATOR                |NAME    |EST. ROWS|COST|
-----------------------------------------------------
|0 |UNION ALL               |        |3        |502 |
|1 | PX COORDINATOR         |        |1        |229 |
|2 |  EXCHANGE OUT DISTR    |:EX10000|1        |228 |
|3 |   PX PARTITION ITERATOR|        |1        |228 |
|4 |    TABLE SCAN          |t1      |1        |228 |
|5 | TABLE SCAN             |t2      |1        |46  |
|6 | PX COORDINATOR         |        |1        |229 |
|7 |  EXCHANGE OUT DISTR    |:EX20000|1        |228 |
|8 |   PX PARTITION ITERATOR|        |1        |228 |
|9 |    TABLE SCAN          |t3      |1        |228 |
=====================================================

Outputs & filters: 
-------------------------------------
  0 - output([UNION([1])]), filter(nil), rowset=256
  1 - output([t1.a]), filter(nil), rowset=256
  2 - output([t1.a]), filter(nil), rowset=256, dop=1
  3 - output([t1.a]), filter(nil), rowset=256
  4 - output([t1.a]), filter(nil), rowset=256, 
      access([t1.a]), partitions(p[0-4])
  5 - output([t2.a]), filter([t2.a = 1]), rowset=256, 
      access([t2.a]), partitions(p1)
  6 - output([t3.b]), filter(nil), rowset=256
  7 - output([t3.b]), filter(nil), rowset=256, dop=1
  8 - output([t3.b]), filter(nil), rowset=256
  9 - output([t3.b]), filter(nil), rowset=256, 
      access([t3.b]), partitions(p[0-4])

explain select a from t1 where a = 1 union all select a from t2 where a = 1 union all select b from t3;
Query Plan
=====================================================
|ID|OPERATOR                |NAME    |EST. ROWS|COST|
-----------------------------------------------------
|0 |UNION ALL               |        |3        |319 |
|1 | TABLE SCAN             |t1      |1        |46  |
|2 | TABLE SCAN             |t2      |1        |46  |
|3 | PX COORDINATOR         |        |1        |229 |
|4 |  EXCHANGE OUT DISTR    |:EX10000|1        |228 |
|5 |   PX PARTITION ITERATOR|        |1        |228 |
|6 |    TABLE SCAN          |t3      |1        |228 |
=====================================================

Outputs & filters: 
-------------------------------------
  0 - output([UNION([1])]), filter(nil), rowset=256
  1 - output([t1.a]), filter([t1.a = 1]), rowset=256, 
      access([t1.a]), partitions(p1)
  2 - output([t2.a]), filter([t2.a = 1]), rowset=256, 
      access([t2.a]), partitions(p1)
  3 - output([t3.b]), filter(nil), rowset=256
  4 - output([t3.b]), filter(nil), rowset=256, dop=1
  5 - output([t3.b]), filter(nil), rowset=256
  6 - output([t3.b]), filter(nil), rowset=256, 
      access([t3.b]), partitions(p[0-4])

explain select 1 a union all select a from t1 union all select a from t2;
Query Plan
=====================================================
|ID|OPERATOR                |NAME    |EST. ROWS|COST|
-----------------------------------------------------
|0 |UNION ALL               |        |3        |457 |
|1 | EXPRESSION             |        |1        |1   |
|2 | PX COORDINATOR         |        |1        |229 |
|3 |  EXCHANGE OUT DISTR    |:EX10000|1        |228 |
|4 |   PX PARTITION ITERATOR|        |1        |228 |
|5 |    TABLE SCAN          |t1      |1        |228 |
|6 | PX COORDINATOR         |        |1        |229 |
|7 |  EXCHANGE OUT DISTR    |:EX20000|1        |228 |
|8 |   PX PARTITION ITERATOR|        |1        |228 |
|9 |    TABLE SCAN          |t2      |1        |228 |
=====================================================

Outputs & filters: 
-------------------------------------
  0 - output([UNION([1])]), filter(nil), rowset=256
  1 - output([1]), filter(nil)
      values({1})
  2 - output([cast(t1.a, BIGINT(20, 0))]), filter(nil), rowset=256
  3 - output([t1.a]), filter(nil), rowset=256, dop=1
  4 - output([t1.a]), filter(nil), rowset=256
  5 - output([t1.a]), filter(nil), rowset=256, 
      access([t1.a]), partitions(p[0-4])
  6 - output([cast(t2.a, BIGINT(20, 0))]), filter(nil), rowset=256
  7 - output([t2.a]), filter(nil), rowset=256, dop=1
  8 - output([t2.a]), filter(nil), rowset=256
  9 - output([t2.a]), filter(nil), rowset=256, 
      access([t2.a]), partitions(p[0-4])

explain select a from t1 union all select 1 a union all select a from t2;
Query Plan
=====================================================
|ID|OPERATOR                |NAME    |EST. ROWS|COST|
-----------------------------------------------------
|0 |UNION ALL               |        |3        |457 |
|1 | PX COORDINATOR         |        |1        |229 |
|2 |  EXCHANGE OUT DISTR    |:EX10000|1        |228 |
|3 |   PX PARTITION ITERATOR|        |1        |228 |
|4 |    TABLE SCAN          |t1      |1        |228 |
|5 | EXPRESSION             |        |1        |1   |
|6 | PX COORDINATOR         |        |1        |229 |
|7 |  EXCHANGE OUT DISTR    |:EX20000|1        |228 |
|8 |   PX PARTITION ITERATOR|        |1        |228 |
|9 |    TABLE SCAN          |t2      |1        |228 |
=====================================================

Outputs & filters: 
-------------------------------------
  0 - output([UNION([1])]), filter(nil), rowset=256
  1 - output([cast(t1.a, BIGINT(20, 0))]), filter(nil), rowset=256
  2 - output([t1.a]), filter(nil), rowset=256, dop=1
  3 - output([t1.a]), filter(nil), rowset=256
  4 - output([t1.a]), filter(nil), rowset=256, 
      access([t1.a]), partitions(p[0-4])
  5 - output([1]), filter(nil)
      values({1})
  6 - output([cast(t2.a, BIGINT(20, 0))]), filter(nil), rowset=256
  7 - output([t2.a]), filter(nil), rowset=256, dop=1
  8 - output([t2.a]), filter(nil), rowset=256
  9 - output([t2.a]), filter(nil), rowset=256, 
      access([t2.a]), partitions(p[0-4])

explain select a from t1 union all select a from t2 union all select 1 a;
Query Plan
=====================================================
|ID|OPERATOR                |NAME    |EST. ROWS|COST|
-----------------------------------------------------
|0 |UNION ALL               |        |3        |457 |
|1 | PX COORDINATOR         |        |1        |229 |
|2 |  EXCHANGE OUT DISTR    |:EX10000|1        |228 |
|3 |   PX PARTITION ITERATOR|        |1        |228 |
|4 |    TABLE SCAN          |t1      |1        |228 |
|5 | PX COORDINATOR         |        |1        |229 |
|6 |  EXCHANGE OUT DISTR    |:EX20000|1        |228 |
|7 |   PX PARTITION ITERATOR|        |1        |228 |
|8 |    TABLE SCAN          |t2      |1        |228 |
|9 | EXPRESSION             |        |1        |1   |
=====================================================

Outputs & filters: 
-------------------------------------
  0 - output([UNION([1])]), filter(nil), rowset=256
  1 - output([cast(t1.a, BIGINT(20, 0))]), filter(nil), rowset=256
  2 - output([t1.a]), filter(nil), rowset=256, dop=1
  3 - output([t1.a]), filter(nil), rowset=256
  4 - output([t1.a]), filter(nil), rowset=256, 
      access([t1.a]), partitions(p[0-4])
  5 - output([cast(t2.a, BIGINT(20, 0))]), filter(nil), rowset=256
  6 - output([t2.a]), filter(nil), rowset=256, dop=1
  7 - output([t2.a]), filter(nil), rowset=256
  8 - output([t2.a]), filter(nil), rowset=256, 
      access([t2.a]), partitions(p[0-4])
  9 - output([1]), filter(nil)
      values({1})

explain select * from (select a from t1 union all select a from t2) as t3, t1 as t4 where t3.a = t4.a;
Query Plan
==========================================================
|ID|OPERATOR                     |NAME    |EST. ROWS|COST|
----------------------------------------------------------
|0 |PX COORDINATOR               |        |1        |686 |
|1 | EXCHANGE OUT DISTR          |:EX10001|1        |686 |
|2 |  HASH JOIN                  |        |1        |684 |
|3 |   PX PARTITION ITERATOR     |        |1        |228 |
|4 |    TABLE SCAN               |t4      |1        |228 |
|5 |   EXCHANGE IN DISTR         |        |2        |457 |
|6 |    EXCHANGE OUT DISTR (PKEY)|:EX10000|2        |456 |
|7 |     SUBPLAN SCAN            |t3      |2        |456 |
|8 |      PX PARTITION ITERATOR  |        |2        |456 |
|9 |       UNION ALL             |        |2        |456 |
|10|        TABLE SCAN           |t1      |1        |228 |
|11|        TABLE SCAN           |t2      |1        |228 |
==========================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t3.a, t4.a, t4.b, t4.c)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t3.a, t4.a, t4.b, t4.c)]), filter(nil), rowset=256, dop=1
  2 - output([t3.a], [t4.a], [t4.b], [t4.c]), filter(nil), rowset=256, 
      equal_conds([t3.a = t4.a]), other_conds(nil)
  3 - output([t4.a], [t4.b], [t4.c]), filter(nil), rowset=256
  4 - output([t4.a], [t4.b], [t4.c]), filter(nil), rowset=256, 
      access([t4.a], [t4.b], [t4.c]), partitions(p[0-4])
  5 - output([t3.a]), filter(nil), rowset=256
  6 - (#keys=1, [t3.a]), output([t3.a]), filter(nil), rowset=256, dop=1
  7 - output([t3.a]), filter(nil), rowset=256, 
      access([t3.a])
  8 - output([UNION([1])]), filter(nil), rowset=256
  9 - output([UNION([1])]), filter(nil), rowset=256
  10 - output([t1.a]), filter(nil), rowset=256, 
      access([t1.a]), partitions(p[0-4])
  11 - output([t2.a]), filter(nil), rowset=256, 
      access([t2.a]), partitions(p[0-4])

explain select * from (select a from t1 union all select a from t2 union all select a from t3) as t4, t1 as t5 where t4.a = t5.a;
Query Plan
==========================================================
|ID|OPERATOR                     |NAME    |EST. ROWS|COST|
----------------------------------------------------------
|0 |PX COORDINATOR               |        |1        |915 |
|1 | EXCHANGE OUT DISTR          |:EX10001|1        |914 |
|2 |  HASH JOIN                  |        |1        |913 |
|3 |   PX PARTITION ITERATOR     |        |1        |228 |
|4 |    TABLE SCAN               |t5      |1        |228 |
|5 |   EXCHANGE IN DISTR         |        |3        |685 |
|6 |    EXCHANGE OUT DISTR (PKEY)|:EX10000|3        |684 |
|7 |     SUBPLAN SCAN            |t4      |3        |683 |
|8 |      PX PARTITION ITERATOR  |        |3        |683 |
|9 |       UNION ALL             |        |3        |683 |
|10|        TABLE SCAN           |t1      |1        |228 |
|11|        TABLE SCAN           |t2      |1        |228 |
|12|        TABLE SCAN           |t3      |1        |228 |
==========================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t4.a, t5.a, t5.b, t5.c)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t4.a, t5.a, t5.b, t5.c)]), filter(nil), rowset=256, dop=1
  2 - output([t4.a], [t5.a], [t5.b], [t5.c]), filter(nil), rowset=256, 
      equal_conds([t4.a = t5.a]), other_conds(nil)
  3 - output([t5.a], [t5.b], [t5.c]), filter(nil), rowset=256
  4 - output([t5.a], [t5.b], [t5.c]), filter(nil), rowset=256, 
      access([t5.a], [t5.b], [t5.c]), partitions(p[0-4])
  5 - output([t4.a]), filter(nil), rowset=256
  6 - (#keys=1, [t4.a]), output([t4.a]), filter(nil), rowset=256, dop=1
  7 - output([t4.a]), filter(nil), rowset=256, 
      access([t4.a])
  8 - output([UNION([1])]), filter(nil), rowset=256
  9 - output([UNION([1])]), filter(nil), rowset=256
  10 - output([t1.a]), filter(nil), rowset=256, 
      access([t1.a]), partitions(p[0-4])
  11 - output([t2.a]), filter(nil), rowset=256, 
      access([t2.a]), partitions(p[0-4])
  12 - output([t3.a]), filter(nil), rowset=256, 
      access([t3.a]), partitions(p[0-4])

explain select * from (select a from t1 union all select a from t2 union all select b from t3) as t4, t1 as t5 where t4.a = t5.a;
Query Plan
==========================================================
|ID|OPERATOR                     |NAME    |EST. ROWS|COST|
----------------------------------------------------------
|0 |PX COORDINATOR               |        |1        |915 |
|1 | EXCHANGE OUT DISTR          |:EX10001|1        |914 |
|2 |  HASH JOIN                  |        |1        |913 |
|3 |   PX PARTITION ITERATOR     |        |1        |228 |
|4 |    TABLE SCAN               |t5      |1        |228 |
|5 |   EXCHANGE IN DISTR         |        |3        |685 |
|6 |    EXCHANGE OUT DISTR (PKEY)|:EX10000|3        |684 |
|7 |     SUBPLAN SCAN            |t4      |3        |683 |
|8 |      PX PARTITION ITERATOR  |        |3        |683 |
|9 |       UNION ALL             |        |3        |683 |
|10|        TABLE SCAN           |t1      |1        |228 |
|11|        TABLE SCAN           |t2      |1        |228 |
|12|        TABLE SCAN           |t3      |1        |228 |
==========================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t4.a, t5.a, t5.b, t5.c)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t4.a, t5.a, t5.b, t5.c)]), filter(nil), rowset=256, dop=1
  2 - output([t4.a], [t5.a], [t5.b], [t5.c]), filter(nil), rowset=256, 
      equal_conds([t4.a = t5.a]), other_conds(nil)
  3 - output([t5.a], [t5.b], [t5.c]), filter(nil), rowset=256
  4 - output([t5.a], [t5.b], [t5.c]), filter(nil), rowset=256, 
      access([t5.a], [t5.b], [t5.c]), partitions(p[0-4])
  5 - output([t4.a]), filter(nil), rowset=256
  6 - (#keys=1, [t4.a]), output([t4.a]), filter(nil), rowset=256, dop=1
  7 - output([t4.a]), filter(nil), rowset=256, 
      access([t4.a])
  8 - output([UNION([1])]), filter(nil), rowset=256
  9 - output([UNION([1])]), filter(nil), rowset=256
  10 - output([t1.a]), filter(nil), rowset=256, 
      access([t1.a]), partitions(p[0-4])
  11 - output([t2.a]), filter(nil), rowset=256, 
      access([t2.a]), partitions(p[0-4])
  12 - output([t3.b]), filter(nil), rowset=256, 
      access([t3.b]), partitions(p[0-4])

explain select * from (select a from t1 union all select 1 a union all select b from t3) as t4, t1 as t5 where t4.a = t5.a;
Query Plan
===========================================================
|ID|OPERATOR                      |NAME    |EST. ROWS|COST|
-----------------------------------------------------------
|0 |PX COORDINATOR                |        |1        |688 |
|1 | EXCHANGE OUT DISTR           |:EX10003|1        |687 |
|2 |  HASH JOIN                   |        |1        |686 |
|3 |   PX PARTITION ITERATOR      |        |1        |228 |
|4 |    TABLE SCAN                |t5      |1        |228 |
|5 |   EXCHANGE IN DISTR          |        |3        |458 |
|6 |    EXCHANGE OUT DISTR (PKEY) |:EX10002|3        |458 |
|7 |     SUBPLAN SCAN             |t4      |3        |457 |
|8 |      UNION ALL               |        |3        |457 |
|9 |       EXCHANGE IN DISTR      |        |1        |229 |
|10|        EXCHANGE OUT DISTR    |:EX10000|1        |228 |
|11|         PX PARTITION ITERATOR|        |1        |228 |
|12|          TABLE SCAN          |t1      |1        |228 |
|13|       EXPRESSION             |        |1        |1   |
|14|       EXCHANGE IN DISTR      |        |1        |229 |
|15|        EXCHANGE OUT DISTR    |:EX10001|1        |228 |
|16|         PX PARTITION ITERATOR|        |1        |228 |
|17|          TABLE SCAN          |t3      |1        |228 |
===========================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t4.a, t5.a, t5.b, t5.c)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t4.a, t5.a, t5.b, t5.c)]), filter(nil), rowset=256, dop=1
  2 - output([t4.a], [t5.a], [t5.b], [t5.c]), filter(nil), rowset=256, 
      equal_conds([t4.a = t5.a]), other_conds(nil)
  3 - output([t5.a], [t5.b], [t5.c]), filter(nil), rowset=256
  4 - output([t5.a], [t5.b], [t5.c]), filter(nil), rowset=256, 
      access([t5.a], [t5.b], [t5.c]), partitions(p[0-4])
  5 - output([t4.a]), filter(nil), rowset=256
  6 - (#keys=1, [t4.a]), output([t4.a]), filter(nil), rowset=256, is_single, dop=1
  7 - output([t4.a]), filter(nil), rowset=256, 
      access([t4.a])
  8 - output([UNION([1])]), filter(nil), rowset=256
  9 - output([cast(t1.a, BIGINT(20, 0))]), filter(nil), rowset=256
  10 - output([t1.a]), filter(nil), rowset=256, dop=1
  11 - output([t1.a]), filter(nil), rowset=256
  12 - output([t1.a]), filter(nil), rowset=256, 
      access([t1.a]), partitions(p[0-4])
  13 - output([1]), filter(nil)
      values({1})
  14 - output([cast(t3.b, BIGINT(20, 0))]), filter(nil), rowset=256
  15 - output([t3.b]), filter(nil), rowset=256, dop=1
  16 - output([t3.b]), filter(nil), rowset=256
  17 - output([t3.b]), filter(nil), rowset=256, 
      access([t3.b]), partitions(p[0-4])

explain select * from (select 1 a union all select a from t1 union all select b from t2) as t3, t1 as t4 where t3.a = t4.a;
Query Plan
===========================================================
|ID|OPERATOR                      |NAME    |EST. ROWS|COST|
-----------------------------------------------------------
|0 |PX COORDINATOR                |        |1        |688 |
|1 | EXCHANGE OUT DISTR           |:EX10003|1        |687 |
|2 |  HASH JOIN                   |        |1        |686 |
|3 |   PX PARTITION ITERATOR      |        |1        |228 |
|4 |    TABLE SCAN                |t4      |1        |228 |
|5 |   EXCHANGE IN DISTR          |        |3        |458 |
|6 |    EXCHANGE OUT DISTR (PKEY) |:EX10002|3        |458 |
|7 |     SUBPLAN SCAN             |t3      |3        |457 |
|8 |      UNION ALL               |        |3        |457 |
|9 |       EXPRESSION             |        |1        |1   |
|10|       EXCHANGE IN DISTR      |        |1        |229 |
|11|        EXCHANGE OUT DISTR    |:EX10000|1        |228 |
|12|         PX PARTITION ITERATOR|        |1        |228 |
|13|          TABLE SCAN          |t1      |1        |228 |
|14|       EXCHANGE IN DISTR      |        |1        |229 |
|15|        EXCHANGE OUT DISTR    |:EX10001|1        |228 |
|16|         PX PARTITION ITERATOR|        |1        |228 |
|17|          TABLE SCAN          |t2      |1        |228 |
===========================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t3.a, t4.a, t4.b, t4.c)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t3.a, t4.a, t4.b, t4.c)]), filter(nil), rowset=256, dop=1
  2 - output([t3.a], [t4.a], [t4.b], [t4.c]), filter(nil), rowset=256, 
      equal_conds([t3.a = t4.a]), other_conds(nil)
  3 - output([t4.a], [t4.b], [t4.c]), filter(nil), rowset=256
  4 - output([t4.a], [t4.b], [t4.c]), filter(nil), rowset=256, 
      access([t4.a], [t4.b], [t4.c]), partitions(p[0-4])
  5 - output([t3.a]), filter(nil), rowset=256
  6 - (#keys=1, [t3.a]), output([t3.a]), filter(nil), rowset=256, is_single, dop=1
  7 - output([t3.a]), filter(nil), rowset=256, 
      access([t3.a])
  8 - output([UNION([1])]), filter(nil), rowset=256
  9 - output([1]), filter(nil)
      values({1})
  10 - output([cast(t1.a, BIGINT(20, 0))]), filter(nil), rowset=256
  11 - output([t1.a]), filter(nil), rowset=256, dop=1
  12 - output([t1.a]), filter(nil), rowset=256
  13 - output([t1.a]), filter(nil), rowset=256, 
      access([t1.a]), partitions(p[0-4])
  14 - output([cast(t2.b, BIGINT(20, 0))]), filter(nil), rowset=256
  15 - output([t2.b]), filter(nil), rowset=256, dop=1
  16 - output([t2.b]), filter(nil), rowset=256
  17 - output([t2.b]), filter(nil), rowset=256, 
      access([t2.b]), partitions(p[0-4])

explain select * from (select a from t1 union all select a from t2 union all select 1 a) as t3, t1 as t4 where t3.a = t4.a;
Query Plan
===========================================================
|ID|OPERATOR                      |NAME    |EST. ROWS|COST|
-----------------------------------------------------------
|0 |PX COORDINATOR                |        |1        |688 |
|1 | EXCHANGE OUT DISTR           |:EX10003|1        |687 |
|2 |  HASH JOIN                   |        |1        |686 |
|3 |   PX PARTITION ITERATOR      |        |1        |228 |
|4 |    TABLE SCAN                |t4      |1        |228 |
|5 |   EXCHANGE IN DISTR          |        |3        |458 |
|6 |    EXCHANGE OUT DISTR (PKEY) |:EX10002|3        |458 |
|7 |     SUBPLAN SCAN             |t3      |3        |457 |
|8 |      UNION ALL               |        |3        |457 |
|9 |       EXCHANGE IN DISTR      |        |1        |229 |
|10|        EXCHANGE OUT DISTR    |:EX10000|1        |228 |
|11|         PX PARTITION ITERATOR|        |1        |228 |
|12|          TABLE SCAN          |t1      |1        |228 |
|13|       EXCHANGE IN DISTR      |        |1        |229 |
|14|        EXCHANGE OUT DISTR    |:EX10001|1        |228 |
|15|         PX PARTITION ITERATOR|        |1        |228 |
|16|          TABLE SCAN          |t2      |1        |228 |
|17|       EXPRESSION             |        |1        |1   |
===========================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t3.a, t4.a, t4.b, t4.c)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t3.a, t4.a, t4.b, t4.c)]), filter(nil), rowset=256, dop=1
  2 - output([t3.a], [t4.a], [t4.b], [t4.c]), filter(nil), rowset=256, 
      equal_conds([t3.a = t4.a]), other_conds(nil)
  3 - output([t4.a], [t4.b], [t4.c]), filter(nil), rowset=256
  4 - output([t4.a], [t4.b], [t4.c]), filter(nil), rowset=256, 
      access([t4.a], [t4.b], [t4.c]), partitions(p[0-4])
  5 - output([t3.a]), filter(nil), rowset=256
  6 - (#keys=1, [t3.a]), output([t3.a]), filter(nil), rowset=256, is_single, dop=1
  7 - output([t3.a]), filter(nil), rowset=256, 
      access([t3.a])
  8 - output([UNION([1])]), filter(nil), rowset=256
  9 - output([cast(t1.a, BIGINT(20, 0))]), filter(nil), rowset=256
  10 - output([t1.a]), filter(nil), rowset=256, dop=1
  11 - output([t1.a]), filter(nil), rowset=256
  12 - output([t1.a]), filter(nil), rowset=256, 
      access([t1.a]), partitions(p[0-4])
  13 - output([cast(t2.a, BIGINT(20, 0))]), filter(nil), rowset=256
  14 - output([t2.a]), filter(nil), rowset=256, dop=1
  15 - output([t2.a]), filter(nil), rowset=256
  16 - output([t2.a]), filter(nil), rowset=256, 
      access([t2.a]), partitions(p[0-4])
  17 - output([1]), filter(nil)
      values({1})

explain select * from (select t2.a from t1, t2 where t1.a = t2.a union all select a from t1 as t3) as t4, t2 as t5 where t4.a = t5.a;
Query Plan
==========================================================
|ID|OPERATOR                     |NAME    |EST. ROWS|COST|
----------------------------------------------------------
|0 |PX COORDINATOR               |        |1        |914 |
|1 | EXCHANGE OUT DISTR          |:EX10001|1        |914 |
|2 |  HASH JOIN                  |        |1        |912 |
|3 |   PX PARTITION ITERATOR     |        |1        |228 |
|4 |    TABLE SCAN               |t5      |1        |228 |
|5 |   EXCHANGE IN DISTR         |        |2        |684 |
|6 |    EXCHANGE OUT DISTR (PKEY)|:EX10000|2        |684 |
|7 |     SUBPLAN SCAN            |t4      |2        |683 |
|8 |      PX PARTITION ITERATOR  |        |2        |683 |
|9 |       UNION ALL             |        |2        |683 |
|10|        HASH JOIN            |        |1        |456 |
|11|         TABLE SCAN          |t1      |1        |228 |
|12|         TABLE SCAN          |t2      |1        |228 |
|13|        TABLE SCAN           |t3      |1        |228 |
==========================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t4.a, t5.a, t5.b, t5.c)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t4.a, t5.a, t5.b, t5.c)]), filter(nil), rowset=256, dop=1
  2 - output([t4.a], [t5.a], [t5.b], [t5.c]), filter(nil), rowset=256, 
      equal_conds([t4.a = t5.a]), other_conds(nil)
  3 - output([t5.a], [t5.b], [t5.c]), filter(nil), rowset=256
  4 - output([t5.a], [t5.b], [t5.c]), filter(nil), rowset=256, 
      access([t5.a], [t5.b], [t5.c]), partitions(p[0-4])
  5 - output([t4.a]), filter(nil), rowset=256
  6 - (#keys=1, [t4.a]), output([t4.a]), filter(nil), rowset=256, dop=1
  7 - output([t4.a]), filter(nil), rowset=256, 
      access([t4.a])
  8 - output([UNION([1])]), filter(nil), rowset=256
  9 - output([UNION([1])]), filter(nil), rowset=256
  10 - output([t2.a]), filter(nil), rowset=256, 
      equal_conds([t1.a = t2.a]), other_conds(nil)
  11 - output([t1.a]), filter(nil), rowset=256, 
      access([t1.a]), partitions(p[0-4])
  12 - output([t2.a]), filter(nil), rowset=256, 
      access([t2.a]), partitions(p[0-4])
  13 - output([t3.a]), filter(nil), rowset=256, 
      access([t3.a]), partitions(p[0-4])

explain select a from t1 intersect select a from t2;
Query Plan
=======================================================
|ID|OPERATOR                  |NAME    |EST. ROWS|COST|
-------------------------------------------------------
|0 |PX COORDINATOR            |        |1        |456 |
|1 | EXCHANGE OUT DISTR       |:EX10000|1        |456 |
|2 |  PX PARTITION ITERATOR   |        |1        |456 |
|3 |   HASH INTERSECT DISTINCT|        |1        |456 |
|4 |    TABLE SCAN            |t1      |1        |228 |
|5 |    TABLE SCAN            |t2      |1        |228 |
=======================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(INTERSECT([1]))]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(INTERSECT([1]))]), filter(nil), rowset=256, dop=1
  2 - output([INTERSECT([1])]), filter(nil), rowset=256
  3 - output([INTERSECT([1])]), filter(nil), rowset=256
  4 - output([t1.a]), filter(nil), rowset=256, 
      access([t1.a]), partitions(p[0-4])
  5 - output([t2.a]), filter(nil), rowset=256, 
      access([t2.a]), partitions(p[0-4])

explain select a from t1 where a = 1 intersect select a from t2;
Query Plan
=================================================
|ID|OPERATOR                |NAME|EST. ROWS|COST|
-------------------------------------------------
|0 |MERGE INTERSECT DISTINCT|    |1        |91  |
|1 | TABLE SCAN             |t1  |1        |46  |
|2 | TABLE SCAN             |t2  |1        |46  |
=================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERSECT([1])]), filter(nil), rowset=256
  1 - output([t1.a]), filter([t1.a = 1]), rowset=256, 
      access([t1.a]), partitions(p1)
  2 - output([t2.a]), filter([t2.a = 1]), rowset=256, 
      access([t2.a]), partitions(p1)

explain select a from t1 intersect select a from t2 where a = 1;
Query Plan
=================================================
|ID|OPERATOR                |NAME|EST. ROWS|COST|
-------------------------------------------------
|0 |MERGE INTERSECT DISTINCT|    |1        |91  |
|1 | TABLE SCAN             |t1  |1        |46  |
|2 | TABLE SCAN             |t2  |1        |46  |
=================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERSECT([1])]), filter(nil), rowset=256
  1 - output([t1.a]), filter([t1.a = 1]), rowset=256, 
      access([t1.a]), partitions(p1)
  2 - output([t2.a]), filter([t2.a = 1]), rowset=256, 
      access([t2.a]), partitions(p1)

explain select a from t1 where a = 1 intersect select a from t2 where a = 1;
Query Plan
=================================================
|ID|OPERATOR                |NAME|EST. ROWS|COST|
-------------------------------------------------
|0 |MERGE INTERSECT DISTINCT|    |1        |91  |
|1 | TABLE SCAN             |t1  |1        |46  |
|2 | TABLE SCAN             |t2  |1        |46  |
=================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERSECT([1])]), filter(nil), rowset=256
  1 - output([t1.a]), filter([t1.a = 1]), rowset=256, 
      access([t1.a]), partitions(p1)
  2 - output([t2.a]), filter([t2.a = 1]), rowset=256, 
      access([t2.a]), partitions(p1)

explain select a from t1 intersect select a from t2 intersect select b from t3;
Query Plan
========================================================
|ID|OPERATOR                   |NAME    |EST. ROWS|COST|
--------------------------------------------------------
|0 |HASH INTERSECT DISTINCT    |        |1        |685 |
|1 | PX COORDINATOR            |        |1        |229 |
|2 |  EXCHANGE OUT DISTR       |:EX10000|1        |228 |
|3 |   PX PARTITION ITERATOR   |        |1        |228 |
|4 |    TABLE SCAN             |t3      |1        |228 |
|5 | PX COORDINATOR            |        |1        |456 |
|6 |  EXCHANGE OUT DISTR       |:EX20000|1        |456 |
|7 |   PX PARTITION ITERATOR   |        |1        |456 |
|8 |    HASH INTERSECT DISTINCT|        |1        |456 |
|9 |     TABLE SCAN            |t1      |1        |228 |
|10|     TABLE SCAN            |t2      |1        |228 |
========================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERSECT([1])]), filter(nil), rowset=256
  1 - output([t3.b]), filter(nil), rowset=256
  2 - output([t3.b]), filter(nil), rowset=256, dop=1
  3 - output([t3.b]), filter(nil), rowset=256
  4 - output([t3.b]), filter(nil), rowset=256,
      access([t3.b]), partitions(p[0-4])
  5 - output([INTERSECT([1])]), filter(nil), rowset=256
  6 - output([INTERSECT([1])]), filter(nil), rowset=256, dop=1
  7 - output([INTERSECT([1])]), filter(nil), rowset=256
  8 - output([INTERSECT([1])]), filter(nil), rowset=256
  9 - output([t1.a]), filter(nil), rowset=256,
      access([t1.a]), partitions(p[0-4])
  10 - output([t2.a]), filter(nil), rowset=256,
      access([t2.a]), partitions(p[0-4])

explain select a from t1 where a = 1 intersect select a from t2 intersect select b from t3;
Query Plan
======================================================
|ID|OPERATOR                 |NAME    |EST. ROWS|COST|
------------------------------------------------------
|0 |HASH INTERSECT DISTINCT  |        |1        |320 |
|1 | MERGE INTERSECT DISTINCT|        |1        |91  |
|2 |  TABLE SCAN             |t1      |1        |46  |
|3 |  TABLE SCAN             |t2      |1        |46  |
|4 | PX COORDINATOR          |        |1        |229 |
|5 |  EXCHANGE OUT DISTR     |:EX10000|1        |228 |
|6 |   PX PARTITION ITERATOR |        |1        |228 |
|7 |    TABLE SCAN           |t3      |1        |228 |
======================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERSECT([1])]), filter(nil), rowset=256
  1 - output([INTERSECT([1])]), filter(nil), rowset=256
  2 - output([t1.a]), filter([t1.a = 1]), rowset=256, 
      access([t1.a]), partitions(p1)
  3 - output([t2.a]), filter([t2.a = 1]), rowset=256, 
      access([t2.a]), partitions(p1)
  4 - output([t3.b]), filter(nil), rowset=256
  5 - output([t3.b]), filter(nil), rowset=256, dop=1
  6 - output([t3.b]), filter(nil), rowset=256
  7 - output([t3.b]), filter([t3.b = 1]), rowset=256, 
      access([t3.b]), partitions(p[0-4])

explain select a from t1 intersect select a from t2 where a = 1 intersect select b from t3;
Query Plan
======================================================
|ID|OPERATOR                 |NAME    |EST. ROWS|COST|
------------------------------------------------------
|0 |HASH INTERSECT DISTINCT  |        |1        |320 |
|1 | MERGE INTERSECT DISTINCT|        |1        |91  |
|2 |  TABLE SCAN             |t1      |1        |46  |
|3 |  TABLE SCAN             |t2      |1        |46  |
|4 | PX COORDINATOR          |        |1        |229 |
|5 |  EXCHANGE OUT DISTR     |:EX10000|1        |228 |
|6 |   PX PARTITION ITERATOR |        |1        |228 |
|7 |    TABLE SCAN           |t3      |1        |228 |
======================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERSECT([1])]), filter(nil), rowset=256
  1 - output([INTERSECT([1])]), filter(nil), rowset=256
  2 - output([t1.a]), filter([t1.a = 1]), rowset=256, 
      access([t1.a]), partitions(p1)
  3 - output([t2.a]), filter([t2.a = 1]), rowset=256, 
      access([t2.a]), partitions(p1)
  4 - output([t3.b]), filter(nil), rowset=256
  5 - output([t3.b]), filter(nil), rowset=256, dop=1
  6 - output([t3.b]), filter(nil), rowset=256
  7 - output([t3.b]), filter([t3.b = 1]), rowset=256, 
      access([t3.b]), partitions(p[0-4])

explain select a from t1 where a = 1 intersect select a from t2 where a = 1 intersect select b from t3;
Query Plan
======================================================
|ID|OPERATOR                 |NAME    |EST. ROWS|COST|
------------------------------------------------------
|0 |HASH INTERSECT DISTINCT  |        |1        |320 |
|1 | MERGE INTERSECT DISTINCT|        |1        |91  |
|2 |  TABLE SCAN             |t1      |1        |46  |
|3 |  TABLE SCAN             |t2      |1        |46  |
|4 | PX COORDINATOR          |        |1        |229 |
|5 |  EXCHANGE OUT DISTR     |:EX10000|1        |228 |
|6 |   PX PARTITION ITERATOR |        |1        |228 |
|7 |    TABLE SCAN           |t3      |1        |228 |
======================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERSECT([1])]), filter(nil), rowset=256
  1 - output([INTERSECT([1])]), filter(nil), rowset=256
  2 - output([t1.a]), filter([t1.a = 1]), rowset=256, 
      access([t1.a]), partitions(p1)
  3 - output([t2.a]), filter([t2.a = 1]), rowset=256, 
      access([t2.a]), partitions(p1)
  4 - output([t3.b]), filter(nil), rowset=256
  5 - output([t3.b]), filter(nil), rowset=256, dop=1
  6 - output([t3.b]), filter(nil), rowset=256
  7 - output([t3.b]), filter([t3.b = 1]), rowset=256, 
      access([t3.b]), partitions(p[0-4])

explain select 1 a intersect select a from t1 intersect select a from t2;
Query Plan
========================================================
|ID|OPERATOR                   |NAME    |EST. ROWS|COST|
--------------------------------------------------------
|0 |HASH INTERSECT DISTINCT    |        |1        |456 |
|1 | PX COORDINATOR            |        |1        |228 |
|2 |  EXCHANGE OUT DISTR       |:EX10000|1        |228 |
|3 |   MERGE INTERSECT DISTINCT|        |1        |228 |
|4 |    PX PARTITION ITERATOR  |        |1        |228 |
|5 |     TABLE SCAN            |t1      |1        |228 |
|6 |    EXPRESSION             |        |1        |1   |
|7 | PX COORDINATOR            |        |1        |228 |
|8 |  EXCHANGE OUT DISTR       |:EX20000|1        |228 |
|9 |   PX PARTITION ITERATOR   |        |1        |228 |
|10|    TABLE SCAN             |t2      |1        |228 |
========================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERSECT([1])]), filter(nil), rowset=256
  1 - output([INTERSECT([1])]), filter(nil), rowset=256
  2 - output([INTERSECT([1])]), filter(nil), rowset=256, dop=1
  3 - output([INTERSECT([1])]), filter(nil), rowset=256
  4 - output([cast(t1.a, BIGINT(20, 0))]), filter(nil), rowset=256
  5 - output([cast(t1.a, BIGINT(20, 0))]), filter([cast(t1.a, BIGINT(20, 0)) = 1]), rowset=256, 
      access([t1.a]), partitions(p[0-4])
  6 - output([1]), filter(nil)
      values({1})
  7 - output([cast(t2.a, BIGINT(20, 0))]), filter(nil), rowset=256
  8 - output([cast(t2.a, BIGINT(20, 0))]), filter(nil), rowset=256, dop=1
  9 - output([cast(t2.a, BIGINT(20, 0))]), filter(nil), rowset=256
  10 - output([cast(t2.a, BIGINT(20, 0))]), filter([cast(t2.a, BIGINT(20, 0)) = 1]), rowset=256, 
      access([t2.a]), partitions(p[0-4])

explain select a from t1 intersect select 1 a intersect select a from t2;
Query Plan
========================================================
|ID|OPERATOR                   |NAME    |EST. ROWS|COST|
--------------------------------------------------------
|0 |HASH INTERSECT DISTINCT    |        |1        |456 |
|1 | PX COORDINATOR            |        |1        |228 |
|2 |  EXCHANGE OUT DISTR       |:EX10000|1        |228 |
|3 |   MERGE INTERSECT DISTINCT|        |1        |228 |
|4 |    PX PARTITION ITERATOR  |        |1        |228 |
|5 |     TABLE SCAN            |t1      |1        |228 |
|6 |    EXPRESSION             |        |1        |1   |
|7 | PX COORDINATOR            |        |1        |228 |
|8 |  EXCHANGE OUT DISTR       |:EX20000|1        |228 |
|9 |   PX PARTITION ITERATOR   |        |1        |228 |
|10|    TABLE SCAN             |t2      |1        |228 |
========================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERSECT([1])]), filter(nil), rowset=256
  1 - output([INTERSECT([1])]), filter(nil), rowset=256
  2 - output([INTERSECT([1])]), filter(nil), rowset=256, dop=1
  3 - output([INTERSECT([1])]), filter(nil), rowset=256
  4 - output([cast(t1.a, BIGINT(20, 0))]), filter(nil), rowset=256
  5 - output([cast(t1.a, BIGINT(20, 0))]), filter([cast(t1.a, BIGINT(20, 0)) = 1]), rowset=256, 
      access([t1.a]), partitions(p[0-4])
  6 - output([1]), filter(nil)
      values({1})
  7 - output([cast(t2.a, BIGINT(20, 0))]), filter(nil), rowset=256
  8 - output([cast(t2.a, BIGINT(20, 0))]), filter(nil), rowset=256, dop=1
  9 - output([cast(t2.a, BIGINT(20, 0))]), filter(nil), rowset=256
  10 - output([cast(t2.a, BIGINT(20, 0))]), filter([cast(t2.a, BIGINT(20, 0)) = 1]), rowset=256, 
      access([t2.a]), partitions(p[0-4])

explain select a from t1 intersect select a from t2 intersect select 1 a;
Query Plan
========================================================
|ID|OPERATOR                   |NAME    |EST. ROWS|COST|
--------------------------------------------------------
|0 |PX COORDINATOR             |        |1        |456 |
|1 | EXCHANGE OUT DISTR        |:EX10000|1        |456 |
|2 |  HASH INTERSECT DISTINCT  |        |1        |456 |
|3 |   EXPRESSION              |        |1        |1   |
|4 |   PX PARTITION ITERATOR   |        |1        |456 |
|5 |    HASH INTERSECT DISTINCT|        |1        |456 |
|6 |     TABLE SCAN            |t1      |1        |228 |
|7 |     TABLE SCAN            |t2      |1        |228 |
========================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(INTERSECT([1]))]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(INTERSECT([1]))]), filter(nil), rowset=256, dop=1
  2 - output([INTERSECT([1])]), filter(nil), rowset=256
  3 - output([1]), filter(nil)
      values({1})
  4 - output([cast(INTERSECT([1]), BIGINT(20, 0))]), filter(nil), rowset=256
  5 - output([cast(INTERSECT([1]), BIGINT(20, 0))]), filter(nil), rowset=256
  6 - output([t1.a]), filter([cast(t1.a, BIGINT(20, 0)) = 1]), rowset=256,
      access([t1.a]), partitions(p[0-4])
  7 - output([t2.a]), filter([cast(t2.a, BIGINT(20, 0)) = 1]), rowset=256,
      access([t2.a]), partitions(p[0-4])

explain select * from (select a from t1 intersect select a from t2) as t3, t1 as t4 where t3.a = t4.a;
Query Plan
=========================================================
|ID|OPERATOR                    |NAME    |EST. ROWS|COST|
---------------------------------------------------------
|0 |PX COORDINATOR              |        |1        |686 |
|1 | EXCHANGE OUT DISTR         |:EX10000|1        |685 |
|2 |  PX PARTITION ITERATOR     |        |1        |684 |
|3 |   HASH JOIN                |        |1        |684 |
|4 |    SUBPLAN SCAN            |t3      |1        |456 |
|5 |     HASH INTERSECT DISTINCT|        |1        |456 |
|6 |      TABLE SCAN            |t1      |1        |228 |
|7 |      TABLE SCAN            |t2      |1        |228 |
|8 |    TABLE SCAN              |t4      |1        |228 |
=========================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t3.a, t4.a, t4.b, t4.c)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t3.a, t4.a, t4.b, t4.c)]), filter(nil), rowset=256, dop=1
  2 - output([t3.a], [t4.a], [t4.b], [t4.c]), filter(nil), rowset=256
  3 - output([t3.a], [t4.a], [t4.b], [t4.c]), filter(nil), rowset=256, 
      equal_conds([t3.a = t4.a]), other_conds(nil)
  4 - output([t3.a]), filter(nil), rowset=256, 
      access([t3.a])
  5 - output([INTERSECT([1])]), filter(nil), rowset=256
  6 - output([t1.a]), filter(nil), rowset=256, 
      access([t1.a]), partitions(p[0-4])
  7 - output([t2.a]), filter(nil), rowset=256, 
      access([t2.a]), partitions(p[0-4])
  8 - output([t4.a], [t4.b], [t4.c]), filter(nil), rowset=256, 
      access([t4.a], [t4.b], [t4.c]), partitions(p[0-4])

explain select * from (select a from t1 intersect select a from t2 intersect select a from t3) as t4, t1 as t5 where t4.a = t5.a;
Query Plan
==========================================================
|ID|OPERATOR                     |NAME    |EST. ROWS|COST|
----------------------------------------------------------
|0 |PX COORDINATOR               |        |1        |914 |
|1 | EXCHANGE OUT DISTR          |:EX10000|1        |913 |
|2 |  PX PARTITION ITERATOR      |        |1        |912 |
|3 |   HASH JOIN                 |        |1        |912 |
|4 |    SUBPLAN SCAN             |t4      |1        |684 |
|5 |     HASH INTERSECT DISTINCT |        |1        |684 |
|6 |      HASH INTERSECT DISTINCT|        |1        |456 |
|7 |       TABLE SCAN            |t1      |1        |228 |
|8 |       TABLE SCAN            |t2      |1        |228 |
|9 |      TABLE SCAN             |t3      |1        |228 |
|10|    TABLE SCAN               |t5      |1        |228 |
==========================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t4.a, t5.a, t5.b, t5.c)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t4.a, t5.a, t5.b, t5.c)]), filter(nil), rowset=256, dop=1
  2 - output([t4.a], [t5.a], [t5.b], [t5.c]), filter(nil), rowset=256
  3 - output([t4.a], [t5.a], [t5.b], [t5.c]), filter(nil), rowset=256, 
      equal_conds([t4.a = t5.a]), other_conds(nil)
  4 - output([t4.a]), filter(nil), rowset=256, 
      access([t4.a])
  5 - output([INTERSECT([1])]), filter(nil), rowset=256
  6 - output([INTERSECT([1])]), filter(nil), rowset=256
  7 - output([t1.a]), filter(nil), rowset=256, 
      access([t1.a]), partitions(p[0-4])
  8 - output([t2.a]), filter(nil), rowset=256, 
      access([t2.a]), partitions(p[0-4])
  9 - output([t3.a]), filter(nil), rowset=256, 
      access([t3.a]), partitions(p[0-4])
  10 - output([t5.a], [t5.b], [t5.c]), filter(nil), rowset=256, 
      access([t5.a], [t5.b], [t5.c]), partitions(p[0-4])

explain select * from (select a from t1 intersect select a from t2 intersect select b from t3) as t4, t1 as t5 where t4.a = t5.a;
Query Plan
==============================================================
|ID|OPERATOR                         |NAME    |EST. ROWS|COST|
--------------------------------------------------------------
|0 |PX COORDINATOR                   |        |1        |915 |
|1 | EXCHANGE OUT DISTR              |:EX10003|1        |914 |
|2 |  HASH JOIN                      |        |1        |913 |
|3 |   EXCHANGE IN DISTR             |        |1        |685 |
|4 |    EXCHANGE OUT DISTR (PKEY)    |:EX10002|1        |685 |
|5 |     SUBPLAN SCAN                |t4      |1        |685 |
|6 |      HASH INTERSECT DISTINCT    |        |1        |685 |
|7 |       EXCHANGE IN DISTR         |        |1        |229 |
|8 |        EXCHANGE OUT DISTR       |:EX10000|1        |228 |
|9 |         PX PARTITION ITERATOR   |        |1        |228 |
|10|          TABLE SCAN             |t3      |1        |228 |
|11|       EXCHANGE IN DISTR         |        |1        |456 |
|12|        EXCHANGE OUT DISTR       |:EX10001|1        |456 |
|13|         PX PARTITION ITERATOR   |        |1        |456 |
|14|          HASH INTERSECT DISTINCT|        |1        |456 |
|15|           TABLE SCAN            |t1      |1        |228 |
|16|           TABLE SCAN            |t2      |1        |228 |
|17|   PX PARTITION ITERATOR         |        |1        |228 |
|18|    TABLE SCAN                   |t5      |1        |228 |
==============================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t4.a, t5.a, t5.b, t5.c)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t4.a, t5.a, t5.b, t5.c)]), filter(nil), rowset=256, dop=1
  2 - output([t4.a], [t5.a], [t5.b], [t5.c]), filter(nil), rowset=256, 
      equal_conds([t4.a = t5.a]), other_conds(nil)
  3 - output([t4.a]), filter(nil), rowset=256
  4 - (#keys=1, [t4.a]), output([t4.a]), filter(nil), rowset=256, is_single, dop=1
  5 - output([t4.a]), filter(nil), rowset=256, 
      access([t4.a])
  6 - output([INTERSECT([1])]), filter(nil), rowset=256
  7 - output([t3.b]), filter(nil), rowset=256
  8 - output([t3.b]), filter(nil), rowset=256, dop=1
  9 - output([t3.b]), filter(nil), rowset=256
  10 - output([t3.b]), filter(nil), rowset=256,
      access([t3.b]), partitions(p[0-4])
  11 - output([INTERSECT([1])]), filter(nil), rowset=256
  12 - output([INTERSECT([1])]), filter(nil), rowset=256, dop=1
  13 - output([INTERSECT([1])]), filter(nil), rowset=256
  14 - output([INTERSECT([1])]), filter(nil), rowset=256
  15 - output([t1.a]), filter(nil), rowset=256,
      access([t1.a]), partitions(p[0-4])
  16 - output([t2.a]), filter(nil), rowset=256,
      access([t2.a]), partitions(p[0-4])
  17 - output([t5.a], [t5.b], [t5.c]), filter(nil), rowset=256
  18 - output([t5.a], [t5.b], [t5.c]), filter(nil), rowset=256, 
      access([t5.a], [t5.b], [t5.c]), partitions(p[0-4])

explain select * from (select a from t1 intersect select 1 a intersect select b from t3) as t4, t1 as t5 where t4.a = t5.a;
Query Plan
==========================================================
|ID|OPERATOR                     |NAME    |EST. ROWS|COST|
----------------------------------------------------------
|0 |NESTED-LOOP JOIN CARTESIAN   |        |1        |456 |
|1 | SUBPLAN SCAN                |t4      |1        |456 |
|2 |  HASH INTERSECT DISTINCT    |        |1        |456 |
|3 |   PX COORDINATOR            |        |1        |228 |
|4 |    EXCHANGE OUT DISTR       |:EX10000|1        |228 |
|5 |     MERGE INTERSECT DISTINCT|        |1        |228 |
|6 |      PX PARTITION ITERATOR  |        |1        |228 |
|7 |       TABLE SCAN            |t1      |1        |228 |
|8 |      EXPRESSION             |        |1        |1   |
|9 |   PX COORDINATOR            |        |1        |228 |
|10|    EXCHANGE OUT DISTR       |:EX20000|1        |228 |
|11|     PX PARTITION ITERATOR   |        |1        |228 |
|12|      TABLE SCAN             |t3      |1        |228 |
|13| TABLE SCAN                  |t5      |1        |46  |
==========================================================

Outputs & filters: 
-------------------------------------
  0 - output([t4.a], [t5.a], [t5.b], [t5.c]), filter(nil), rowset=256, 
      conds(nil), nl_params_(nil)
  1 - output([t4.a]), filter(nil), rowset=256, 
      access([t4.a])
  2 - output([INTERSECT([1])]), filter(nil), rowset=256
  3 - output([INTERSECT([1])]), filter(nil), rowset=256
  4 - output([INTERSECT([1])]), filter(nil), rowset=256, dop=1
  5 - output([INTERSECT([1])]), filter(nil), rowset=256
  6 - output([cast(t1.a, BIGINT(20, 0))]), filter(nil), rowset=256
  7 - output([cast(t1.a, BIGINT(20, 0))]), filter([cast(t1.a, BIGINT(20, 0)) = 1]), rowset=256, 
      access([t1.a]), partitions(p[0-4])
  8 - output([1]), filter(nil)
      values({1})
  9 - output([cast(t3.b, BIGINT(20, 0))]), filter(nil), rowset=256
  10 - output([cast(t3.b, BIGINT(20, 0))]), filter(nil), rowset=256, dop=1
  11 - output([cast(t3.b, BIGINT(20, 0))]), filter(nil), rowset=256
  12 - output([cast(t3.b, BIGINT(20, 0))]), filter([cast(t3.b, BIGINT(20, 0)) = 1]), rowset=256, 
      access([t3.b]), partitions(p[0-4])
  13 - output([t5.a], [t5.b], [t5.c]), filter([t5.a = 1]), rowset=256, 
      access([t5.a], [t5.b], [t5.c]), partitions(p1)

explain select * from (select 1 a intersect select a from t1 intersect select b from t2) as t3, t1 as t4 where t3.a = t4.a;
Query Plan
==========================================================
|ID|OPERATOR                     |NAME    |EST. ROWS|COST|
----------------------------------------------------------
|0 |NESTED-LOOP JOIN CARTESIAN   |        |1        |456 |
|1 | SUBPLAN SCAN                |t3      |1        |456 |
|2 |  HASH INTERSECT DISTINCT    |        |1        |456 |
|3 |   PX COORDINATOR            |        |1        |228 |
|4 |    EXCHANGE OUT DISTR       |:EX10000|1        |228 |
|5 |     MERGE INTERSECT DISTINCT|        |1        |228 |
|6 |      PX PARTITION ITERATOR  |        |1        |228 |
|7 |       TABLE SCAN            |t1      |1        |228 |
|8 |      EXPRESSION             |        |1        |1   |
|9 |   PX COORDINATOR            |        |1        |228 |
|10|    EXCHANGE OUT DISTR       |:EX20000|1        |228 |
|11|     PX PARTITION ITERATOR   |        |1        |228 |
|12|      TABLE SCAN             |t2      |1        |228 |
|13| TABLE SCAN                  |t4      |1        |46  |
==========================================================

Outputs & filters: 
-------------------------------------
  0 - output([t3.a], [t4.a], [t4.b], [t4.c]), filter(nil), rowset=256, 
      conds(nil), nl_params_(nil)
  1 - output([t3.a]), filter(nil), rowset=256, 
      access([t3.a])
  2 - output([INTERSECT([1])]), filter(nil), rowset=256
  3 - output([INTERSECT([1])]), filter(nil), rowset=256
  4 - output([INTERSECT([1])]), filter(nil), rowset=256, dop=1
  5 - output([INTERSECT([1])]), filter(nil), rowset=256
  6 - output([cast(t1.a, BIGINT(20, 0))]), filter(nil), rowset=256
  7 - output([cast(t1.a, BIGINT(20, 0))]), filter([cast(t1.a, BIGINT(20, 0)) = 1]), rowset=256, 
      access([t1.a]), partitions(p[0-4])
  8 - output([1]), filter(nil)
      values({1})
  9 - output([cast(t2.b, BIGINT(20, 0))]), filter(nil), rowset=256
  10 - output([cast(t2.b, BIGINT(20, 0))]), filter(nil), rowset=256, dop=1
  11 - output([cast(t2.b, BIGINT(20, 0))]), filter(nil), rowset=256
  12 - output([cast(t2.b, BIGINT(20, 0))]), filter([cast(t2.b, BIGINT(20, 0)) = 1]), rowset=256, 
      access([t2.b]), partitions(p[0-4])
  13 - output([t4.a], [t4.b], [t4.c]), filter([t4.a = 1]), rowset=256, 
      access([t4.a], [t4.b], [t4.c]), partitions(p1)

explain select * from (select a from t1 intersect select a from t2 intersect select 1 a) as t3, t1 as t4 where t3.a = t4.a;
Query Plan
==========================================================
|ID|OPERATOR                     |NAME    |EST. ROWS|COST|
----------------------------------------------------------
|0 |NESTED-LOOP JOIN CARTESIAN   |        |1        |456 |
|1 | PX COORDINATOR              |        |1        |456 |
|2 |  EXCHANGE OUT DISTR         |:EX10000|1        |456 |
|3 |   SUBPLAN SCAN              |t3      |1        |456 |
|4 |    HASH INTERSECT DISTINCT  |        |1        |456 |
|5 |     EXPRESSION              |        |1        |1   |
|6 |     PX PARTITION ITERATOR   |        |1        |456 |
|7 |      HASH INTERSECT DISTINCT|        |1        |456 |
|8 |       TABLE SCAN            |t1      |1        |228 |
|9 |       TABLE SCAN            |t2      |1        |228 |
|10| TABLE SCAN                  |t4      |1        |46  |
==========================================================

Outputs & filters: 
-------------------------------------
  0 - output([t3.a], [t4.a], [t4.b], [t4.c]), filter(nil), rowset=256, 
      conds(nil), nl_params_(nil)
  1 - output([t3.a]), filter(nil), rowset=256
  2 - output([t3.a]), filter(nil), rowset=256, dop=1
  3 - output([t3.a]), filter(nil), rowset=256, 
      access([t3.a])
  4 - output([INTERSECT([1])]), filter(nil), rowset=256
  5 - output([1]), filter(nil)
      values({1})
  6 - output([cast(INTERSECT([1]), BIGINT(20, 0))]), filter(nil), rowset=256
  7 - output([cast(INTERSECT([1]), BIGINT(20, 0))]), filter(nil), rowset=256
  8 - output([t1.a]), filter([cast(t1.a, BIGINT(20, 0)) = 1]), rowset=256,
      access([t1.a]), partitions(p[0-4])
  9 - output([t2.a]), filter([cast(t2.a, BIGINT(20, 0)) = 1]), rowset=256,
      access([t2.a]), partitions(p[0-4])
  10 - output([t4.a], [t4.b], [t4.c]), filter([1 = t4.a]), rowset=256,
      access([t4.a], [t4.b], [t4.c]), partitions(p1)

explain select * from (select t2.a from t1, t2 where t1.a = t2.a intersect select a from t1 as t3) as t4, t2 as t5 where t4.a = t5.a;
Query Plan
=========================================================
|ID|OPERATOR                    |NAME    |EST. ROWS|COST|
---------------------------------------------------------
|0 |PX COORDINATOR              |        |1        |913 |
|1 | EXCHANGE OUT DISTR         |:EX10000|1        |913 |
|2 |  PX PARTITION ITERATOR     |        |1        |911 |
|3 |   HASH JOIN                |        |1        |911 |
|4 |    SUBPLAN SCAN            |t4      |1        |684 |
|5 |     HASH INTERSECT DISTINCT|        |1        |684 |
|6 |      HASH JOIN             |        |1        |456 |
|7 |       TABLE SCAN           |t1      |1        |228 |
|8 |       TABLE SCAN           |t2      |1        |228 |
|9 |      TABLE SCAN            |t3      |1        |228 |
|10|    TABLE SCAN              |t5      |1        |228 |
=========================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t4.a, t5.a, t5.b, t5.c)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t4.a, t5.a, t5.b, t5.c)]), filter(nil), rowset=256, dop=1
  2 - output([t4.a], [t5.a], [t5.b], [t5.c]), filter(nil), rowset=256
  3 - output([t4.a], [t5.a], [t5.b], [t5.c]), filter(nil), rowset=256, 
      equal_conds([t4.a = t5.a]), other_conds(nil)
  4 - output([t4.a]), filter(nil), rowset=256, 
      access([t4.a])
  5 - output([INTERSECT([1])]), filter(nil), rowset=256
  6 - output([t2.a]), filter(nil), rowset=256, 
      equal_conds([t1.a = t2.a]), other_conds(nil)
  7 - output([t1.a]), filter(nil), rowset=256, 
      access([t1.a]), partitions(p[0-4])
  8 - output([t2.a]), filter(nil), rowset=256, 
      access([t2.a]), partitions(p[0-4])
  9 - output([t3.a]), filter(nil), rowset=256, 
      access([t3.a]), partitions(p[0-4])
  10 - output([t5.a], [t5.b], [t5.c]), filter(nil), rowset=256, 
      access([t5.a], [t5.b], [t5.c]), partitions(p[0-4])

explain select a from t1 except select a from t2;
Query Plan
====================================================
|ID|OPERATOR               |NAME    |EST. ROWS|COST|
----------------------------------------------------
|0 |PX COORDINATOR         |        |1        |456 |
|1 | EXCHANGE OUT DISTR    |:EX10000|1        |456 |
|2 |  PX PARTITION ITERATOR|        |1        |456 |
|3 |   HASH EXCEPT DISTINCT|        |1        |456 |
|4 |    TABLE SCAN         |t1      |1        |228 |
|5 |    TABLE SCAN         |t2      |1        |228 |
====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(EXCEPT([1]))]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(EXCEPT([1]))]), filter(nil), rowset=256, dop=1
  2 - output([EXCEPT([1])]), filter(nil), rowset=256
  3 - output([EXCEPT([1])]), filter(nil), rowset=256
  4 - output([t1.a]), filter(nil), rowset=256, 
      access([t1.a]), partitions(p[0-4])
  5 - output([t2.a]), filter(nil), rowset=256, 
      access([t2.a]), partitions(p[0-4])

explain select a from t1 where a = 1 except select a from t2;
Query Plan
==============================================
|ID|OPERATOR             |NAME|EST. ROWS|COST|
----------------------------------------------
|0 |MERGE EXCEPT DISTINCT|    |1        |91  |
|1 | TABLE SCAN          |t1  |1        |46  |
|2 | TABLE SCAN          |t2  |1        |46  |
==============================================

Outputs & filters: 
-------------------------------------
  0 - output([EXCEPT([1])]), filter(nil), rowset=256
  1 - output([t1.a]), filter([t1.a = 1]), rowset=256, 
      access([t1.a]), partitions(p1)
  2 - output([t2.a]), filter([t2.a = 1]), rowset=256, 
      access([t2.a]), partitions(p1)

explain select a from t1 except select a from t2 where a = 1;
Query Plan
==========================================================
|ID|OPERATOR                     |NAME    |EST. ROWS|COST|
----------------------------------------------------------
|0 |PX COORDINATOR               |        |1        |275 |
|1 | EXCHANGE OUT DISTR          |:EX10001|1        |275 |
|2 |  HASH EXCEPT DISTINCT       |        |1        |274 |
|3 |   PX PARTITION ITERATOR     |        |1        |228 |
|4 |    TABLE SCAN               |t1      |1        |228 |
|5 |   EXCHANGE IN DISTR         |        |1        |46  |
|6 |    EXCHANGE OUT DISTR (PKEY)|:EX10000|1        |46  |
|7 |     TABLE SCAN              |t2      |1        |46  |
==========================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(EXCEPT([1]))]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(EXCEPT([1]))]), filter(nil), rowset=256, dop=1
  2 - output([EXCEPT([1])]), filter(nil), rowset=256
  3 - output([t1.a]), filter(nil), rowset=256
  4 - output([t1.a]), filter(nil), rowset=256, 
      access([t1.a]), partitions(p[0-4])
  5 - output([t2.a]), filter(nil), rowset=256
  6 - (#keys=1, [t2.a]), output([t2.a]), filter(nil), rowset=256, is_single, dop=1
  7 - output([t2.a]), filter([t2.a = 1]), rowset=256, 
      access([t2.a]), partitions(p1)

explain select a from t1 where a = 1 except select a from t2 where a = 1;
Query Plan
==============================================
|ID|OPERATOR             |NAME|EST. ROWS|COST|
----------------------------------------------
|0 |MERGE EXCEPT DISTINCT|    |1        |91  |
|1 | TABLE SCAN          |t1  |1        |46  |
|2 | TABLE SCAN          |t2  |1        |46  |
==============================================

Outputs & filters: 
-------------------------------------
  0 - output([EXCEPT([1])]), filter(nil), rowset=256
  1 - output([t1.a]), filter([t1.a = 1]), rowset=256, 
      access([t1.a]), partitions(p1)
  2 - output([t2.a]), filter([t2.a = 1]), rowset=256, 
      access([t2.a]), partitions(p1)

explain select a from t1 except select a from t2 except select b from t3;
Query Plan
=====================================================
|ID|OPERATOR                |NAME    |EST. ROWS|COST|
-----------------------------------------------------
|0 |HASH EXCEPT DISTINCT    |        |1        |685 |
|1 | PX COORDINATOR         |        |1        |456 |
|2 |  EXCHANGE OUT DISTR    |:EX10000|1        |456 |
|3 |   PX PARTITION ITERATOR|        |1        |456 |
|4 |    HASH EXCEPT DISTINCT|        |1        |456 |
|5 |     TABLE SCAN         |t1      |1        |228 |
|6 |     TABLE SCAN         |t2      |1        |228 |
|7 | PX COORDINATOR         |        |1        |229 |
|8 |  EXCHANGE OUT DISTR    |:EX20000|1        |228 |
|9 |   PX PARTITION ITERATOR|        |1        |228 |
|10|    TABLE SCAN          |t3      |1        |228 |
=====================================================

Outputs & filters: 
-------------------------------------
  0 - output([EXCEPT([1])]), filter(nil), rowset=256
  1 - output([EXCEPT([1])]), filter(nil), rowset=256
  2 - output([EXCEPT([1])]), filter(nil), rowset=256, dop=1
  3 - output([EXCEPT([1])]), filter(nil), rowset=256
  4 - output([EXCEPT([1])]), filter(nil), rowset=256
  5 - output([t1.a]), filter(nil), rowset=256, 
      access([t1.a]), partitions(p[0-4])
  6 - output([t2.a]), filter(nil), rowset=256, 
      access([t2.a]), partitions(p[0-4])
  7 - output([t3.b]), filter(nil), rowset=256
  8 - output([t3.b]), filter(nil), rowset=256, dop=1
  9 - output([t3.b]), filter(nil), rowset=256
  10 - output([t3.b]), filter(nil), rowset=256, 
      access([t3.b]), partitions(p[0-4])

explain select a from t1 where a = 1 except select a from t2 except select b from t3;
Query Plan
=====================================================
|ID|OPERATOR                |NAME    |EST. ROWS|COST|
-----------------------------------------------------
|0 |HASH EXCEPT DISTINCT    |        |1        |320 |
|1 | MERGE EXCEPT DISTINCT  |        |1        |91  |
|2 |  TABLE SCAN            |t1      |1        |46  |
|3 |  TABLE SCAN            |t2      |1        |46  |
|4 | PX COORDINATOR         |        |1        |229 |
|5 |  EXCHANGE OUT DISTR    |:EX10000|1        |228 |
|6 |   PX PARTITION ITERATOR|        |1        |228 |
|7 |    TABLE SCAN          |t3      |1        |228 |
=====================================================

Outputs & filters: 
-------------------------------------
  0 - output([EXCEPT([1])]), filter(nil), rowset=256
  1 - output([EXCEPT([1])]), filter(nil), rowset=256
  2 - output([t1.a]), filter([t1.a = 1]), rowset=256, 
      access([t1.a]), partitions(p1)
  3 - output([t2.a]), filter([t2.a = 1]), rowset=256, 
      access([t2.a]), partitions(p1)
  4 - output([t3.b]), filter(nil), rowset=256
  5 - output([t3.b]), filter(nil), rowset=256, dop=1
  6 - output([t3.b]), filter(nil), rowset=256
  7 - output([t3.b]), filter([t3.b = 1]), rowset=256, 
      access([t3.b]), partitions(p[0-4])

explain select a from t1 except select a from t2 where a = 1 except select b from t3;
Query Plan
===========================================================
|ID|OPERATOR                      |NAME    |EST. ROWS|COST|
-----------------------------------------------------------
|0 |HASH EXCEPT DISTINCT          |        |1        |503 |
|1 | PX COORDINATOR               |        |1        |275 |
|2 |  EXCHANGE OUT DISTR          |:EX10001|1        |275 |
|3 |   HASH EXCEPT DISTINCT       |        |1        |274 |
|4 |    PX PARTITION ITERATOR     |        |1        |228 |
|5 |     TABLE SCAN               |t1      |1        |228 |
|6 |    EXCHANGE IN DISTR         |        |1        |46  |
|7 |     EXCHANGE OUT DISTR (PKEY)|:EX10000|1        |46  |
|8 |      TABLE SCAN              |t2      |1        |46  |
|9 | PX COORDINATOR               |        |1        |229 |
|10|  EXCHANGE OUT DISTR          |:EX20000|1        |228 |
|11|   PX PARTITION ITERATOR      |        |1        |228 |
|12|    TABLE SCAN                |t3      |1        |228 |
===========================================================

Outputs & filters: 
-------------------------------------
  0 - output([EXCEPT([1])]), filter(nil), rowset=256
  1 - output([EXCEPT([1])]), filter(nil), rowset=256
  2 - output([EXCEPT([1])]), filter(nil), rowset=256, dop=1
  3 - output([EXCEPT([1])]), filter(nil), rowset=256
  4 - output([t1.a]), filter(nil), rowset=256
  5 - output([t1.a]), filter(nil), rowset=256, 
      access([t1.a]), partitions(p[0-4])
  6 - output([t2.a]), filter(nil), rowset=256
  7 - (#keys=1, [t2.a]), output([t2.a]), filter(nil), rowset=256, is_single, dop=1
  8 - output([t2.a]), filter([t2.a = 1]), rowset=256, 
      access([t2.a]), partitions(p1)
  9 - output([t3.b]), filter(nil), rowset=256
  10 - output([t3.b]), filter(nil), rowset=256, dop=1
  11 - output([t3.b]), filter(nil), rowset=256
  12 - output([t3.b]), filter(nil), rowset=256, 
      access([t3.b]), partitions(p[0-4])

explain select a from t1 where a = 1 except select a from t2 where a = 1 except select b from t3;
Query Plan
=====================================================
|ID|OPERATOR                |NAME    |EST. ROWS|COST|
-----------------------------------------------------
|0 |HASH EXCEPT DISTINCT    |        |1        |320 |
|1 | MERGE EXCEPT DISTINCT  |        |1        |91  |
|2 |  TABLE SCAN            |t1      |1        |46  |
|3 |  TABLE SCAN            |t2      |1        |46  |
|4 | PX COORDINATOR         |        |1        |229 |
|5 |  EXCHANGE OUT DISTR    |:EX10000|1        |228 |
|6 |   PX PARTITION ITERATOR|        |1        |228 |
|7 |    TABLE SCAN          |t3      |1        |228 |
=====================================================

Outputs & filters: 
-------------------------------------
  0 - output([EXCEPT([1])]), filter(nil), rowset=256
  1 - output([EXCEPT([1])]), filter(nil), rowset=256
  2 - output([t1.a]), filter([t1.a = 1]), rowset=256, 
      access([t1.a]), partitions(p1)
  3 - output([t2.a]), filter([t2.a = 1]), rowset=256, 
      access([t2.a]), partitions(p1)
  4 - output([t3.b]), filter(nil), rowset=256
  5 - output([t3.b]), filter(nil), rowset=256, dop=1
  6 - output([t3.b]), filter(nil), rowset=256
  7 - output([t3.b]), filter([t3.b = 1]), rowset=256, 
      access([t3.b]), partitions(p[0-4])

explain select 1 a except select a from t1 except select a from t2;
Query Plan
======================================================
|ID|OPERATOR                 |NAME    |EST. ROWS|COST|
------------------------------------------------------
|0 |HASH EXCEPT DISTINCT     |        |1        |456 |
|1 | PX COORDINATOR          |        |1        |229 |
|2 |  EXCHANGE OUT DISTR     |:EX10000|1        |228 |
|3 |   MERGE EXCEPT DISTINCT |        |1        |228 |
|4 |    EXPRESSION           |        |1        |1   |
|5 |    PX PARTITION ITERATOR|        |1        |228 |
|6 |     TABLE SCAN          |t1      |1        |228 |
|7 | PX COORDINATOR          |        |1        |228 |
|8 |  EXCHANGE OUT DISTR     |:EX20000|1        |228 |
|9 |   PX PARTITION ITERATOR |        |1        |228 |
|10|    TABLE SCAN           |t2      |1        |228 |
======================================================

Outputs & filters: 
-------------------------------------
  0 - output([EXCEPT([1])]), filter(nil), rowset=256
  1 - output([EXCEPT([1])]), filter(nil), rowset=256
  2 - output([EXCEPT([1])]), filter(nil), rowset=256, dop=1
  3 - output([EXCEPT([1])]), filter(nil), rowset=256
  4 - output([1]), filter(nil)
      values({1})
  5 - output([cast(t1.a, BIGINT(20, 0))]), filter(nil), rowset=256
  6 - output([cast(t1.a, BIGINT(20, 0))]), filter([cast(t1.a, BIGINT(20, 0)) = 1]), rowset=256, 
      access([t1.a]), partitions(p[0-4])
  7 - output([cast(t2.a, BIGINT(20, 0))]), filter(nil), rowset=256
  8 - output([cast(t2.a, BIGINT(20, 0))]), filter(nil), rowset=256, dop=1
  9 - output([cast(t2.a, BIGINT(20, 0))]), filter(nil), rowset=256
  10 - output([cast(t2.a, BIGINT(20, 0))]), filter([cast(t2.a, BIGINT(20, 0)) = 1]), rowset=256, 
      access([t2.a]), partitions(p[0-4])

explain select a from t1 except select 1 a except select a from t2;
Query Plan
======================================================
|ID|OPERATOR                 |NAME    |EST. ROWS|COST|
------------------------------------------------------
|0 |HASH EXCEPT DISTINCT     |        |1        |457 |
|1 | PX COORDINATOR          |        |1        |229 |
|2 |  EXCHANGE OUT DISTR     |:EX10000|1        |229 |
|3 |   HASH EXCEPT DISTINCT  |        |1        |228 |
|4 |    PX PARTITION ITERATOR|        |1        |228 |
|5 |     TABLE SCAN          |t1      |1        |228 |
|6 |    EXPRESSION           |        |1        |1   |
|7 | PX COORDINATOR          |        |1        |229 |
|8 |  EXCHANGE OUT DISTR     |:EX20000|1        |228 |
|9 |   PX PARTITION ITERATOR |        |1        |228 |
|10|    TABLE SCAN           |t2      |1        |228 |
======================================================

Outputs & filters: 
-------------------------------------
  0 - output([EXCEPT([1])]), filter(nil), rowset=256
  1 - output([EXCEPT([1])]), filter(nil), rowset=256
  2 - output([EXCEPT([1])]), filter(nil), rowset=256, dop=1
  3 - output([EXCEPT([1])]), filter(nil), rowset=256
  4 - output([cast(t1.a, BIGINT(20, 0))]), filter(nil), rowset=256
  5 - output([cast(t1.a, BIGINT(20, 0))]), filter(nil), rowset=256, 
      access([t1.a]), partitions(p[0-4])
  6 - output([1]), filter(nil)
      values({1})
  7 - output([cast(t2.a, BIGINT(20, 0))]), filter(nil), rowset=256
  8 - output([t2.a]), filter(nil), rowset=256, dop=1
  9 - output([t2.a]), filter(nil), rowset=256
  10 - output([t2.a]), filter(nil), rowset=256, 
      access([t2.a]), partitions(p[0-4])

explain select a from t1 except select a from t2 except select 1 a;
Query Plan
=====================================================
|ID|OPERATOR                |NAME    |EST. ROWS|COST|
-----------------------------------------------------
|0 |PX COORDINATOR          |        |1        |457 |
|1 | EXCHANGE OUT DISTR     |:EX10000|1        |457 |
|2 |  HASH EXCEPT DISTINCT  |        |1        |456 |
|3 |   PX PARTITION ITERATOR|        |1        |456 |
|4 |    HASH EXCEPT DISTINCT|        |1        |456 |
|5 |     TABLE SCAN         |t1      |1        |228 |
|6 |     TABLE SCAN         |t2      |1        |228 |
|7 |   EXPRESSION           |        |1        |1   |
=====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(EXCEPT([1]))]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(EXCEPT([1]))]), filter(nil), rowset=256, dop=1
  2 - output([EXCEPT([1])]), filter(nil), rowset=256
  3 - output([cast(EXCEPT([1]), BIGINT(20, 0))]), filter(nil), rowset=256
  4 - output([cast(EXCEPT([1]), BIGINT(20, 0))]), filter(nil), rowset=256
  5 - output([t1.a]), filter(nil), rowset=256, 
      access([t1.a]), partitions(p[0-4])
  6 - output([t2.a]), filter(nil), rowset=256, 
      access([t2.a]), partitions(p[0-4])
  7 - output([1]), filter(nil)
      values({1})

explain select * from (select a from t1 except select a from t2) as t3, t1 as t4 where t3.a = t4.a;
Query Plan
======================================================
|ID|OPERATOR                 |NAME    |EST. ROWS|COST|
------------------------------------------------------
|0 |PX COORDINATOR           |        |1        |686 |
|1 | EXCHANGE OUT DISTR      |:EX10000|1        |685 |
|2 |  PX PARTITION ITERATOR  |        |1        |684 |
|3 |   HASH JOIN             |        |1        |684 |
|4 |    SUBPLAN SCAN         |t3      |1        |456 |
|5 |     HASH EXCEPT DISTINCT|        |1        |456 |
|6 |      TABLE SCAN         |t1      |1        |228 |
|7 |      TABLE SCAN         |t2      |1        |228 |
|8 |    TABLE SCAN           |t4      |1        |228 |
======================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t3.a, t4.a, t4.b, t4.c)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t3.a, t4.a, t4.b, t4.c)]), filter(nil), rowset=256, dop=1
  2 - output([t3.a], [t4.a], [t4.b], [t4.c]), filter(nil), rowset=256
  3 - output([t3.a], [t4.a], [t4.b], [t4.c]), filter(nil), rowset=256, 
      equal_conds([t3.a = t4.a]), other_conds(nil)
  4 - output([t3.a]), filter(nil), rowset=256, 
      access([t3.a])
  5 - output([EXCEPT([1])]), filter(nil), rowset=256
  6 - output([t1.a]), filter(nil), rowset=256, 
      access([t1.a]), partitions(p[0-4])
  7 - output([t2.a]), filter(nil), rowset=256, 
      access([t2.a]), partitions(p[0-4])
  8 - output([t4.a], [t4.b], [t4.c]), filter(nil), rowset=256, 
      access([t4.a], [t4.b], [t4.c]), partitions(p[0-4])

explain select * from (select a from t1 except select a from t2 except select a from t3) as t4, t1 as t5 where t4.a = t5.a;
Query Plan
=======================================================
|ID|OPERATOR                  |NAME    |EST. ROWS|COST|
-------------------------------------------------------
|0 |PX COORDINATOR            |        |1        |914 |
|1 | EXCHANGE OUT DISTR       |:EX10000|1        |913 |
|2 |  PX PARTITION ITERATOR   |        |1        |912 |
|3 |   HASH JOIN              |        |1        |912 |
|4 |    SUBPLAN SCAN          |t4      |1        |684 |
|5 |     HASH EXCEPT DISTINCT |        |1        |684 |
|6 |      HASH EXCEPT DISTINCT|        |1        |456 |
|7 |       TABLE SCAN         |t1      |1        |228 |
|8 |       TABLE SCAN         |t2      |1        |228 |
|9 |      TABLE SCAN          |t3      |1        |228 |
|10|    TABLE SCAN            |t5      |1        |228 |
=======================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t4.a, t5.a, t5.b, t5.c)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t4.a, t5.a, t5.b, t5.c)]), filter(nil), rowset=256, dop=1
  2 - output([t4.a], [t5.a], [t5.b], [t5.c]), filter(nil), rowset=256
  3 - output([t4.a], [t5.a], [t5.b], [t5.c]), filter(nil), rowset=256, 
      equal_conds([t4.a = t5.a]), other_conds(nil)
  4 - output([t4.a]), filter(nil), rowset=256, 
      access([t4.a])
  5 - output([EXCEPT([1])]), filter(nil), rowset=256
  6 - output([EXCEPT([1])]), filter(nil), rowset=256
  7 - output([t1.a]), filter(nil), rowset=256, 
      access([t1.a]), partitions(p[0-4])
  8 - output([t2.a]), filter(nil), rowset=256, 
      access([t2.a]), partitions(p[0-4])
  9 - output([t3.a]), filter(nil), rowset=256, 
      access([t3.a]), partitions(p[0-4])
  10 - output([t5.a], [t5.b], [t5.c]), filter(nil), rowset=256, 
      access([t5.a], [t5.b], [t5.c]), partitions(p[0-4])

explain select * from (select a from t1 except select a from t2 except select b from t3) as t4, t1 as t5 where t4.a = t5.a;
Query Plan
===========================================================
|ID|OPERATOR                      |NAME    |EST. ROWS|COST|
-----------------------------------------------------------
|0 |PX COORDINATOR                |        |1        |915 |
|1 | EXCHANGE OUT DISTR           |:EX10003|1        |915 |
|2 |  HASH JOIN                   |        |1        |913 |
|3 |   EXCHANGE IN DISTR          |        |1        |685 |
|4 |    EXCHANGE OUT DISTR (PKEY) |:EX10002|1        |685 |
|5 |     SUBPLAN SCAN             |t4      |1        |685 |
|6 |      HASH EXCEPT DISTINCT    |        |1        |685 |
|7 |       EXCHANGE IN DISTR      |        |1        |456 |
|8 |        EXCHANGE OUT DISTR    |:EX10000|1        |456 |
|9 |         PX PARTITION ITERATOR|        |1        |456 |
|10|          HASH EXCEPT DISTINCT|        |1        |456 |
|11|           TABLE SCAN         |t1      |1        |228 |
|12|           TABLE SCAN         |t2      |1        |228 |
|13|       EXCHANGE IN DISTR      |        |1        |229 |
|14|        EXCHANGE OUT DISTR    |:EX10001|1        |228 |
|15|         PX PARTITION ITERATOR|        |1        |228 |
|16|          TABLE SCAN          |t3      |1        |228 |
|17|   PX PARTITION ITERATOR      |        |1        |228 |
|18|    TABLE SCAN                |t5      |1        |228 |
===========================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t4.a, t5.a, t5.b, t5.c)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t4.a, t5.a, t5.b, t5.c)]), filter(nil), rowset=256, dop=1
  2 - output([t4.a], [t5.a], [t5.b], [t5.c]), filter(nil), rowset=256, 
      equal_conds([t4.a = t5.a]), other_conds(nil)
  3 - output([t4.a]), filter(nil), rowset=256
  4 - (#keys=1, [t4.a]), output([t4.a]), filter(nil), rowset=256, is_single, dop=1
  5 - output([t4.a]), filter(nil), rowset=256, 
      access([t4.a])
  6 - output([EXCEPT([1])]), filter(nil), rowset=256
  7 - output([EXCEPT([1])]), filter(nil), rowset=256
  8 - output([EXCEPT([1])]), filter(nil), rowset=256, dop=1
  9 - output([EXCEPT([1])]), filter(nil), rowset=256
  10 - output([EXCEPT([1])]), filter(nil), rowset=256
  11 - output([t1.a]), filter(nil), rowset=256, 
      access([t1.a]), partitions(p[0-4])
  12 - output([t2.a]), filter(nil), rowset=256, 
      access([t2.a]), partitions(p[0-4])
  13 - output([t3.b]), filter(nil), rowset=256
  14 - output([t3.b]), filter(nil), rowset=256, dop=1
  15 - output([t3.b]), filter(nil), rowset=256
  16 - output([t3.b]), filter(nil), rowset=256, 
      access([t3.b]), partitions(p[0-4])
  17 - output([t5.a], [t5.b], [t5.c]), filter(nil), rowset=256
  18 - output([t5.a], [t5.b], [t5.c]), filter(nil), rowset=256, 
      access([t5.a], [t5.b], [t5.c]), partitions(p[0-4])

explain select * from (select a from t1 except select 1 a except select b from t3) as t4, t1 as t5 where t4.a = t5.a;
Query Plan
============================================================
|ID|OPERATOR                       |NAME    |EST. ROWS|COST|
------------------------------------------------------------
|0 |PX COORDINATOR                 |        |1        |688 |
|1 | EXCHANGE OUT DISTR            |:EX10003|1        |687 |
|2 |  HASH JOIN                    |        |1        |686 |
|3 |   EXCHANGE IN DISTR           |        |1        |458 |
|4 |    EXCHANGE OUT DISTR (PKEY)  |:EX10002|1        |458 |
|5 |     SUBPLAN SCAN              |t4      |1        |457 |
|6 |      HASH EXCEPT DISTINCT     |        |1        |457 |
|7 |       EXCHANGE IN DISTR       |        |1        |229 |
|8 |        EXCHANGE OUT DISTR     |:EX10000|1        |229 |
|9 |         HASH EXCEPT DISTINCT  |        |1        |228 |
|10|          PX PARTITION ITERATOR|        |1        |228 |
|11|           TABLE SCAN          |t1      |1        |228 |
|12|          EXPRESSION           |        |1        |1   |
|13|       EXCHANGE IN DISTR       |        |1        |229 |
|14|        EXCHANGE OUT DISTR     |:EX10001|1        |228 |
|15|         PX PARTITION ITERATOR |        |1        |228 |
|16|          TABLE SCAN           |t3      |1        |228 |
|17|   PX PARTITION ITERATOR       |        |1        |228 |
|18|    TABLE SCAN                 |t5      |1        |228 |
============================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t4.a, t5.a, t5.b, t5.c)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t4.a, t5.a, t5.b, t5.c)]), filter(nil), rowset=256, dop=1
  2 - output([t4.a], [t5.a], [t5.b], [t5.c]), filter(nil), rowset=256, 
      equal_conds([t4.a = t5.a]), other_conds(nil)
  3 - output([t4.a]), filter(nil), rowset=256
  4 - (#keys=1, [t4.a]), output([t4.a]), filter(nil), rowset=256, is_single, dop=1
  5 - output([t4.a]), filter(nil), rowset=256, 
      access([t4.a])
  6 - output([EXCEPT([1])]), filter(nil), rowset=256
  7 - output([EXCEPT([1])]), filter(nil), rowset=256
  8 - output([EXCEPT([1])]), filter(nil), rowset=256, dop=1
  9 - output([EXCEPT([1])]), filter(nil), rowset=256
  10 - output([cast(t1.a, BIGINT(20, 0))]), filter(nil), rowset=256
  11 - output([cast(t1.a, BIGINT(20, 0))]), filter(nil), rowset=256, 
      access([t1.a]), partitions(p[0-4])
  12 - output([1]), filter(nil)
      values({1})
  13 - output([cast(t3.b, BIGINT(20, 0))]), filter(nil), rowset=256
  14 - output([t3.b]), filter(nil), rowset=256, dop=1
  15 - output([t3.b]), filter(nil), rowset=256
  16 - output([t3.b]), filter(nil), rowset=256, 
      access([t3.b]), partitions(p[0-4])
  17 - output([t5.a], [t5.b], [t5.c]), filter(nil), rowset=256
  18 - output([t5.a], [t5.b], [t5.c]), filter(nil), rowset=256, 
      access([t5.a], [t5.b], [t5.c]), partitions(p[0-4])

explain select * from (select 1 a except select a from t1 except select b from t2) as t3, t1 as t4 where t3.a = t4.a;
Query Plan
=========================================================
|ID|OPERATOR                    |NAME    |EST. ROWS|COST|
---------------------------------------------------------
|0 |NESTED-LOOP JOIN CARTESIAN  |        |1        |502 |
|1 | TABLE SCAN                 |t4      |1        |46  |
|2 | MATERIAL                   |        |1        |456 |
|3 |  SUBPLAN SCAN              |t3      |1        |456 |
|4 |   HASH EXCEPT DISTINCT     |        |1        |456 |
|5 |    PX COORDINATOR          |        |1        |229 |
|6 |     EXCHANGE OUT DISTR     |:EX10000|1        |228 |
|7 |      MERGE EXCEPT DISTINCT |        |1        |228 |
|8 |       EXPRESSION           |        |1        |1   |
|9 |       PX PARTITION ITERATOR|        |1        |228 |
|10|        TABLE SCAN          |t1      |1        |228 |
|11|    PX COORDINATOR          |        |1        |228 |
|12|     EXCHANGE OUT DISTR     |:EX20000|1        |228 |
|13|      PX PARTITION ITERATOR |        |1        |228 |
|14|       TABLE SCAN           |t2      |1        |228 |
=========================================================

Outputs & filters: 
-------------------------------------
  0 - output([t3.a], [t4.a], [t4.b], [t4.c]), filter(nil), rowset=256, 
      conds(nil), nl_params_(nil)
  1 - output([t4.a], [t4.b], [t4.c]), filter([t4.a = 1]), rowset=256, 
      access([t4.a], [t4.b], [t4.c]), partitions(p1)
  2 - output([t3.a]), filter(nil), rowset=256
  3 - output([t3.a]), filter(nil), rowset=256, 
      access([t3.a])
  4 - output([EXCEPT([1])]), filter(nil), rowset=256
  5 - output([EXCEPT([1])]), filter(nil), rowset=256
  6 - output([EXCEPT([1])]), filter(nil), rowset=256, dop=1
  7 - output([EXCEPT([1])]), filter(nil), rowset=256
  8 - output([1]), filter(nil)
      values({1})
  9 - output([cast(t1.a, BIGINT(20, 0))]), filter(nil), rowset=256
  10 - output([cast(t1.a, BIGINT(20, 0))]), filter([cast(t1.a, BIGINT(20, 0)) = 1]), rowset=256, 
      access([t1.a]), partitions(p[0-4])
  11 - output([cast(t2.b, BIGINT(20, 0))]), filter(nil), rowset=256
  12 - output([cast(t2.b, BIGINT(20, 0))]), filter(nil), rowset=256, dop=1
  13 - output([cast(t2.b, BIGINT(20, 0))]), filter(nil), rowset=256
  14 - output([cast(t2.b, BIGINT(20, 0))]), filter([cast(t2.b, BIGINT(20, 0)) = 1]), rowset=256, 
      access([t2.b]), partitions(p[0-4])

explain select * from (select a from t1 except select a from t2 except select 1 a) as t3, t1 as t4 where t3.a = t4.a;
Query Plan
==========================================================
|ID|OPERATOR                     |NAME    |EST. ROWS|COST|
----------------------------------------------------------
|0 |PX COORDINATOR               |        |1        |687 |
|1 | EXCHANGE OUT DISTR          |:EX10001|1        |686 |
|2 |  HASH JOIN                  |        |1        |685 |
|3 |   EXCHANGE IN DISTR         |        |1        |457 |
|4 |    EXCHANGE OUT DISTR (PKEY)|:EX10000|1        |457 |
|5 |     SUBPLAN SCAN            |t3      |1        |456 |
|6 |      HASH EXCEPT DISTINCT   |        |1        |456 |
|7 |       PX PARTITION ITERATOR |        |1        |456 |
|8 |        HASH EXCEPT DISTINCT |        |1        |456 |
|9 |         TABLE SCAN          |t1      |1        |228 |
|10|         TABLE SCAN          |t2      |1        |228 |
|11|       EXPRESSION            |        |1        |1   |
|12|   PX PARTITION ITERATOR     |        |1        |228 |
|13|    TABLE SCAN               |t4      |1        |228 |
==========================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t3.a, t4.a, t4.b, t4.c)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t3.a, t4.a, t4.b, t4.c)]), filter(nil), rowset=256, dop=1
  2 - output([t3.a], [t4.a], [t4.b], [t4.c]), filter(nil), rowset=256, 
      equal_conds([t3.a = t4.a]), other_conds(nil)
  3 - output([t3.a]), filter(nil), rowset=256
  4 - (#keys=1, [t3.a]), output([t3.a]), filter(nil), rowset=256, dop=1
  5 - output([t3.a]), filter(nil), rowset=256, 
      access([t3.a])
  6 - output([EXCEPT([1])]), filter(nil), rowset=256
  7 - output([cast(EXCEPT([1]), BIGINT(20, 0))]), filter(nil), rowset=256
  8 - output([cast(EXCEPT([1]), BIGINT(20, 0))]), filter(nil), rowset=256
  9 - output([t1.a]), filter(nil), rowset=256, 
      access([t1.a]), partitions(p[0-4])
  10 - output([t2.a]), filter(nil), rowset=256, 
      access([t2.a]), partitions(p[0-4])
  11 - output([1]), filter(nil)
      values({1})
  12 - output([t4.a], [t4.b], [t4.c]), filter(nil), rowset=256
  13 - output([t4.a], [t4.b], [t4.c]), filter(nil), rowset=256, 
      access([t4.a], [t4.b], [t4.c]), partitions(p[0-4])

explain select * from (select t2.a from t1, t2 where t1.a = t2.a except select a from t1 as t3) as t4, t2 as t5 where t4.a = t5.a;
Query Plan
======================================================
|ID|OPERATOR                 |NAME    |EST. ROWS|COST|
------------------------------------------------------
|0 |PX COORDINATOR           |        |1        |913 |
|1 | EXCHANGE OUT DISTR      |:EX10000|1        |913 |
|2 |  PX PARTITION ITERATOR  |        |1        |912 |
|3 |   HASH JOIN             |        |1        |912 |
|4 |    SUBPLAN SCAN         |t4      |1        |684 |
|5 |     HASH EXCEPT DISTINCT|        |1        |684 |
|6 |      HASH JOIN          |        |1        |456 |
|7 |       TABLE SCAN        |t1      |1        |228 |
|8 |       TABLE SCAN        |t2      |1        |228 |
|9 |      TABLE SCAN         |t3      |1        |228 |
|10|    TABLE SCAN           |t5      |1        |228 |
======================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t4.a, t5.a, t5.b, t5.c)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t4.a, t5.a, t5.b, t5.c)]), filter(nil), rowset=256, dop=1
  2 - output([t4.a], [t5.a], [t5.b], [t5.c]), filter(nil), rowset=256
  3 - output([t4.a], [t5.a], [t5.b], [t5.c]), filter(nil), rowset=256, 
      equal_conds([t4.a = t5.a]), other_conds(nil)
  4 - output([t4.a]), filter(nil), rowset=256, 
      access([t4.a])
  5 - output([EXCEPT([1])]), filter(nil), rowset=256
  6 - output([t2.a]), filter(nil), rowset=256, 
      equal_conds([t1.a = t2.a]), other_conds(nil)
  7 - output([t1.a]), filter(nil), rowset=256, 
      access([t1.a]), partitions(p[0-4])
  8 - output([t2.a]), filter(nil), rowset=256, 
      access([t2.a]), partitions(p[0-4])
  9 - output([t3.a]), filter(nil), rowset=256, 
      access([t3.a]), partitions(p[0-4])
  10 - output([t5.a], [t5.b], [t5.c]), filter(nil), rowset=256, 
      access([t5.a], [t5.b], [t5.c]), partitions(p[0-4])

explain select * from (select 1 c1, 1 c2) t2 inner join t1 on t2.c1 = t1.a;
Query Plan
===================================================
|ID|OPERATOR                  |NAME|EST. ROWS|COST|
---------------------------------------------------
|0 |NESTED-LOOP JOIN CARTESIAN|    |1        |46  |
|1 | TABLE SCAN               |t1  |1        |46  |
|2 | MATERIAL                 |    |1        |1   |
|3 |  SUBPLAN SCAN            |t2  |1        |1   |
|4 |   EXPRESSION             |    |1        |1   |
===================================================

Outputs & filters: 
-------------------------------------
  0 - output([t2.c1], [t2.c2], [t1.a], [t1.b], [t1.c]), filter(nil), rowset=256, 
      conds(nil), nl_params_(nil)
  1 - output([t1.a], [t1.b], [t1.c]), filter([t1.a = 1]), rowset=256, 
      access([t1.a], [t1.b], [t1.c]), partitions(p1)
  2 - output([t2.c1], [t2.c2]), filter(nil), rowset=256
  3 - output([t2.c1], [t2.c2]), filter(nil), rowset=256, 
      access([t2.c1], [t2.c2])
  4 - output([1], [1]), filter(nil)
      values({1, 1})

explain select * from (select 1 c1, 1 c2) t2 left join t1 on t2.c1 = t1.a;
Query Plan
=========================================================
|ID|OPERATOR                        |NAME|EST. ROWS|COST|
---------------------------------------------------------
|0 |NESTED-LOOP OUTER JOIN CARTESIAN|    |1        |47  |
|1 | SUBPLAN SCAN                   |t2  |1        |1   |
|2 |  EXPRESSION                    |    |1        |1   |
|3 | TABLE SCAN                     |t1  |1        |46  |
=========================================================

Outputs & filters: 
-------------------------------------
  0 - output([t2.c1], [t2.c2], [t1.a], [t1.b], [t1.c]), filter(nil), rowset=256, 
      conds(nil), nl_params_(nil)
  1 - output([t2.c1], [t2.c2]), filter(nil), rowset=256, 
      access([t2.c1], [t2.c2])
  2 - output([1], [1]), filter(nil)
      values({1, 1})
  3 - output([t1.a], [t1.b], [t1.c]), filter([1 = t1.a]), rowset=256, 
      access([t1.a], [t1.b], [t1.c]), partitions(p1)

explain select * from (select 1 c1, 1 c2) t2 right join t1 on t2.c1 = t1.a;
Query Plan
=====================================================
|ID|OPERATOR                |NAME    |EST. ROWS|COST|
-----------------------------------------------------
|0 |PX COORDINATOR          |        |1        |231 |
|1 | EXCHANGE OUT DISTR     |:EX10000|1        |230 |
|2 |  NESTED-LOOP OUTER JOIN|        |1        |228 |
|3 |   PX PARTITION ITERATOR|        |1        |228 |
|4 |    TABLE SCAN          |t1      |1        |228 |
|5 |   MATERIAL             |        |1        |1   |
|6 |    SUBPLAN SCAN        |t2      |1        |1   |
|7 |     EXPRESSION         |        |1        |1   |
=====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t2.c1, t2.c2, t1.a, t1.b, t1.c)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t2.c1, t2.c2, t1.a, t1.b, t1.c)]), filter(nil), rowset=256, dop=1
  2 - output([t1.a], [t1.b], [t1.c], [t2.c1], [t2.c2]), filter(nil), rowset=256, 
      conds([1 = t1.a]), nl_params_(nil)
  3 - output([t1.a], [t1.b], [t1.c]), filter(nil), rowset=256
  4 - output([t1.a], [t1.b], [t1.c]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c]), partitions(p[0-4])
  5 - output([t2.c1], [t2.c2]), filter(nil), rowset=256
  6 - output([t2.c1], [t2.c2]), filter(nil), rowset=256, 
      access([t2.c1], [t2.c2])
  7 - output([1], [1]), filter(nil)
      values({1, 1})

explain select * from (select 1 c1, 1 c2) t2 full join t1 on t2.c1 = t1.a;
Query Plan
==========================================================
|ID|OPERATOR                     |NAME    |EST. ROWS|COST|
----------------------------------------------------------
|0 |PX COORDINATOR               |        |1        |232 |
|1 | EXCHANGE OUT DISTR          |:EX10001|1        |231 |
|2 |  HASH FULL OUTER JOIN       |        |1        |229 |
|3 |   EXCHANGE IN DISTR         |        |1        |1   |
|4 |    EXCHANGE OUT DISTR (PKEY)|:EX10000|1        |1   |
|5 |     SUBPLAN SCAN            |t2      |1        |1   |
|6 |      EXPRESSION             |        |1        |1   |
|7 |   PX PARTITION ITERATOR     |        |1        |228 |
|8 |    TABLE SCAN               |t1      |1        |228 |
==========================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t2.c1, t2.c2, t1.a, t1.b, t1.c)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t2.c1, t2.c2, t1.a, t1.b, t1.c)]), filter(nil), rowset=256, dop=1
  2 - output([t2.c1], [t1.a], [t2.c2], [t1.b], [t1.c]), filter(nil), rowset=256, 
      equal_conds([t2.c1 = t1.a]), other_conds(nil)
  3 - output([t2.c1], [t2.c2]), filter(nil), rowset=256
  4 - (#keys=1, [t2.c1]), output([t2.c1], [t2.c2]), filter(nil), rowset=256, is_single, dop=1
  5 - output([t2.c1], [t2.c2]), filter(nil), rowset=256, 
      access([t2.c1], [t2.c2])
  6 - output([1], [1]), filter(nil)
      values({1, 1})
  7 - output([t1.a], [t1.b], [t1.c]), filter(nil), rowset=256
  8 - output([t1.a], [t1.b], [t1.c]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c]), partitions(p[0-4])

explain select * from t1 inner join (select 1 c1, 1 c2) t2 on t2.c1 = t1.a;
Query Plan
===================================================
|ID|OPERATOR                  |NAME|EST. ROWS|COST|
---------------------------------------------------
|0 |NESTED-LOOP JOIN CARTESIAN|    |1        |46  |
|1 | TABLE SCAN               |t1  |1        |46  |
|2 | MATERIAL                 |    |1        |1   |
|3 |  SUBPLAN SCAN            |t2  |1        |1   |
|4 |   EXPRESSION             |    |1        |1   |
===================================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t2.c1], [t2.c2]), filter(nil), rowset=256, 
      conds(nil), nl_params_(nil)
  1 - output([t1.a], [t1.b], [t1.c]), filter([t1.a = 1]), rowset=256, 
      access([t1.a], [t1.b], [t1.c]), partitions(p1)
  2 - output([t2.c1], [t2.c2]), filter(nil), rowset=256
  3 - output([t2.c1], [t2.c2]), filter(nil), rowset=256, 
      access([t2.c1], [t2.c2])
  4 - output([1], [1]), filter(nil)
      values({1, 1})

explain select * from t1 left join (select 1 c1, 1 c2) t2 on t2.c1 = t1.a;
Query Plan
=====================================================
|ID|OPERATOR                |NAME    |EST. ROWS|COST|
-----------------------------------------------------
|0 |PX COORDINATOR          |        |1        |231 |
|1 | EXCHANGE OUT DISTR     |:EX10000|1        |230 |
|2 |  NESTED-LOOP OUTER JOIN|        |1        |228 |
|3 |   PX PARTITION ITERATOR|        |1        |228 |
|4 |    TABLE SCAN          |t1      |1        |228 |
|5 |   MATERIAL             |        |1        |1   |
|6 |    SUBPLAN SCAN        |t2      |1        |1   |
|7 |     EXPRESSION         |        |1        |1   |
=====================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t2.c1, t2.c2)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t2.c1, t2.c2)]), filter(nil), rowset=256, dop=1
  2 - output([t1.a], [t1.b], [t1.c], [t2.c1], [t2.c2]), filter(nil), rowset=256, 
      conds([1 = t1.a]), nl_params_(nil)
  3 - output([t1.a], [t1.b], [t1.c]), filter(nil), rowset=256
  4 - output([t1.a], [t1.b], [t1.c]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c]), partitions(p[0-4])
  5 - output([t2.c1], [t2.c2]), filter(nil), rowset=256
  6 - output([t2.c1], [t2.c2]), filter(nil), rowset=256, 
      access([t2.c1], [t2.c2])
  7 - output([1], [1]), filter(nil)
      values({1, 1})

explain select * from t1 right join (select 1 c1, 1 c2) t2 on t2.c1 = t1.a;
Query Plan
=========================================================
|ID|OPERATOR                        |NAME|EST. ROWS|COST|
---------------------------------------------------------
|0 |NESTED-LOOP OUTER JOIN CARTESIAN|    |1        |47  |
|1 | SUBPLAN SCAN                   |t2  |1        |1   |
|2 |  EXPRESSION                    |    |1        |1   |
|3 | TABLE SCAN                     |t1  |1        |46  |
=========================================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t2.c1], [t2.c2]), filter(nil), rowset=256, 
      conds(nil), nl_params_(nil)
  1 - output([t2.c1], [t2.c2]), filter(nil), rowset=256, 
      access([t2.c1], [t2.c2])
  2 - output([1], [1]), filter(nil)
      values({1, 1})
  3 - output([t1.a], [t1.b], [t1.c]), filter([1 = t1.a]), rowset=256, 
      access([t1.a], [t1.b], [t1.c]), partitions(p1)

explain select * from t1 full join (select 1 c1, 1 c2) t2 on t2.c1 = t1.a;
Query Plan
==========================================================
|ID|OPERATOR                     |NAME    |EST. ROWS|COST|
----------------------------------------------------------
|0 |PX COORDINATOR               |        |1        |232 |
|1 | EXCHANGE OUT DISTR          |:EX10001|1        |231 |
|2 |  HASH FULL OUTER JOIN       |        |1        |229 |
|3 |   EXCHANGE IN DISTR         |        |1        |1   |
|4 |    EXCHANGE OUT DISTR (PKEY)|:EX10000|1        |1   |
|5 |     SUBPLAN SCAN            |t2      |1        |1   |
|6 |      EXPRESSION             |        |1        |1   |
|7 |   PX PARTITION ITERATOR     |        |1        |228 |
|8 |    TABLE SCAN               |t1      |1        |228 |
==========================================================

Outputs & filters: 
-------------------------------------
  0 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t2.c1, t2.c2)]), filter(nil), rowset=256
  1 - output([INTERNAL_FUNCTION(t1.a, t1.b, t1.c, t2.c1, t2.c2)]), filter(nil), rowset=256, dop=1
  2 - output([t2.c1], [t1.a], [t2.c2], [t1.b], [t1.c]), filter(nil), rowset=256, 
      equal_conds([t2.c1 = t1.a]), other_conds(nil)
  3 - output([t2.c1], [t2.c2]), filter(nil), rowset=256
  4 - (#keys=1, [t2.c1]), output([t2.c1], [t2.c2]), filter(nil), rowset=256, is_single, dop=1
  5 - output([t2.c1], [t2.c2]), filter(nil), rowset=256, 
      access([t2.c1], [t2.c2])
  6 - output([1], [1]), filter(nil)
      values({1, 1})
  7 - output([t1.a], [t1.b], [t1.c]), filter(nil), rowset=256
  8 - output([t1.a], [t1.b], [t1.c]), filter(nil), rowset=256, 
      access([t1.a], [t1.b], [t1.c]), partitions(p[0-4])

drop table if exists t1, t2, t3;
